// This file is auto-generated. Don't modify it.
import { Message, Group, MsgCat } from './message'

namespace Fields {
    export class Account {
        public static tag(): number { return 1 }
        constructor() {} 
    }
    export class AdvId {
        public static tag(): number { return 2 }
        constructor() {} 
    }
    export class AdvRefID {
        public static tag(): number { return 3 }
        constructor() {} 
    }
    export class AdvSide {
        public static tag(): number { return 4 }
        public static BUY = "B"
        public static SELL = "S"
        public static TRADE = "T"
        public static CROSS = "X"
        constructor() {} 
    }
    export class AdvTransType {
        public static tag(): number { return 5 }
        public static NEW = "N"
        public static CANCEL = "C"
        public static REPLACE = "R"
        constructor() {} 
    }
    export class AvgPx {
        public static tag(): number { return 6 }
        constructor() {} 
    }
    export class BeginSeqNo {
        public static tag(): number { return 7 }
        constructor() {} 
    }
    export class BeginString {
        public static tag(): number { return 8 }
        constructor() {} 
    }
    export class BodyLength {
        public static tag(): number { return 9 }
        constructor() {} 
    }
    export class CheckSum {
        public static tag(): number { return 10 }
        constructor() {} 
    }
    export class ClOrdID {
        public static tag(): number { return 11 }
        constructor() {} 
    }
    export class Commission {
        public static tag(): number { return 12 }
        constructor() {} 
    }
    export class CommType {
        public static tag(): number { return 13 }
        public static PER_UNIT = "1"
        public static PERCENT = "2"
        public static ABSOLUTE = "3"
        public static PERCENTAGE_WAIVED_4 = "4"
        public static PERCENTAGE_WAIVED_5 = "5"
        public static POINTS_PER_BOND_OR_CONTRACT = "6"
        constructor() {} 
    }
    export class CumQty {
        public static tag(): number { return 14 }
        constructor() {} 
    }
    export class Currency {
        public static tag(): number { return 15 }
        constructor() {} 
    }
    export class EndSeqNo {
        public static tag(): number { return 16 }
        constructor() {} 
    }
    export class ExecID {
        public static tag(): number { return 17 }
        constructor() {} 
    }
    export class ExecInst {
        public static tag(): number { return 18 }
        public static STAY_ON_OFFER_SIDE = "0"
        public static NOT_HELD = "1"
        public static WORK = "2"
        public static GO_ALONG = "3"
        public static OVER_THE_DAY = "4"
        public static HELD = "5"
        public static PARTICIPATE_DONT_INITIATE = "6"
        public static STRICT_SCALE = "7"
        public static TRY_TO_SCALE = "8"
        public static STAY_ON_BID_SIDE = "9"
        public static NO_CROSS = "A"
        public static OK_TO_CROSS = "B"
        public static CALL_FIRST = "C"
        public static PERCENT_OF_VOLUME = "D"
        public static DO_NOT_INCREASE = "E"
        public static DO_NOT_REDUCE = "F"
        public static ALL_OR_NONE = "G"
        public static REINSTATE_ON_SYSTEM_FAILURE = "H"
        public static INSTITUTIONS_ONLY = "I"
        public static REINSTATE_ON_TRADING_HALT = "J"
        public static CANCEL_ON_TRADING_HALT = "K"
        public static LAST_PEG = "L"
        public static MID_PRICE_PEG = "M"
        public static NON_NEGOTIABLE = "N"
        public static OPENING_PEG = "O"
        public static MARKET_PEG = "P"
        public static CANCEL_ON_SYSTEM_FAILURE = "Q"
        public static PRIMARY_PEG = "R"
        public static SUSPEND = "S"
        public static FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = "T"
        public static CUSTOMER_DISPLAY_INSTRUCTION = "U"
        public static NETTING = "V"
        public static PEG_TO_VWAP = "W"
        public static TRADE_ALONG = "X"
        public static TRY_TO_STOP = "Y"
        public static CANCEL_IF_NOT_BEST = "Z"
        public static TRAILING_STOP_PEG = "a"
        public static STRICT_LIMIT = "b"
        public static IGNORE_PRICE_VALIDITY_CHECKS = "c"
        public static PEG_TO_LIMIT_PRICE = "d"
        public static WORK_TO_TARGET_STRATEGY = "e"
        public static INTERMARKET_SWEEP = "f"
        public static EXTERNAL_ROUTING_ALLOWED = "g"
        public static EXTERNAL_ROUTING_NOT_ALLOWED = "h"
        public static IMBALANCE_ONLY = "i"
        public static SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE = "j"
        public static BEST_EXECUTION = "k"
        public static SUSPEND_ON_SYSTEM_FAILURE = "l"
        public static SUSPEND_ON_TRADING_HALT = "m"
        public static REINSTATE_ON_CONNECTION_LOSS = "n"
        public static CANCEL_ON_CONNECTION_LOSS = "o"
        public static SUSPEND_ON_CONNECTION_LOSS = "p"
        public static RELEASE_FROM_SUSPENSION = "q"
        public static EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED = "r"
        public static EXECUTE_AS_DURATION_NEUTRAL = "s"
        public static EXECUTE_AS_FX_NEUTRAL = "t"
        constructor() {} 
    }
    export class ExecRefID {
        public static tag(): number { return 19 }
        constructor() {} 
    }
    export class HandlInst {
        public static tag(): number { return 21 }
        public static AUTOMATED_EXECUTION_ORDER_PRIVATE_NO_BROKER_INTERVENTION = "1"
        public static AUTOMATED_EXECUTION_ORDER_PUBLIC_BROKER_INTERVENTION_OK = "2"
        public static MANUAL_ORDER_BEST_EXECUTION = "3"
        constructor() {} 
    }
    export class SecurityIDSource {
        public static tag(): number { return 22 }
        public static CUSIP = "1"
        public static SEDOL = "2"
        public static QUIK = "3"
        public static ISIN_NUMBER = "4"
        public static RIC_CODE = "5"
        public static ISO_CURRENCY_CODE = "6"
        public static ISO_COUNTRY_CODE = "7"
        public static EXCHANGE_SYMBOL = "8"
        public static CONSOLIDATED_TAPE_ASSOCIATION = "9"
        public static BLOOMBERG_SYMBOL = "A"
        public static WERTPAPIER = "B"
        public static DUTCH = "C"
        public static VALOREN = "D"
        public static SICOVAM = "E"
        public static BELGIAN = "F"
        public static COMMON = "G"
        public static CLEARING_HOUSE = "H"
        public static ISDA_FPML_PRODUCT_SPECIFICATION = "I"
        public static OPTION_PRICE_REPORTING_AUTHORITY = "J"
        public static ISDA_FPML_PRODUCT_URL = "K"
        public static LETTER_OF_CREDIT = "L"
        public static MARKETPLACE_ASSIGNED_IDENTIFIER = "M"
        constructor() {} 
    }
    export class IOIID {
        public static tag(): number { return 23 }
        constructor() {} 
    }
    export class IOIQltyInd {
        public static tag(): number { return 25 }
        public static HIGH = "H"
        public static LOW = "L"
        public static MEDIUM = "M"
        constructor() {} 
    }
    export class IOIRefID {
        public static tag(): number { return 26 }
        constructor() {} 
    }
    export class IOIQty {
        public static tag(): number { return 27 }
        public static SMALL = "S"
        public static MEDIUM = "M"
        public static LARGE = "L"
        public static UNDISCLOSED_QUANTITY = "U"
        constructor() {} 
    }
    export class IOITransType {
        public static tag(): number { return 28 }
        public static NEW = "N"
        public static CANCEL = "C"
        public static REPLACE = "R"
        constructor() {} 
    }
    export class LastCapacity {
        public static tag(): number { return 29 }
        public static AGENT = "1"
        public static CROSS_AS_AGENT = "2"
        public static CROSS_AS_PRINCIPAL = "3"
        public static PRINCIPAL = "4"
        constructor() {} 
    }
    export class LastMkt {
        public static tag(): number { return 30 }
        constructor() {} 
    }
    export class LastPx {
        public static tag(): number { return 31 }
        constructor() {} 
    }
    export class LastQty {
        public static tag(): number { return 32 }
        constructor() {} 
    }
    export class NoLinesOfText {
        public static tag(): number { return 33 }
        constructor() {} 
    }
    export class MsgSeqNum {
        public static tag(): number { return 34 }
        constructor() {} 
    }
    export class MsgType {
        public static tag(): number { return 35 }
        public static HEARTBEAT = "0"
        public static TESTREQUEST = "1"
        public static RESENDREQUEST = "2"
        public static REJECT = "3"
        public static SEQUENCERESET = "4"
        public static LOGOUT = "5"
        public static IOI = "6"
        public static ADVERTISEMENT = "7"
        public static EXECUTIONREPORT = "8"
        public static ORDERCANCELREJECT = "9"
        public static LOGON = "A"
        public static DERIVATIVESECURITYLIST = "AA"
        public static NEWORDERMULTILEG = "AB"
        public static MULTILEGORDERCANCELREPLACE = "AC"
        public static TRADECAPTUREREPORTREQUEST = "AD"
        public static TRADECAPTUREREPORT = "AE"
        public static ORDERMASSSTATUSREQUEST = "AF"
        public static QUOTEREQUESTREJECT = "AG"
        public static RFQREQUEST = "AH"
        public static QUOTESTATUSREPORT = "AI"
        public static QUOTERESPONSE = "AJ"
        public static CONFIRMATION = "AK"
        public static POSITIONMAINTENANCEREQUEST = "AL"
        public static POSITIONMAINTENANCEREPORT = "AM"
        public static REQUESTFORPOSITIONS = "AN"
        public static REQUESTFORPOSITIONSACK = "AO"
        public static POSITIONREPORT = "AP"
        public static TRADECAPTUREREPORTREQUESTACK = "AQ"
        public static TRADECAPTUREREPORTACK = "AR"
        public static ALLOCATIONREPORT = "AS"
        public static ALLOCATIONREPORTACK = "AT"
        public static CONFIRMATIONACK = "AU"
        public static SETTLEMENTINSTRUCTIONREQUEST = "AV"
        public static ASSIGNMENTREPORT = "AW"
        public static COLLATERALREQUEST = "AX"
        public static COLLATERALASSIGNMENT = "AY"
        public static COLLATERALRESPONSE = "AZ"
        public static NEWS = "B"
        public static COLLATERALREPORT = "BA"
        public static COLLATERALINQUIRY = "BB"
        public static NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST = "BC"
        public static NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE = "BD"
        public static USERREQUEST = "BE"
        public static USERRESPONSE = "BF"
        public static COLLATERALINQUIRYACK = "BG"
        public static CONFIRMATIONREQUEST = "BH"
        public static TRADINGSESSIONLISTREQUEST = "BI"
        public static TRADINGSESSIONLIST = "BJ"
        public static SECURITYLISTUPDATEREPORT = "BK"
        public static ADJUSTEDPOSITIONREPORT = "BL"
        public static ALLOCATIONINSTRUCTIONALERT = "BM"
        public static EXECUTIONACKNOWLEDGEMENT = "BN"
        public static CONTRARYINTENTIONREPORT = "BO"
        public static SECURITYDEFINITIONUPDATEREPORT = "BP"
        public static SETTLEMENTOBLIGATIONREPORT = "BQ"
        public static DERIVATIVESECURITYLISTUPDATEREPORT = "BR"
        public static TRADINGSESSIONLISTUPDATEREPORT = "BS"
        public static MARKETDEFINITIONREQUEST = "BT"
        public static MARKETDEFINITION = "BU"
        public static MARKETDEFINITIONUPDATEREPORT = "BV"
        public static APPLICATIONMESSAGEREQUEST = "BW"
        public static APPLICATIONMESSAGEREQUESTACK = "BX"
        public static APPLICATIONMESSAGEREPORT = "BY"
        public static ORDERMASSACTIONREPORT = "BZ"
        public static EMAIL = "C"
        public static ORDERMASSACTIONREQUEST = "CA"
        public static USERNOTIFICATION = "CB"
        public static STREAMASSIGNMENTREQUEST = "CC"
        public static STREAMASSIGNMENTREPORT = "CD"
        public static STREAMASSIGNMENTREPORTACK = "CE"
        public static NEWORDERSINGLE = "D"
        public static NEWORDERLIST = "E"
        public static ORDERCANCELREQUEST = "F"
        public static ORDERCANCELREPLACEREQUEST = "G"
        public static ORDERSTATUSREQUEST = "H"
        public static ALLOCATIONINSTRUCTION = "J"
        public static LISTCANCELREQUEST = "K"
        public static LISTEXECUTE = "L"
        public static LISTSTATUSREQUEST = "M"
        public static LISTSTATUS = "N"
        public static ALLOCATIONINSTRUCTIONACK = "P"
        public static DONTKNOWTRADE = "Q"
        public static QUOTEREQUEST = "R"
        public static QUOTE = "S"
        public static SETTLEMENTINSTRUCTIONS = "T"
        public static MARKETDATAREQUEST = "V"
        public static MARKETDATASNAPSHOTFULLREFRESH = "W"
        public static MARKETDATAINCREMENTALREFRESH = "X"
        public static MARKETDATAREQUESTREJECT = "Y"
        public static QUOTECANCEL = "Z"
        public static QUOTESTATUSREQUEST = "a"
        public static MASSQUOTEACKNOWLEDGEMENT = "b"
        public static SECURITYDEFINITIONREQUEST = "c"
        public static SECURITYDEFINITION = "d"
        public static SECURITYSTATUSREQUEST = "e"
        public static SECURITYSTATUS = "f"
        public static TRADINGSESSIONSTATUSREQUEST = "g"
        public static TRADINGSESSIONSTATUS = "h"
        public static MASSQUOTE = "i"
        public static BUSINESSMESSAGEREJECT = "j"
        public static BIDREQUEST = "k"
        public static BIDRESPONSE = "l"
        public static LISTSTRIKEPRICE = "m"
        public static XMLNONFIX = "n"
        public static REGISTRATIONINSTRUCTIONS = "o"
        public static REGISTRATIONINSTRUCTIONSRESPONSE = "p"
        public static ORDERMASSCANCELREQUEST = "q"
        public static ORDERMASSCANCELREPORT = "r"
        public static NEWORDERCROSS = "s"
        public static CROSSORDERCANCELREPLACEREQUEST = "t"
        public static CROSSORDERCANCELREQUEST = "u"
        public static SECURITYTYPEREQUEST = "v"
        public static SECURITYTYPES = "w"
        public static SECURITYLISTREQUEST = "x"
        public static SECURITYLIST = "y"
        public static DERIVATIVESECURITYLISTREQUEST = "z"
        constructor() {} 
    }
    export class NewSeqNo {
        public static tag(): number { return 36 }
        constructor() {} 
    }
    export class OrderID {
        public static tag(): number { return 37 }
        constructor() {} 
    }
    export class OrderQty {
        public static tag(): number { return 38 }
        constructor() {} 
    }
    export class OrdStatus {
        public static tag(): number { return 39 }
        public static NEW = "0"
        public static PARTIALLY_FILLED = "1"
        public static FILLED = "2"
        public static DONE_FOR_DAY = "3"
        public static CANCELED = "4"
        public static REPLACED = "5"
        public static PENDING_CANCEL = "6"
        public static STOPPED = "7"
        public static REJECTED = "8"
        public static SUSPENDED = "9"
        public static PENDING_NEW = "A"
        public static CALCULATED = "B"
        public static EXPIRED = "C"
        public static ACCEPTED_FOR_BIDDING = "D"
        public static PENDING_REPLACE = "E"
        constructor() {} 
    }
    export class OrdType {
        public static tag(): number { return 40 }
        public static MARKET = "1"
        public static LIMIT = "2"
        public static STOP = "3"
        public static STOP_LIMIT = "4"
        public static MARKET_ON_CLOSE = "5"
        public static WITH_OR_WITHOUT = "6"
        public static LIMIT_OR_BETTER = "7"
        public static LIMIT_WITH_OR_WITHOUT = "8"
        public static ON_BASIS = "9"
        public static ON_CLOSE = "A"
        public static LIMIT_ON_CLOSE = "B"
        public static FOREX_MARKET = "C"
        public static PREVIOUSLY_QUOTED = "D"
        public static PREVIOUSLY_INDICATED = "E"
        public static FOREX_LIMIT = "F"
        public static FOREX_SWAP = "G"
        public static FOREX_PREVIOUSLY_QUOTED = "H"
        public static FUNARI = "I"
        public static MARKET_IF_TOUCHED = "J"
        public static MARKET_WITH_LEFT_OVER_AS_LIMIT = "K"
        public static PREVIOUS_FUND_VALUATION_POINT = "L"
        public static NEXT_FUND_VALUATION_POINT = "M"
        public static PEGGED = "P"
        public static COUNTER_ORDER_SELECTION = "Q"
        constructor() {} 
    }
    export class OrigClOrdID {
        public static tag(): number { return 41 }
        constructor() {} 
    }
    export class OrigTime {
        public static tag(): number { return 42 }
        constructor() {} 
    }
    export class PossDupFlag {
        public static tag(): number { return 43 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class Price {
        public static tag(): number { return 44 }
        constructor() {} 
    }
    export class RefSeqNum {
        public static tag(): number { return 45 }
        constructor() {} 
    }
    export class SecurityID {
        public static tag(): number { return 48 }
        constructor() {} 
    }
    export class SenderCompID {
        public static tag(): number { return 49 }
        constructor() {} 
    }
    export class SenderSubID {
        public static tag(): number { return 50 }
        constructor() {} 
    }
    export class SendingTime {
        public static tag(): number { return 52 }
        constructor() {} 
    }
    export class Quantity {
        public static tag(): number { return 53 }
        constructor() {} 
    }
    export class Side {
        public static tag(): number { return 54 }
        public static BUY = "1"
        public static SELL = "2"
        public static BUY_MINUS = "3"
        public static SELL_PLUS = "4"
        public static SELL_SHORT = "5"
        public static SELL_SHORT_EXEMPT = "6"
        public static UNDISCLOSED = "7"
        public static CROSS = "8"
        public static CROSS_SHORT = "9"
        public static CROSS_SHORT_EXEMPT = "A"
        public static AS_DEFINED = "B"
        public static OPPOSITE = "C"
        public static SUBSCRIBE = "D"
        public static REDEEM = "E"
        public static LEND = "F"
        public static BORROW = "G"
        constructor() {} 
    }
    export class Symbol {
        public static tag(): number { return 55 }
        constructor() {} 
    }
    export class TargetCompID {
        public static tag(): number { return 56 }
        constructor() {} 
    }
    export class TargetSubID {
        public static tag(): number { return 57 }
        constructor() {} 
    }
    export class Text {
        public static tag(): number { return 58 }
        constructor() {} 
    }
    export class TimeInForce {
        public static tag(): number { return 59 }
        public static DAY = "0"
        public static GOOD_TILL_CANCEL = "1"
        public static AT_THE_OPENING = "2"
        public static IMMEDIATE_OR_CANCEL = "3"
        public static FILL_OR_KILL = "4"
        public static GOOD_TILL_CROSSING = "5"
        public static GOOD_TILL_DATE = "6"
        public static AT_THE_CLOSE = "7"
        public static GOOD_THROUGH_CROSSING = "8"
        public static AT_CROSSING = "9"
        constructor() {} 
    }
    export class TransactTime {
        public static tag(): number { return 60 }
        constructor() {} 
    }
    export class Urgency {
        public static tag(): number { return 61 }
        public static NORMAL = "0"
        public static FLASH = "1"
        public static BACKGROUND = "2"
        constructor() {} 
    }
    export class ValidUntilTime {
        public static tag(): number { return 62 }
        constructor() {} 
    }
    export class SettlType {
        public static tag(): number { return 63 }
        public static REGULAR = "0"
        public static CASH = "1"
        public static NEXT_DAY = "2"
        public static T_PLUS_2 = "3"
        public static T_PLUS_3 = "4"
        public static T_PLUS_4 = "5"
        public static FUTURE = "6"
        public static WHEN_AND_IF_ISSUED = "7"
        public static SELLERS_OPTION = "8"
        public static T_PLUS_5 = "9"
        public static BROKEN_DATE = "B"
        public static FX_SPOT_NEXT_SETTLEMENT = "C"
        constructor() {} 
    }
    export class SettlDate {
        public static tag(): number { return 64 }
        constructor() {} 
    }
    export class SymbolSfx {
        public static tag(): number { return 65 }
        public static EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE = "CD"
        public static WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN = "WI"
        constructor() {} 
    }
    export class ListID {
        public static tag(): number { return 66 }
        constructor() {} 
    }
    export class ListSeqNo {
        public static tag(): number { return 67 }
        constructor() {} 
    }
    export class TotNoOrders {
        public static tag(): number { return 68 }
        constructor() {} 
    }
    export class ListExecInst {
        public static tag(): number { return 69 }
        constructor() {} 
    }
    export class AllocID {
        public static tag(): number { return 70 }
        constructor() {} 
    }
    export class AllocTransType {
        public static tag(): number { return 71 }
        public static NEW = "0"
        public static REPLACE = "1"
        public static CANCEL = "2"
        public static PRELIMINARY = "3"
        public static CALCULATED = "4"
        public static CALCULATED_WITHOUT_PRELIMINARY = "5"
        public static REVERSAL = "6"
        constructor() {} 
    }
    export class RefAllocID {
        public static tag(): number { return 72 }
        constructor() {} 
    }
    export class NoOrders {
        public static tag(): number { return 73 }
        constructor() {} 
    }
    export class AvgPxPrecision {
        public static tag(): number { return 74 }
        constructor() {} 
    }
    export class TradeDate {
        public static tag(): number { return 75 }
        constructor() {} 
    }
    export class PositionEffect {
        public static tag(): number { return 77 }
        public static CLOSE = "C"
        public static FIFO = "F"
        public static OPEN = "O"
        public static ROLLED = "R"
        public static CLOSE_BUT_NOTIFY_ON_OPEN = "N"
        public static DEFAULT = "D"
        constructor() {} 
    }
    export class NoAllocs {
        public static tag(): number { return 78 }
        constructor() {} 
    }
    export class AllocAccount {
        public static tag(): number { return 79 }
        constructor() {} 
    }
    export class AllocQty {
        public static tag(): number { return 80 }
        constructor() {} 
    }
    export class ProcessCode {
        public static tag(): number { return 81 }
        public static REGULAR = "0"
        public static SOFT_DOLLAR = "1"
        public static STEP_IN = "2"
        public static STEP_OUT = "3"
        public static SOFT_DOLLAR_STEP_IN = "4"
        public static SOFT_DOLLAR_STEP_OUT = "5"
        public static PLAN_SPONSOR = "6"
        constructor() {} 
    }
    export class NoRpts {
        public static tag(): number { return 82 }
        constructor() {} 
    }
    export class RptSeq {
        public static tag(): number { return 83 }
        constructor() {} 
    }
    export class CxlQty {
        public static tag(): number { return 84 }
        constructor() {} 
    }
    export class NoDlvyInst {
        public static tag(): number { return 85 }
        constructor() {} 
    }
    export class AllocStatus {
        public static tag(): number { return 87 }
        public static ACCEPTED = "0"
        public static BLOCK_LEVEL_REJECT = "1"
        public static ACCOUNT_LEVEL_REJECT = "2"
        public static RECEIVED = "3"
        public static INCOMPLETE = "4"
        public static REJECTED_BY_INTERMEDIARY = "5"
        public static ALLOCATION_PENDING = "6"
        public static REVERSED = "7"
        constructor() {} 
    }
    export class AllocRejCode {
        public static tag(): number { return 88 }
        public static UNKNOWN_ACCOUNT = "0"
        public static INCORRECT_QUANTITY = "1"
        public static INCORRECT_AVERAGEG_PRICE = "2"
        public static UNKNOWN_EXECUTING_BROKER_MNEMONIC = "3"
        public static COMMISSION_DIFFERENCE = "4"
        public static UNKNOWN_ORDERID = "5"
        public static UNKNOWN_LISTID = "6"
        public static OTHER_7 = "7"
        public static INCORRECT_ALLOCATED_QUANTITY = "8"
        public static CALCULATION_DIFFERENCE = "9"
        public static UNKNOWN_OR_STALE_EXECID = "10"
        public static MISMATCHED_DATA = "11"
        public static UNKNOWN_CLORDID = "12"
        public static WAREHOUSE_REQUEST_REJECTED = "13"
        public static OTHER_99 = "99"
        constructor() {} 
    }
    export class Signature {
        public static tag(): number { return 89 }
        constructor() {} 
    }
    export class SecureDataLen {
        public static tag(): number { return 90 }
        constructor() {} 
    }
    export class SecureData {
        public static tag(): number { return 91 }
        constructor() {} 
    }
    export class SignatureLength {
        public static tag(): number { return 93 }
        constructor() {} 
    }
    export class EmailType {
        public static tag(): number { return 94 }
        public static NEW = "0"
        public static REPLY = "1"
        public static ADMIN_REPLY = "2"
        constructor() {} 
    }
    export class RawDataLength {
        public static tag(): number { return 95 }
        constructor() {} 
    }
    export class RawData {
        public static tag(): number { return 96 }
        constructor() {} 
    }
    export class PossResend {
        public static tag(): number { return 97 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class EncryptMethod {
        public static tag(): number { return 98 }
        public static NONE = "0"
        public static PKCS_1 = "1"
        public static DES = "2"
        public static PKCS_3 = "3"
        public static PGP_4 = "4"
        public static PGP_5 = "5"
        public static PEM = "6"
        constructor() {} 
    }
    export class StopPx {
        public static tag(): number { return 99 }
        constructor() {} 
    }
    export class ExDestination {
        public static tag(): number { return 100 }
        constructor() {} 
    }
    export class CxlRejReason {
        public static tag(): number { return 102 }
        public static TOO_LATE_TO_CANCEL = "0"
        public static UNKNOWN_ORDER = "1"
        public static BROKER = "2"
        public static ORDER_ALREADY_IN_PENDING_CANCEL_OR_PENDING_REPLACE_STATUS = "3"
        public static UNABLE_TO_PROCESS_ORDER_MASS_CANCEL_REQUEST = "4"
        public static ORIGORDMODTIME = "5"
        public static DUPLICATE_CLORDID = "6"
        public static PRICE_EXCEEDS_CURRENT_PRICE = "7"
        public static PRICE_EXCEEDS_CURRENT_PRICE_BAND = "8"
        public static INVALID_PRICE_INCREMENT = "18"
        public static OTHER = "99"
        constructor() {} 
    }
    export class OrdRejReason {
        public static tag(): number { return 103 }
        public static BROKER = "0"
        public static UNKNOWN_SYMBOL = "1"
        public static EXCHANGE_CLOSED = "2"
        public static ORDER_EXCEEDS_LIMIT = "3"
        public static TOO_LATE_TO_ENTER = "4"
        public static UNKNOWN_ORDER = "5"
        public static DUPLICATE_ORDER = "6"
        public static DUPLICATE_OF_A_VERBALLY_COMMUNICATED_ORDER = "7"
        public static STALE_ORDER = "8"
        public static TRADE_ALONG_REQUIRED = "9"
        public static INVALID_INVESTOR_ID = "10"
        public static UNSUPPORTED_ORDER_CHARACTERISTIC = "11"
        public static SURVEILLENCE_OPTION = "12"
        public static INCORRECT_QUANTITY = "13"
        public static INCORRECT_ALLOCATED_QUANTITY = "14"
        public static UNKNOWN_ACCOUNT = "15"
        public static PRICE_EXCEEDS_CURRENT_PRICE_BAND = "16"
        public static INVALID_PRICE_INCREMENT = "18"
        public static OTHER = "99"
        constructor() {} 
    }
    export class IOIQualifier {
        public static tag(): number { return 104 }
        public static ALL_OR_NONE = "A"
        public static MARKET_ON_CLOSE = "B"
        public static AT_THE_CLOSE = "C"
        public static VWAP = "D"
        public static IN_TOUCH_WITH = "I"
        public static LIMIT = "L"
        public static MORE_BEHIND = "M"
        public static AT_THE_OPEN = "O"
        public static TAKING_A_POSITION = "P"
        public static AT_THE_MARKET = "Q"
        public static READY_TO_TRADE = "R"
        public static PORTFOLIO_SHOWN = "S"
        public static THROUGH_THE_DAY = "T"
        public static VERSUS = "V"
        public static INDICATION = "W"
        public static CROSSING_OPPORTUNITY = "X"
        public static AT_THE_MIDPOINT = "Y"
        public static PRE_OPEN = "Z"
        constructor() {} 
    }
    export class Issuer {
        public static tag(): number { return 106 }
        constructor() {} 
    }
    export class SecurityDesc {
        public static tag(): number { return 107 }
        constructor() {} 
    }
    export class HeartBtInt {
        public static tag(): number { return 108 }
        constructor() {} 
    }
    export class MinQty {
        public static tag(): number { return 110 }
        constructor() {} 
    }
    export class MaxFloor {
        public static tag(): number { return 111 }
        constructor() {} 
    }
    export class TestReqID {
        public static tag(): number { return 112 }
        constructor() {} 
    }
    export class ReportToExch {
        public static tag(): number { return 113 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class LocateReqd {
        public static tag(): number { return 114 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class OnBehalfOfCompID {
        public static tag(): number { return 115 }
        constructor() {} 
    }
    export class OnBehalfOfSubID {
        public static tag(): number { return 116 }
        constructor() {} 
    }
    export class QuoteID {
        public static tag(): number { return 117 }
        constructor() {} 
    }
    export class NetMoney {
        public static tag(): number { return 118 }
        constructor() {} 
    }
    export class SettlCurrAmt {
        public static tag(): number { return 119 }
        constructor() {} 
    }
    export class SettlCurrency {
        public static tag(): number { return 120 }
        constructor() {} 
    }
    export class ForexReq {
        public static tag(): number { return 121 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class OrigSendingTime {
        public static tag(): number { return 122 }
        constructor() {} 
    }
    export class GapFillFlag {
        public static tag(): number { return 123 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class NoExecs {
        public static tag(): number { return 124 }
        constructor() {} 
    }
    export class ExpireTime {
        public static tag(): number { return 126 }
        constructor() {} 
    }
    export class DKReason {
        public static tag(): number { return 127 }
        public static UNKNOWN_SYMBOL = "A"
        public static WRONG_SIDE = "B"
        public static QUANTITY_EXCEEDS_ORDER = "C"
        public static NO_MATCHING_ORDER = "D"
        public static PRICE_EXCEEDS_LIMIT = "E"
        public static CALCULATION_DIFFERENCE = "F"
        public static OTHER = "Z"
        constructor() {} 
    }
    export class DeliverToCompID {
        public static tag(): number { return 128 }
        constructor() {} 
    }
    export class DeliverToSubID {
        public static tag(): number { return 129 }
        constructor() {} 
    }
    export class IOINaturalFlag {
        public static tag(): number { return 130 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class QuoteReqID {
        public static tag(): number { return 131 }
        constructor() {} 
    }
    export class BidPx {
        public static tag(): number { return 132 }
        constructor() {} 
    }
    export class OfferPx {
        public static tag(): number { return 133 }
        constructor() {} 
    }
    export class BidSize {
        public static tag(): number { return 134 }
        constructor() {} 
    }
    export class OfferSize {
        public static tag(): number { return 135 }
        constructor() {} 
    }
    export class NoMiscFees {
        public static tag(): number { return 136 }
        constructor() {} 
    }
    export class MiscFeeAmt {
        public static tag(): number { return 137 }
        constructor() {} 
    }
    export class MiscFeeCurr {
        public static tag(): number { return 138 }
        constructor() {} 
    }
    export class MiscFeeType {
        public static tag(): number { return 139 }
        public static REGULATORY = "1"
        public static TAX = "2"
        public static LOCAL_COMMISSION = "3"
        public static EXCHANGE_FEES = "4"
        public static STAMP = "5"
        public static LEVY = "6"
        public static OTHER = "7"
        public static MARKUP = "8"
        public static CONSUMPTION_TAX = "9"
        public static PER_TRANSACTION = "10"
        public static CONVERSION = "11"
        public static AGENT = "12"
        public static TRANSFER_FEE = "13"
        public static SECURITY_LENDING = "14"
        constructor() {} 
    }
    export class PrevClosePx {
        public static tag(): number { return 140 }
        constructor() {} 
    }
    export class ResetSeqNumFlag {
        public static tag(): number { return 141 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class SenderLocationID {
        public static tag(): number { return 142 }
        constructor() {} 
    }
    export class TargetLocationID {
        public static tag(): number { return 143 }
        constructor() {} 
    }
    export class OnBehalfOfLocationID {
        public static tag(): number { return 144 }
        constructor() {} 
    }
    export class DeliverToLocationID {
        public static tag(): number { return 145 }
        constructor() {} 
    }
    export class NoRelatedSym {
        public static tag(): number { return 146 }
        constructor() {} 
    }
    export class Subject {
        public static tag(): number { return 147 }
        constructor() {} 
    }
    export class Headline {
        public static tag(): number { return 148 }
        constructor() {} 
    }
    export class URLLink {
        public static tag(): number { return 149 }
        constructor() {} 
    }
    export class ExecType {
        public static tag(): number { return 150 }
        public static NEW = "0"
        public static DONE_FOR_DAY = "3"
        public static CANCELED = "4"
        public static REPLACED = "5"
        public static PENDING_CANCEL = "6"
        public static STOPPED = "7"
        public static REJECTED = "8"
        public static SUSPENDED = "9"
        public static PENDING_NEW = "A"
        public static CALCULATED = "B"
        public static EXPIRED = "C"
        public static RESTATED = "D"
        public static PENDING_REPLACE = "E"
        public static TRADE = "F"
        public static TRADE_CORRECT = "G"
        public static TRADE_CANCEL = "H"
        public static ORDER_STATUS = "I"
        public static TRADE_IN_A_CLEARING_HOLD = "J"
        public static TRADE_HAS_BEEN_RELEASED_TO_CLEARING = "K"
        public static TRIGGERED_OR_ACTIVATED_BY_SYSTEM = "L"
        constructor() {} 
    }
    export class LeavesQty {
        public static tag(): number { return 151 }
        constructor() {} 
    }
    export class CashOrderQty {
        public static tag(): number { return 152 }
        constructor() {} 
    }
    export class AllocAvgPx {
        public static tag(): number { return 153 }
        constructor() {} 
    }
    export class AllocNetMoney {
        public static tag(): number { return 154 }
        constructor() {} 
    }
    export class SettlCurrFxRate {
        public static tag(): number { return 155 }
        constructor() {} 
    }
    export class SettlCurrFxRateCalc {
        public static tag(): number { return 156 }
        public static MULTIPLY = "M"
        public static DIVIDE = "D"
        constructor() {} 
    }
    export class NumDaysInterest {
        public static tag(): number { return 157 }
        constructor() {} 
    }
    export class AccruedInterestRate {
        public static tag(): number { return 158 }
        constructor() {} 
    }
    export class AccruedInterestAmt {
        public static tag(): number { return 159 }
        constructor() {} 
    }
    export class SettlInstMode {
        public static tag(): number { return 160 }
        public static DEFAULT = "0"
        public static STANDING_INSTRUCTIONS_PROVIDED = "1"
        public static SPECIFIC_ALLOCATION_ACCOUNT_OVERRIDING = "2"
        public static SPECIFIC_ALLOCATION_ACCOUNT_STANDING = "3"
        public static SPECIFIC_ORDER_FOR_A_SINGLE_ACCOUNT = "4"
        public static REQUEST_REJECT = "5"
        constructor() {} 
    }
    export class AllocText {
        public static tag(): number { return 161 }
        constructor() {} 
    }
    export class SettlInstID {
        public static tag(): number { return 162 }
        constructor() {} 
    }
    export class SettlInstTransType {
        public static tag(): number { return 163 }
        public static NEW = "N"
        public static CANCEL = "C"
        public static REPLACE = "R"
        public static RESTATE = "T"
        constructor() {} 
    }
    export class EmailThreadID {
        public static tag(): number { return 164 }
        constructor() {} 
    }
    export class SettlInstSource {
        public static tag(): number { return 165 }
        public static BROKERS_INSTRUCTIONS = "1"
        public static INSTITUTIONS_INSTRUCTIONS = "2"
        public static INVESTOR = "3"
        constructor() {} 
    }
    export class SecurityType {
        public static tag(): number { return 167 }
        public static US_TREASURY_NOTE_UST = "UST"
        public static US_TREASURY_BILL_USTB = "USTB"
        public static EURO_SUPRANATIONAL_COUPONS = "EUSUPRA"
        public static FEDERAL_AGENCY_COUPON = "FAC"
        public static FEDERAL_AGENCY_DISCOUNT_NOTE = "FADN"
        public static PRIVATE_EXPORT_FUNDING = "PEF"
        public static USD_SUPRANATIONAL_COUPONS = "SUPRA"
        public static CORPORATE_BOND = "CORP"
        public static CORPORATE_PRIVATE_PLACEMENT = "CPP"
        public static CONVERTIBLE_BOND = "CB"
        public static DUAL_CURRENCY = "DUAL"
        public static EURO_CORPORATE_BOND = "EUCORP"
        public static EURO_CORPORATE_FLOATING_RATE_NOTES = "EUFRN"
        public static US_CORPORATE_FLOATING_RATE_NOTES = "FRN"
        public static INDEXED_LINKED = "XLINKD"
        public static STRUCTURED_NOTES = "STRUCT"
        public static YANKEE_CORPORATE_BOND = "YANK"
        public static FOREIGN_EXCHANGE_CONTRACT = "FOR"
        public static CREDIT_DEFAULT_SWAP = "CDS"
        public static FUTURE = "FUT"
        public static OPTION = "OPT"
        public static OPTIONS_ON_FUTURES = "OOF"
        public static OPTIONS_ON_PHYSICAL = "OOP"
        public static INTEREST_RATE_SWAP = "IRS"
        public static OPTIONS_ON_COMBO = "OOC"
        public static COMMON_STOCK = "CS"
        public static PREFERRED_STOCK = "PS"
        public static REPURCHASE = "REPO"
        public static FORWARD = "FORWARD"
        public static BUY_SELLBACK = "BUYSELL"
        public static SECURITIES_LOAN = "SECLOAN"
        public static SECURITIES_PLEDGE = "SECPLEDGE"
        public static BRADY_BOND = "BRADY"
        public static CANADIAN_TREASURY_NOTES = "CAN"
        public static CANADIAN_TREASURY_BILLS = "CTB"
        public static EURO_SOVEREIGNS = "EUSOV"
        public static CANADIAN_PROVINCIAL_BONDS = "PROV"
        public static TREASURY_BILL = "TB"
        public static US_TREASURY_BOND = "TBOND"
        public static INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = "TINT"
        public static US_TREASURY_BILL_TBILL = "TBILL"
        public static TREASURY_INFLATION_PROTECTED_SECURITIES = "TIPS"
        public static PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = "TCAL"
        public static PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = "TPRN"
        public static US_TREASURY_NOTE_TNOTE = "TNOTE"
        public static TERM_LOAN = "TERM"
        public static REVOLVER_LOAN = "RVLV"
        public static REVOLVER_TERM_LOAN = "RVLVTRM"
        public static BRIDGE_LOAN = "BRIDGE"
        public static LETTER_OF_CREDIT = "LOFC"
        public static SWING_LINE_FACILITY = "SWING"
        public static DEBTOR_IN_POSSESSION = "DINP"
        public static DEFAULTED = "DEFLTED"
        public static WITHDRAWN = "WITHDRN"
        public static REPLACED = "REPLACD"
        public static MATURED = "MATURED"
        public static AMENDED_RESTATED = "AMENDED"
        public static RETIRED = "RETIRED"
        public static BANKERS_ACCEPTANCE = "BA"
        public static BANK_DEPOSITORY_NOTE = "BDN"
        public static BANK_NOTES = "BN"
        public static BILL_OF_EXCHANGES = "BOX"
        public static CANADIAN_MONEY_MARKETS = "CAMM"
        public static CERTIFICATE_OF_DEPOSIT = "CD"
        public static CALL_LOANS = "CL"
        public static COMMERCIAL_PAPER = "CP"
        public static DEPOSIT_NOTES = "DN"
        public static EURO_CERTIFICATE_OF_DEPOSIT = "EUCD"
        public static EURO_COMMERCIAL_PAPER = "EUCP"
        public static LIQUIDITY_NOTE = "LQN"
        public static MEDIUM_TERM_NOTES = "MTN"
        public static OVERNIGHT = "ONITE"
        public static PROMISSORY_NOTE = "PN"
        public static SHORT_TERM_LOAN_NOTE = "STN"
        public static PLAZOS_FIJOS = "PZFJ"
        public static SECURED_LIQUIDITY_NOTE = "SLQN"
        public static TIME_DEPOSIT = "TD"
        public static TERM_LIQUIDITY_NOTE = "TLQN"
        public static EXTENDED_COMM_NOTE = "XCN"
        public static YANKEE_CERTIFICATE_OF_DEPOSIT = "YCD"
        public static ASSET_BACKED_SECURITIES = "ABS"
        public static CANADIAN_MORTGAGE_BONDS = "CMB"
        public static CORP_MORTGAGE_BACKED_SECURITIES = "CMBS"
        public static COLLATERALIZED_MORTGAGE_OBLIGATION = "CMO"
        public static IOETTE_MORTGAGE = "IET"
        public static MORTGAGE_BACKED_SECURITIES = "MBS"
        public static MORTGAGE_INTEREST_ONLY = "MIO"
        public static MORTGAGE_PRINCIPAL_ONLY = "MPO"
        public static MORTGAGE_PRIVATE_PLACEMENT = "MPP"
        public static MISCELLANEOUS_PASS_THROUGH = "MPT"
        public static PFANDBRIEFE = "PFAND"
        public static TO_BE_ANNOUNCED = "TBA"
        public static OTHER_ANTICIPATION_NOTES = "AN"
        public static CERTIFICATE_OF_OBLIGATION = "COFO"
        public static CERTIFICATE_OF_PARTICIPATION = "COFP"
        public static GENERAL_OBLIGATION_BONDS = "GO"
        public static MANDATORY_TENDER = "MT"
        public static REVENUE_ANTICIPATION_NOTE = "RAN"
        public static REVENUE_BONDS = "REV"
        public static SPECIAL_ASSESSMENT = "SPCLA"
        public static SPECIAL_OBLIGATION = "SPCLO"
        public static SPECIAL_TAX = "SPCLT"
        public static TAX_ANTICIPATION_NOTE = "TAN"
        public static TAX_ALLOCATION = "TAXA"
        public static TAX_EXEMPT_COMMERCIAL_PAPER = "TECP"
        public static TAXABLE_MUNICIPAL_CP = "TMCP"
        public static TAX_REVENUE_ANTICIPATION_NOTE = "TRAN"
        public static VARIABLE_RATE_DEMAND_NOTE = "VRDN"
        public static WARRANT = "WAR"
        public static MUTUAL_FUND = "MF"
        public static MULTILEG_INSTRUMENT = "MLEG"
        public static NO_SECURITY_TYPE = "NONE"
        public static WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = "?"
        public static CASH = "CASH"
        public static NON_DELIVERABLE_FORWARD = "FXNDF"
        public static FX_SPOT = "FXSPOT"
        public static FX_FORWARD = "FXFWD"
        public static FX_SWAP = "FXSWAP"
        constructor() {} 
    }
    export class EffectiveTime {
        public static tag(): number { return 168 }
        constructor() {} 
    }
    export class StandInstDbType {
        public static tag(): number { return 169 }
        public static OTHER = "0"
        public static DTC_SID = "1"
        public static THOMSON_ALERT = "2"
        public static A_GLOBAL_CUSTODIAN = "3"
        public static ACCOUNTNET = "4"
        constructor() {} 
    }
    export class StandInstDbName {
        public static tag(): number { return 170 }
        constructor() {} 
    }
    export class StandInstDbID {
        public static tag(): number { return 171 }
        constructor() {} 
    }
    export class SettlDeliveryType {
        public static tag(): number { return 172 }
        public static VERSUS_PAYMENT_DELIVER = "0"
        public static FREE_DELIVER = "1"
        public static TRI_PARTY = "2"
        public static HOLD_IN_CUSTODY = "3"
        constructor() {} 
    }
    export class BidSpotRate {
        public static tag(): number { return 188 }
        constructor() {} 
    }
    export class BidForwardPoints {
        public static tag(): number { return 189 }
        constructor() {} 
    }
    export class OfferSpotRate {
        public static tag(): number { return 190 }
        constructor() {} 
    }
    export class OfferForwardPoints {
        public static tag(): number { return 191 }
        constructor() {} 
    }
    export class OrderQty2 {
        public static tag(): number { return 192 }
        constructor() {} 
    }
    export class SettlDate2 {
        public static tag(): number { return 193 }
        constructor() {} 
    }
    export class LastSpotRate {
        public static tag(): number { return 194 }
        constructor() {} 
    }
    export class LastForwardPoints {
        public static tag(): number { return 195 }
        constructor() {} 
    }
    export class AllocLinkID {
        public static tag(): number { return 196 }
        constructor() {} 
    }
    export class AllocLinkType {
        public static tag(): number { return 197 }
        public static FX_NETTING = "0"
        public static FX_SWAP = "1"
        constructor() {} 
    }
    export class SecondaryOrderID {
        public static tag(): number { return 198 }
        constructor() {} 
    }
    export class NoIOIQualifiers {
        public static tag(): number { return 199 }
        constructor() {} 
    }
    export class MaturityMonthYear {
        public static tag(): number { return 200 }
        constructor() {} 
    }
    export class PutOrCall {
        public static tag(): number { return 201 }
        public static PUT = "0"
        public static CALL = "1"
        constructor() {} 
    }
    export class StrikePrice {
        public static tag(): number { return 202 }
        constructor() {} 
    }
    export class CoveredOrUncovered {
        public static tag(): number { return 203 }
        public static COVERED = "0"
        public static UNCOVERED = "1"
        constructor() {} 
    }
    export class OptAttribute {
        public static tag(): number { return 206 }
        constructor() {} 
    }
    export class SecurityExchange {
        public static tag(): number { return 207 }
        constructor() {} 
    }
    export class NotifyBrokerOfCredit {
        public static tag(): number { return 208 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class AllocHandlInst {
        public static tag(): number { return 209 }
        public static MATCH = "1"
        public static FORWARD = "2"
        public static FORWARD_AND_MATCH = "3"
        constructor() {} 
    }
    export class MaxShow {
        public static tag(): number { return 210 }
        constructor() {} 
    }
    export class PegOffsetValue {
        public static tag(): number { return 211 }
        constructor() {} 
    }
    export class XmlDataLen {
        public static tag(): number { return 212 }
        constructor() {} 
    }
    export class XmlData {
        public static tag(): number { return 213 }
        constructor() {} 
    }
    export class SettlInstRefID {
        public static tag(): number { return 214 }
        constructor() {} 
    }
    export class NoRoutingIDs {
        public static tag(): number { return 215 }
        constructor() {} 
    }
    export class RoutingType {
        public static tag(): number { return 216 }
        public static TARGET_FIRM = "1"
        public static TARGET_LIST = "2"
        public static BLOCK_FIRM = "3"
        public static BLOCK_LIST = "4"
        constructor() {} 
    }
    export class RoutingID {
        public static tag(): number { return 217 }
        constructor() {} 
    }
    export class Spread {
        public static tag(): number { return 218 }
        constructor() {} 
    }
    export class BenchmarkCurveCurrency {
        public static tag(): number { return 220 }
        constructor() {} 
    }
    export class BenchmarkCurveName {
        public static tag(): number { return 221 }
        public static EONIA = "EONIA"
        public static EUREPO = "EUREPO"
        public static EURIBOR = "Euribor"
        public static FUTURESWAP = "FutureSWAP"
        public static LIBID = "LIBID"
        public static LIBOR = "LIBOR"
        public static MUNIAAA = "MuniAAA"
        public static OTHER = "OTHER"
        public static PFANDBRIEFE = "Pfandbriefe"
        public static SONIA = "SONIA"
        public static SWAP = "SWAP"
        public static TREASURY = "Treasury"
        constructor() {} 
    }
    export class BenchmarkCurvePoint {
        public static tag(): number { return 222 }
        constructor() {} 
    }
    export class CouponRate {
        public static tag(): number { return 223 }
        constructor() {} 
    }
    export class CouponPaymentDate {
        public static tag(): number { return 224 }
        constructor() {} 
    }
    export class IssueDate {
        public static tag(): number { return 225 }
        constructor() {} 
    }
    export class RepurchaseTerm {
        public static tag(): number { return 226 }
        constructor() {} 
    }
    export class RepurchaseRate {
        public static tag(): number { return 227 }
        constructor() {} 
    }
    export class Factor {
        public static tag(): number { return 228 }
        constructor() {} 
    }
    export class TradeOriginationDate {
        public static tag(): number { return 229 }
        constructor() {} 
    }
    export class ExDate {
        public static tag(): number { return 230 }
        constructor() {} 
    }
    export class ContractMultiplier {
        public static tag(): number { return 231 }
        constructor() {} 
    }
    export class NoStipulations {
        public static tag(): number { return 232 }
        constructor() {} 
    }
    export class StipulationType {
        public static tag(): number { return 233 }
        public static ALTERNATIVE_MINIMUM_TAX = "AMT"
        public static AUTO_REINVESTMENT_AT_RATE_OR_BETTER = "AUTOREINV"
        public static BANK_QUALIFIED = "BANKQUAL"
        public static BARGAIN_CONDITIONS = "BGNCON"
        public static COUPON_RANGE = "COUPON"
        public static ISO_CURRENCY_CODE = "CURRENCY"
        public static CUSTOM_START_END_DATE = "CUSTOMDATE"
        public static GEOGRAPHICS_AND_RANGE = "GEOG"
        public static VALUATION_DISCOUNT = "HAIRCUT"
        public static INSURED = "INSURED"
        public static YEAR_OR_YEAR_MONTH_OF_ISSUE = "ISSUE"
        public static ISSUERS_TICKER = "ISSUER"
        public static ISSUE_SIZE_RANGE = "ISSUESIZE"
        public static LOOKBACK_DAYS = "LOOKBACK"
        public static EXPLICIT_LOT_IDENTIFIER = "LOT"
        public static LOT_VARIANCE = "LOTVAR"
        public static MATURITY_YEAR_AND_MONTH = "MAT"
        public static MATURITY_RANGE = "MATURITY"
        public static MAXIMUM_SUBSTITUTIONS = "MAXSUBS"
        public static MINIMUM_DENOMINATION = "MINDNOM"
        public static MINIMUM_INCREMENT = "MININCR"
        public static MINIMUM_QUANTITY = "MINQTY"
        public static PAYMENT_FREQUENCY_CALENDAR = "PAYFREQ"
        public static NUMBER_OF_PIECES = "PIECES"
        public static POOLS_MAXIMUM = "PMAX"
        public static POOLS_PER_LOT = "PPL"
        public static POOLS_PER_MILLION = "PPM"
        public static POOLS_PER_TRADE = "PPT"
        public static PRICE_RANGE = "PRICE"
        public static PRICING_FREQUENCY = "PRICEFREQ"
        public static PRODUCTION_YEAR = "PROD"
        public static CALL_PROTECTION = "PROTECT"
        public static PURPOSE = "PURPOSE"
        public static BENCHMARK_PRICE_SOURCE = "PXSOURCE"
        public static RATING_SOURCE_AND_RANGE = "RATING"
        public static TYPE_OF_REDEMPTION = "REDEMPTION"
        public static RESTRICTED = "RESTRICTED"
        public static MARKET_SECTOR = "SECTOR"
        public static SECURITY_TYPE_INCLUDED_OR_EXCLUDED = "SECTYPE"
        public static STRUCTURE = "STRUCT"
        public static SUBSTITUTIONS_FREQUENCY = "SUBSFREQ"
        public static SUBSTITUTIONS_LEFT = "SUBSLEFT"
        public static FREEFORM_TEXT = "TEXT"
        public static TRADE_VARIANCE = "TRDVAR"
        public static WEIGHTED_AVERAGE_COUPON = "WAC"
        public static WEIGHTED_AVERAGE_LIFE_COUPON = "WAL"
        public static WEIGHTED_AVERAGE_LOAN_AGE = "WALA"
        public static WEIGHTED_AVERAGE_MATURITY = "WAM"
        public static WHOLE_POOL = "WHOLE"
        public static YIELD_RANGE = "YIELD"
        public static AVERAGE_FICO_SCORE = "AVFICO"
        public static AVERAGE_LOAN_SIZE = "AVSIZE"
        public static MAXIMUM_LOAN_BALANCE = "MAXBAL"
        public static POOL_IDENTIFIER = "POOL"
        public static TYPE_OF_ROLL_TRADE = "ROLLTYPE"
        public static REFERENCE_TO_ROLLING_OR_CLOSING_TRADE = "REFTRADE"
        public static PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADE = "REFPRIN"
        public static INTEREST_OF_ROLLING_OR_CLOSING_TRADE = "REFINT"
        public static AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET = "AVAILQTY"
        public static BROKERS_SALES_CREDIT = "BROKERCREDIT"
        public static OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALPX"
        public static OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALQTY"
        public static THE_MINIMUM_RESIDUAL_OFFER_QUANTITY = "LEAVEQTY"
        public static MAXIMUM_ORDER_SIZE = "MAXORDQTY"
        public static ORDER_QUANTITY_INCREMENT = "ORDRINCR"
        public static PRIMARY_OR_SECONDARY_MARKET_INDICATOR = "PRIMARY"
        public static BROKER_SALES_CREDIT_OVERRIDE = "SALESCREDITOVR"
        public static TRADERS_CREDIT = "TRADERCREDIT"
        public static DISCOUNT_RATE = "DISCOUNT"
        public static YIELD_TO_MATURITY = "YTM"
        public static ABSOLUTE_PREPAYMENT_SPEED = "ABS"
        public static CONSTANT_PREPAYMENT_PENALTY = "CPP"
        public static CONSTANT_PREPAYMENT_RATE = "CPR"
        public static CONSTANT_PREPAYMENT_YIELD = "CPY"
        public static FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE = "HEP"
        public static PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE = "MHP"
        public static MONTHLY_PREPAYMENT_RATE = "MPR"
        public static PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE = "PPC"
        public static PERCENT_OF_BMA_PREPAYMENT_CURVE = "PSA"
        public static SINGLE_MONTHLY_MORTALITY = "SMM"
        constructor() {} 
    }
    export class StipulationValue {
        public static tag(): number { return 234 }
        constructor() {} 
    }
    export class YieldType {
        public static tag(): number { return 235 }
        public static AFTER_TAX_YIELD = "AFTERTAX"
        public static ANNUAL_YIELD = "ANNUAL"
        public static YIELD_AT_ISSUE = "ATISSUE"
        public static YIELD_TO_AVG_MATURITY = "AVGMATURITY"
        public static BOOK_YIELD = "BOOK"
        public static YIELD_TO_NEXT_CALL = "CALL"
        public static YIELD_CHANGE_SINCE_CLOSE = "CHANGE"
        public static CLOSING_YIELD = "CLOSE"
        public static COMPOUND_YIELD = "COMPOUND"
        public static CURRENT_YIELD = "CURRENT"
        public static GVNT_EQUIVALENT_YIELD = "GOVTEQUIV"
        public static TRUE_GROSS_YIELD = "GROSS"
        public static YIELD_WITH_INFLATION_ASSUMPTION = "INFLATION"
        public static INVERSE_FLOATER_BOND_YIELD = "INVERSEFLOATER"
        public static MOST_RECENT_CLOSING_YIELD = "LASTCLOSE"
        public static CLOSING_YIELD_MOST_RECENT_MONTH = "LASTMONTH"
        public static CLOSING_YIELD_MOST_RECENT_QUARTER = "LASTQUARTER"
        public static CLOSING_YIELD_MOST_RECENT_YEAR = "LASTYEAR"
        public static YIELD_TO_LONGEST_AVERAGE_LIFE = "LONGAVGLIFE"
        public static MARK_TO_MARKET_YIELD = "MARK"
        public static YIELD_TO_MATURITY = "MATURITY"
        public static YIELD_TO_NEXT_REFUND = "NEXTREFUND"
        public static OPEN_AVERAGE_YIELD = "OPENAVG"
        public static PREVIOUS_CLOSE_YIELD = "PREVCLOSE"
        public static PROCEEDS_YIELD = "PROCEEDS"
        public static YIELD_TO_NEXT_PUT = "PUT"
        public static SEMI_ANNUAL_YIELD = "SEMIANNUAL"
        public static YIELD_TO_SHORTEST_AVERAGE_LIFE = "SHORTAVGLIFE"
        public static SIMPLE_YIELD = "SIMPLE"
        public static TAX_EQUIVALENT_YIELD = "TAXEQUIV"
        public static YIELD_TO_TENDER_DATE = "TENDER"
        public static TRUE_YIELD = "TRUE"
        public static YIELD_VALUE_OF_1_32 = "VALUE1_32"
        public static YIELD_TO_WORST = "WORST"
        constructor() {} 
    }
    export class Yield {
        public static tag(): number { return 236 }
        constructor() {} 
    }
    export class TotalTakedown {
        public static tag(): number { return 237 }
        constructor() {} 
    }
    export class Concession {
        public static tag(): number { return 238 }
        constructor() {} 
    }
    export class RepoCollateralSecurityType {
        public static tag(): number { return 239 }
        constructor() {} 
    }
    export class RedemptionDate {
        public static tag(): number { return 240 }
        constructor() {} 
    }
    export class UnderlyingCouponPaymentDate {
        public static tag(): number { return 241 }
        constructor() {} 
    }
    export class UnderlyingIssueDate {
        public static tag(): number { return 242 }
        constructor() {} 
    }
    export class UnderlyingRepoCollateralSecurityType {
        public static tag(): number { return 243 }
        constructor() {} 
    }
    export class UnderlyingRepurchaseTerm {
        public static tag(): number { return 244 }
        constructor() {} 
    }
    export class UnderlyingRepurchaseRate {
        public static tag(): number { return 245 }
        constructor() {} 
    }
    export class UnderlyingFactor {
        public static tag(): number { return 246 }
        constructor() {} 
    }
    export class UnderlyingRedemptionDate {
        public static tag(): number { return 247 }
        constructor() {} 
    }
    export class LegCouponPaymentDate {
        public static tag(): number { return 248 }
        constructor() {} 
    }
    export class LegIssueDate {
        public static tag(): number { return 249 }
        constructor() {} 
    }
    export class LegRepoCollateralSecurityType {
        public static tag(): number { return 250 }
        constructor() {} 
    }
    export class LegRepurchaseTerm {
        public static tag(): number { return 251 }
        constructor() {} 
    }
    export class LegRepurchaseRate {
        public static tag(): number { return 252 }
        constructor() {} 
    }
    export class LegFactor {
        public static tag(): number { return 253 }
        constructor() {} 
    }
    export class LegRedemptionDate {
        public static tag(): number { return 254 }
        constructor() {} 
    }
    export class CreditRating {
        public static tag(): number { return 255 }
        constructor() {} 
    }
    export class UnderlyingCreditRating {
        public static tag(): number { return 256 }
        constructor() {} 
    }
    export class LegCreditRating {
        public static tag(): number { return 257 }
        constructor() {} 
    }
    export class TradedFlatSwitch {
        public static tag(): number { return 258 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class BasisFeatureDate {
        public static tag(): number { return 259 }
        constructor() {} 
    }
    export class BasisFeaturePrice {
        public static tag(): number { return 260 }
        constructor() {} 
    }
    export class MDReqID {
        public static tag(): number { return 262 }
        constructor() {} 
    }
    export class SubscriptionRequestType {
        public static tag(): number { return 263 }
        public static SNAPSHOT = "0"
        public static SNAPSHOT_PLUS_UPDATES = "1"
        public static DISABLE_PREVIOUS_SNAPSHOT_PLUS_UPDATE_REQUEST = "2"
        constructor() {} 
    }
    export class MarketDepth {
        public static tag(): number { return 264 }
        constructor() {} 
    }
    export class MDUpdateType {
        public static tag(): number { return 265 }
        public static FULL_REFRESH = "0"
        public static INCREMENTAL_REFRESH = "1"
        constructor() {} 
    }
    export class AggregatedBook {
        public static tag(): number { return 266 }
        public static YES = "Y"
        public static NO = "N"
        constructor() {} 
    }
    export class NoMDEntryTypes {
        public static tag(): number { return 267 }
        constructor() {} 
    }
    export class NoMDEntries {
        public static tag(): number { return 268 }
        constructor() {} 
    }
    export class MDEntryType {
        public static tag(): number { return 269 }
        public static BID = "0"
        public static OFFER = "1"
        public static TRADE = "2"
        public static INDEX_VALUE = "3"
        public static OPENING_PRICE = "4"
        public static CLOSING_PRICE = "5"
        public static SETTLEMENT_PRICE = "6"
        public static TRADING_SESSION_HIGH_PRICE = "7"
        public static TRADING_SESSION_LOW_PRICE = "8"
        public static TRADING_SESSION_VWAP_PRICE = "9"
        public static IMBALANCE = "A"
        public static TRADE_VOLUME = "B"
        public static OPEN_INTEREST = "C"
        public static COMPOSITE_UNDERLYING_PRICE = "D"
        public static SIMULATED_SELL_PRICE = "E"
        public static SIMULATED_BUY_PRICE = "F"
        public static MARGIN_RATE = "G"
        public static MID_PRICE = "H"
        public static EMPTY_BOOK = "J"
        public static SETTLE_HIGH_PRICE = "K"
        public static SETTLE_LOW_PRICE = "L"
        public static PRIOR_SETTLE_PRICE = "M"
        public static SESSION_HIGH_BID = "N"
        public static SESSION_LOW_OFFER = "O"
        public static EARLY_PRICES = "P"
        public static AUCTION_CLEARING_PRICE = "Q"
        public static SWAP_VALUE_FACTOR = "S"
        public static DAILY_VALUE_ADJUSTMENT_FOR_LONG_POSITIONS = "R"
        public static CUMULATIVE_VALUE_ADJUSTMENT_FOR_LONG_POSITIONS = "T"
        public static DAILY_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONS = "U"
        public static CUMULATIVE_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONS = "V"
        public static RECOVERY_RATE = "Y"
        public static RECOVERY_RATE_FOR_LONG = "Z"
        public static RECOVERY_RATE_FOR_SHORT = "a"
        public static FIXING_PRICE = "W"
        public static CASH_RATE = "X"
        constructor() {} 
    }
    export class MDEntryPx {
        public static tag(): number { return 270 }
        constructor() {} 
    }
    export class MDEntrySize {
        public static tag(): number { return 271 }
        constructor() {} 
    }
    export class MDEntryDate {
        public static tag(): number { return 272 }
        constructor() {} 
    }
    export class MDEntryTime {
        public static tag(): number { return 273 }
        constructor() {} 
    }
    export class TickDirection {
        public static tag(): number { return 274 }
        public static PLUS_TICK = "0"
        public static ZERO_PLUS_TICK = "1"
        public static MINUS_TICK = "2"
        public static ZERO_MINUS_TICK = "3"
        constructor() {} 
    }
    export class MDMkt {
        public static tag(): number { return 275 }
        constructor() {} 
    }
    export class QuoteCondition {
        public static tag(): number { return 276 }
        public static OPEN_ACTIVE = "A"
        public static CLOSED_INACTIVE = "B"
        public static EXCHANGE_BEST = "C"
        public static CONSOLIDATED_BEST = "D"
        public static LOCKED = "E"
        public static CROSSED = "F"
        public static DEPTH = "G"
        public static FAST_TRADING = "H"
        public static NON_FIRM = "I"
        public static MANUAL_SLOW_QUOTE = "L"
        public static OUTRIGHT_PRICE = "J"
        public static IMPLIED_PRICE = "K"
        public static DEPTH_ON_OFFER = "M"
        public static DEPTH_ON_BID = "N"
        public static CLOSING = "O"
        public static NEWS_DISSEMINATION = "P"
        public static TRADING_RANGE = "Q"
        public static ORDER_INFLUX = "R"
        public static DUE_TO_RELATED = "S"
        public static NEWS_PENDING = "T"
        public static ADDITIONAL_INFO = "U"
        public static ADDITIONAL_INFO_DUE_TO_RELATED = "V"
        public static RESUME = "W"
        public static VIEW_OF_COMMON = "X"
        public static VOLUME_ALERT = "Y"
        public static ORDER_IMBALANCE = "Z"
        public static EQUIPMENT_CHANGEOVER = "a"
        public static NO_OPEN = "b"
        public static REGULAR_ETH = "c"
        public static AUTOMATIC_EXECUTION = "d"
        public static AUTOMATIC_EXECUTION_ETH = "e"
        public static FAST_MARKET_ETH = "f "
        public static INACTIVE_ETH = "g"
        public static ROTATION = "h"
        public static ROTATION_ETH = "i"
        public static HALT = "j"
        public static HALT_ETH = "k"
        public static DUE_TO_NEWS_DISSEMINATION = "l"
        public static DUE_TO_NEWS_PENDING = "m"
        public static TRADING_RESUME = "n"
        public static OUT_OF_SEQUENCE = "o"
        public static BID_SPECIALIST = "p"
        public static OFFER_SPECIALIST = "q"
        public static BID_OFFER_SPECIALIST = "r"
        public static END_OF_DAY_SAM = "s"
        public static FORBIDDEN_SAM = "t"
        public static FROZEN_SAM = "u"
        public static PREOPENING_SAM = "v"
        public static OPENING_SAM = "w"
        public static OPEN_SAM = "x"
        public static SURVEILLANCE_SAM = "y"
        public static SUSPENDED_SAM = "z"
        public static RESERVED_SAM = "0"
        public static NO_ACTIVE_SAM = "1"
        public static RESTRICTED = "2"
        public static REST_OF_BOOK_VWAP = "3"
        public static BETTER_PRICES_IN_CONDITIONAL_ORDERS = "4"
        public static MEDIAN_PRICE = "5"
        public static FULL_CURVE = "6"
        public static FLAT_CURVE = "7"
        constructor() {} 
    }
    export class TradeCondition {
        public static tag(): number { return 277 }
        public static CASH = "A"
        public static AVERAGE_PRICE_TRADE = "B"
        public static CASH_TRADE = "C"
        public static NEXT_DAY = "D"
        public static OPENING_REOPENING_TRADE_DETAIL = "E"
        public static INTRADAY_TRADE_DETAIL = "F"
        public static RULE_127_TRADE = "G"
        public static RULE_155_TRADE = "H"
        public static SOLD_LAST = "I"
        public static NEXT_DAY_TRADE = "J"
        public static OPENED = "K"
        public static SELLER = "L"
        public static SOLD = "M"
        public static STOPPED_STOCK = "N"
        public static IMBALANCE_MORE_BUYERS = "P"
        public static IMBALANCE_MORE_SELLERS = "Q"
        public static OPENING_PRICE = "R"
        public static BARGAIN_CONDITION = "S"
        public static CONVERTED_PRICE_INDICATOR = "T"
        public static EXCHANGE_LAST = "U"
        public static FINAL_PRICE_OF_SESSION = "V"
        public static EX_PIT = "W"
        public static CROSSED_X = "X"
        public static TRADES_RESULTING_FROM_MANUAL_SLOW_QUOTE = "Y"
        public static TRADES_RESULTING_FROM_INTERMARKET_SWEEP = "Z"
        public static VOLUME_ONLY = "a"
        public static DIRECT_PLUS = "b"
        public static ACQUISITION = "c"
        public static BUNCHED = "d"
        public static DISTRIBUTION = "e"
        public static BUNCHED_SALE = "f"
        public static SPLIT_TRADE = "g"
        public static CANCEL_STOPPED = "h"
        public static CANCEL_ETH = "i"
        public static CANCEL_STOPPED_ETH = "j"
        public static OUT_OF_SEQUENCE_ETH = "k"
        public static CANCEL_LAST_ETH = "l"
        public static SOLD_LAST_SALE_ETH = "m"
        public static CANCEL_LAST = "n"
        public static SOLD_LAST_SALE = "o"
        public static CANCEL_OPEN = "p"
        public static CANCEL_OPEN_ETH = "q"
        public static OPENED_SALE_ETH = "r"
        public static CANCEL_ONLY = "s"
        public static CANCEL_ONLY_ETH = "t"
        public static LATE_OPEN_ETH = "u"
        public static AUTO_EXECUTION_ETH = "v"
        public static REOPEN = "w"
        public static REOPEN_ETH = "x"
        public static ADJUSTED = "y"
        public static ADJUSTED_ETH = "z"
        public static SPREAD = "AA"
        public static SPREAD_ETH = "AB"
        public static STRADDLE = "AC"
        public static STRADDLE_ETH = "AD"
        public static STOPPED = "AE"
        public static STOPPED_ETH = "AF"
        public static REGULAR_ETH = "AG"
        public static COMBO = "AH"
        public static COMBO_ETH = "AI"
        public static OFFICIAL_CLOSING_PRICE = "AJ"
        public static PRIOR_REFERENCE_PRICE = "AK"
        public static CANCEL = "0"
        public static STOPPED_SOLD_LAST = "AL"
        public static STOPPED_OUT_OF_SEQUENCE = "AM"
        public static OFFICAL_CLOSING_PRICE = "AN"
        public static CROSSED_AO = "AO"
        public static FAST_MARKET = "AP"
        public static AUTOMATIC_EXECUTION = "AQ"
        public static FORM_T = "AR"
        public static BASKET_INDEX = "AS"
        public static BURST_BASKET = "AT"
        public static OUTSIDE_SPREAD = "AV"
        public static IMPLIED_TRADE = "1"
        public static MARKETPLACE_ENTERED_TRADE = "2"
        public static MULT_ASSET_CLASS_MULTILEG_TRADE = "3"
        public static MULTILEG_TO_MULTILEG_TRADE = "4"
        constructor() {} 
    }
    export class MDEntryID {
        public static tag(): number { return 278 }
        constructor() {} 
    }
    export class MDUpdateAction {
        public static tag(): number { return 279 }
        public static NEW = "0"
        public static CHANGE = "1"
        public static DELETE = "2"
        public static DELETE_THRU = "3"
        public static DELETE_FROM = "4"
        public static OVERLAY = "5"
        constructor() {} 
    }
    export class MDEntryRefID {
        public static tag(): number { return 280 }
        constructor() {} 
    }
    export class MDReqRejReason {
        public static tag(): number { return 281 }
        public static UNKNOWN_SYMBOL = "0"
        public static DUPLICATE_MDREQID = "1"
        public static INSUFFICIENT_BANDWIDTH = "2"
        public static INSUFFICIENT_PERMISSIONS = "3"
        public static UNSUPPORTED_SUBSCRIPTIONREQUESTTYPE = "4"
        public static UNSUPPORTED_MARKETDEPTH = "5"
        public static UNSUPPORTED_MDUPDATETYPE = "6"
        public static UNSUPPORTED_AGGREGATEDBOOK = "7"
        public static UNSUPPORTED_MDENTRYTYPE = "8"
        public static UNSUPPORTED_TRADINGSESSIONID = "9"
        public static UNSUPPORTED_SCOPE = "A"
        public static UNSUPPORTED_OPENCLOSESETTLEFLAG = "B"
        public static UNSUPPORTED_MDIMPLICITDELETE = "C"
        public static INSUFFICIENT_CREDIT = "D"
        constructor() {} 
    }
    export class MDEntryOriginator {
        public static tag(): number { return 282 }
        constructor() {} 
    }
    export class LocationID {
        public static tag(): number { return 283 }
        constructor() {} 
    }
    export class DeskID {
        public static tag(): number { return 284 }
        constructor() {} 
    }
    export class DeleteReason {
        public static tag(): number { return 285 }
        public static CANCELLATION = "0"
        public static ERROR = "1"
        constructor() {} 
    }
    export class OpenCloseSettlFlag {
        public static tag(): number { return 286 }
        public static DAILY_OPEN = "0"
        public static SESSION_OPEN = "1"
        public static DELIVERY_SETTLEMENT_ENTRY = "2"
        public static EXPECTED_ENTRY = "3"
        public static ENTRY_FROM_PREVIOUS_BUSINESS_DAY = "4"
        public static THEORETICAL_PRICE_VALUE = "5"
        constructor() {} 
    }
    export class SellerDays {
        public static tag(): number { return 287 }
        constructor() {} 
    }
    export class MDEntryBuyer {
        public static tag(): number { return 288 }
        constructor() {} 
    }
    export class MDEntrySeller {
        public static tag(): number { return 289 }
        constructor() {} 
    }
    export class MDEntryPositionNo {
        public static tag(): number { return 290 }
        constructor() {} 
    }
    export class FinancialStatus {
        public static tag(): number { return 291 }
        public static BANKRUPT = "1"
        public static PENDING_DELISTING = "2"
        public static RESTRICTED = "3"
        constructor() {} 
    }
    export class CorporateAction {
        public static tag(): number { return 292 }
        public static EX_DIVIDEND = "A"
        public static EX_DISTRIBUTION = "B"
        public static EX_RIGHTS = "C"
        public static NEW = "D"
        public static EX_INTEREST = "E"
        public static CASH_DIVIDEND = "F"
        public static STOCK_DIVIDEND = "G"
        public static NON_INTEGER_STOCK_SPLIT = "H"
        public static REVERSE_STOCK_SPLIT = "I"
        public static STANDARD_INTEGER_STOCK_SPLIT = "J"
        public static POSITION_CONSOLIDATION = "K"
        public static LIQUIDATION_REORGANIZATION = "L"
        public static MERGER_REORGANIZATION = "M"
        public static RIGHTS_OFFERING = "N"
        public static SHAREHOLDER_MEETING = "O"
        public static SPINOFF = "P"
        public static TENDER_OFFER = "Q"
        public static WARRANT = "R"
        public static SPECIAL_ACTION = "S"
        public static SYMBOL_CONVERSION = "T"
        public static CUSIP = "U"
        public static LEAP_ROLLOVER = "V"
        public static SUCCESSION_EVENT = "W"
        constructor() {} 
    }
    export class DefBidSize {
        public static tag(): number { return 293 }
        constructor() {} 
    }
    export class DefOfferSize {
        public static tag(): number { return 294 }
        constructor() {} 
    }
    export class NoQuoteEntries {
        public static tag(): number { return 295 }
        constructor() {} 
    }
    export class NoQuoteSets {
        public static tag(): number { return 296 }
        constructor() {} 
    }
    export class QuoteStatus {
        public static tag(): number { return 297 }
        public static ACCEPTED = "0"
        public static CANCEL_FOR_SYMBOL = "1"
        public static CANCELED_FOR_SECURITY_TYPE = "2"
        public static CANCELED_FOR_UNDERLYING = "3"
        public static CANCELED_ALL = "4"
        public static REJECTED = "5"
        public static REMOVED_FROM_MARKET = "6"
        public static EXPIRED = "7"
        public static QUERY = "8"
        public static QUOTE_NOT_FOUND = "9"
        public static PENDING = "10"
        public static PASS = "11"
        public static LOCKED_MARKET_WARNING = "12"
        public static CROSS_MARKET_WARNING = "13"
        public static CANCELED_DUE_TO_LOCK_MARKET = "14"
        public static CANCELED_DUE_TO_CROSS_MARKET = "15"
        public static ACTIVE = "16"
        public static CANCELED = "17"
        public static UNSOLICITED_QUOTE_REPLENISHMENT = "18"
        public static PENDING_END_TRADE = "19"
        public static TOO_LATE_TO_END = "20"
        constructor() {} 
    }
    export class QuoteCancelType {
        public static tag(): number { return 298 }
        public static CANCEL_FOR_ONE_OR_MORE_SECURITIES = "1"
        public static CANCEL_FOR_SECURITY_TYPE = "2"
        public static CANCEL_FOR_UNDERLYING_SECURITY = "3"
        public static CANCEL_ALL_QUOTES = "4"
        public static CANCEL_QUOTE_SPECIFIED_IN_QUOTEID = "5"
        public static CANCEL_BY_QUOTETYPE = "6"
        public static CANCEL_FOR_SECURITY_ISSUER = "7"
        public static CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY = "8"
        constructor() {} 
    }
    export class QuoteEntryID {
        public static tag(): number { return 299 }
        constructor() {} 
    }
    export class QuoteRejectReason {
        public static tag(): number { return 300 }
        public static UNKNOWN_SYMBOL = "1"
        public static EXCHANGE = "2"
        public static QUOTE_REQUEST_EXCEEDS_LIMIT = "3"
        public static TOO_LATE_TO_ENTER = "4"
        public static UNKNOWN_QUOTE = "5"
        public static DUPLICATE_QUOTE = "6"
        public static INVALID_BID_ASK_SPREAD = "7"
        public static INVALID_PRICE = "8"
        public static NOT_AUTHORIZED_TO_QUOTE_SECURITY = "9"
        public static PRICE_EXCEEDS_CURRENT_PRICE_BAND = "10"
        public static QUOTE_LOCKED = "11"
        public static OTHER = "99"
        public static INVALID_OR_UNKNOWN_SECURITY_ISSUER = "12"
        public static INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = "13"
        constructor() {} 
    }
    export class QuoteResponseLevel {
        public static tag(): number { return 301 }
        public static NO_ACKNOWLEDGEMENT = "0"
        public static ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES = "1"
        public static ACKNOWLEDGE_EACH_QUOTE_MESSAGE = "2"
        public static SUMMARY_ACKNOWLEDGEMENT = "3"
        constructor() {} 
    }
    export class QuoteSetID {
        public static tag(): number { return 302 }
        constructor() {} 
    }
    export class QuoteRequestType {
        public static tag(): number { return 303 }
        public static MANUAL = "1"
        public static AUTOMATIC = "2"
        constructor() {} 
    }
    export class TotNoQuoteEntries {
        public static tag(): number { return 304 }
        constructor() {} 
    }
    export class UnderlyingSecurityIDSource {
        public static tag(): number { return 305 }
        constructor() {} 
    }
    export class UnderlyingIssuer {
        public static tag(): number { return 306 }
        constructor() {} 
    }
    export class UnderlyingSecurityDesc {
        public static tag(): number { return 307 }
        constructor() {} 
    }
    export class UnderlyingSecurityExchange {
        public static tag(): number { return 308 }
        constructor() {} 
    }
    export class UnderlyingSecurityID {
        public static tag(): number { return 309 }
        constructor() {} 
    }
    export class UnderlyingSecurityType {
        public static tag(): number { return 310 }
        constructor() {} 
    }
    export class UnderlyingSymbol {
        public static tag(): number { return 311 }
        constructor() {} 
    }
    export class UnderlyingSymbolSfx {
        public static tag(): number { return 312 }
        constructor() {} 
    }
    export class UnderlyingMaturityMonthYear {
        public static tag(): number { return 313 }
        constructor() {} 
    }
    export class UnderlyingPutOrCall {
        public static tag(): number { return 315 }
        constructor() {} 
    }
    export class UnderlyingStrikePrice {
        public static tag(): number { return 316 }
        constructor() {} 
    }
    export class UnderlyingOptAttribute {
        public static tag(): number { return 317 }
        constructor() {} 
    }
    export class UnderlyingCurrency {
        public static tag(): number { return 318 }
        constructor() {} 
    }
    export class SecurityReqID {
        public static tag(): number { return 320 }
        constructor() {} 
    }
    export class SecurityRequestType {
        public static tag(): number { return 321 }
        public static REQUEST_SECURITY_IDENTITY_AND_SPECIFICATIONS = "0"
        public static REQUEST_SECURITY_IDENTITY_FOR_THE_SPECIFICATIONS_PROVIDED = "1"
        public static REQUEST_LIST_SECURITY_TYPES = "2"
        public static REQUEST_LIST_SECURITIES = "3"
        public static SYMBOL = "4"
        public static SECURITYTYPE_AND_OR_CFICODE = "5"
        public static PRODUCT = "6"
        public static TRADINGSESSIONID = "7"
        public static ALL_SECURITIES = "8"
        public static MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID = "9"
        constructor() {} 
    }
    export class SecurityResponseID {
        public static tag(): number { return 322 }
        constructor() {} 
    }
    export class SecurityResponseType {
        public static tag(): number { return 323 }
        public static ACCEPT_SECURITY_PROPOSAL_AS_IS = "1"
        public static ACCEPT_SECURITY_PROPOSAL_WITH_REVISIONS_AS_INDICATED_IN_THE_MESSAGE = "2"
        public static LIST_OF_SECURITY_TYPES_RETURNED_PER_REQUEST = "3"
        public static LIST_OF_SECURITIES_RETURNED_PER_REQUEST = "4"
        public static REJECT_SECURITY_PROPOSAL = "5"
        public static CANNOT_MATCH_SELECTION_CRITERIA = "6"
        constructor() {} 
    }
    export class SecurityStatusReqID {
        public static tag(): number { return 324 }
        constructor() {} 
    }
    export class UnsolicitedIndicator {
        public static tag(): number { return 325 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class SecurityTradingStatus {
        public static tag(): number { return 326 }
        public static OPENING_DELAY = "1"
        public static TRADING_HALT = "2"
        public static RESUME = "3"
        public static NO_OPEN = "4"
        public static PRICE_INDICATION = "5"
        public static TRADING_RANGE_INDICATION = "6"
        public static MARKET_IMBALANCE_BUY = "7"
        public static MARKET_IMBALANCE_SELL = "8"
        public static MARKET_ON_CLOSE_IMBALANCE_BUY = "9"
        public static MARKET_ON_CLOSE_IMBALANCE_SELL = "10"
        public static NO_MARKET_IMBALANCE = "12"
        public static NO_MARKET_ON_CLOSE_IMBALANCE = "13"
        public static ITS_PRE_OPENING = "14"
        public static NEW_PRICE_INDICATION = "15"
        public static TRADE_DISSEMINATION_TIME = "16"
        public static READY_TO_TRADE = "17"
        public static NOT_AVAILABLE_FOR_TRADING = "18"
        public static NOT_TRADED_ON_THIS_MARKET = "19"
        public static UNKNOWN_OR_INVALID = "20"
        public static PRE_OPEN = "21"
        public static OPENING_ROTATION = "22"
        public static FAST_MARKET = "23"
        public static PRE_CROSS = "24"
        public static CROSS = "25"
        public static POST_CLOSE = "26"
        constructor() {} 
    }
    export class HaltReasonInt {
        public static tag(): number { return 327 }
        public static NEWS_DISSEMINATION = "0"
        public static ORDER_INFLUX = "1"
        public static ORDER_IMBALANCE = "2"
        public static ADDITIONAL_INFORMATION = "3"
        public static NEWS_PENDING = "4"
        public static EQUIPMENT_CHANGEOVER = "5"
        constructor() {} 
    }
    export class InViewOfCommon {
        public static tag(): number { return 328 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class DueToRelated {
        public static tag(): number { return 329 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class BuyVolume {
        public static tag(): number { return 330 }
        constructor() {} 
    }
    export class SellVolume {
        public static tag(): number { return 331 }
        constructor() {} 
    }
    export class HighPx {
        public static tag(): number { return 332 }
        constructor() {} 
    }
    export class LowPx {
        public static tag(): number { return 333 }
        constructor() {} 
    }
    export class Adjustment {
        public static tag(): number { return 334 }
        public static CANCEL = "1"
        public static ERROR = "2"
        public static CORRECTION = "3"
        constructor() {} 
    }
    export class TradSesReqID {
        public static tag(): number { return 335 }
        constructor() {} 
    }
    export class TradingSessionID {
        public static tag(): number { return 336 }
        public static DAY = "1"
        public static HALFDAY = "2"
        public static MORNING = "3"
        public static AFTERNOON = "4"
        public static EVENING = "5"
        public static AFTER_HOURS = "6"
        constructor() {} 
    }
    export class ContraTrader {
        public static tag(): number { return 337 }
        constructor() {} 
    }
    export class TradSesMethod {
        public static tag(): number { return 338 }
        public static ELECTRONIC = "1"
        public static OPEN_OUTCRY = "2"
        public static TWO_PARTY = "3"
        constructor() {} 
    }
    export class TradSesMode {
        public static tag(): number { return 339 }
        public static TESTING = "1"
        public static SIMULATED = "2"
        public static PRODUCTION = "3"
        constructor() {} 
    }
    export class TradSesStatus {
        public static tag(): number { return 340 }
        public static UNKNOWN = "0"
        public static HALTED = "1"
        public static OPEN = "2"
        public static CLOSED = "3"
        public static PRE_OPEN = "4"
        public static PRE_CLOSE = "5"
        public static REQUEST_REJECTED = "6"
        constructor() {} 
    }
    export class TradSesStartTime {
        public static tag(): number { return 341 }
        constructor() {} 
    }
    export class TradSesOpenTime {
        public static tag(): number { return 342 }
        constructor() {} 
    }
    export class TradSesPreCloseTime {
        public static tag(): number { return 343 }
        constructor() {} 
    }
    export class TradSesCloseTime {
        public static tag(): number { return 344 }
        constructor() {} 
    }
    export class TradSesEndTime {
        public static tag(): number { return 345 }
        constructor() {} 
    }
    export class NumberOfOrders {
        public static tag(): number { return 346 }
        constructor() {} 
    }
    export class MessageEncoding {
        public static tag(): number { return 347 }
        constructor() {} 
    }
    export class EncodedIssuerLen {
        public static tag(): number { return 348 }
        constructor() {} 
    }
    export class EncodedIssuer {
        public static tag(): number { return 349 }
        constructor() {} 
    }
    export class EncodedSecurityDescLen {
        public static tag(): number { return 350 }
        constructor() {} 
    }
    export class EncodedSecurityDesc {
        public static tag(): number { return 351 }
        constructor() {} 
    }
    export class EncodedListExecInstLen {
        public static tag(): number { return 352 }
        constructor() {} 
    }
    export class EncodedListExecInst {
        public static tag(): number { return 353 }
        constructor() {} 
    }
    export class EncodedTextLen {
        public static tag(): number { return 354 }
        constructor() {} 
    }
    export class EncodedText {
        public static tag(): number { return 355 }
        constructor() {} 
    }
    export class EncodedSubjectLen {
        public static tag(): number { return 356 }
        constructor() {} 
    }
    export class EncodedSubject {
        public static tag(): number { return 357 }
        constructor() {} 
    }
    export class EncodedHeadlineLen {
        public static tag(): number { return 358 }
        constructor() {} 
    }
    export class EncodedHeadline {
        public static tag(): number { return 359 }
        constructor() {} 
    }
    export class EncodedAllocTextLen {
        public static tag(): number { return 360 }
        constructor() {} 
    }
    export class EncodedAllocText {
        public static tag(): number { return 361 }
        constructor() {} 
    }
    export class EncodedUnderlyingIssuerLen {
        public static tag(): number { return 362 }
        constructor() {} 
    }
    export class EncodedUnderlyingIssuer {
        public static tag(): number { return 363 }
        constructor() {} 
    }
    export class EncodedUnderlyingSecurityDescLen {
        public static tag(): number { return 364 }
        constructor() {} 
    }
    export class EncodedUnderlyingSecurityDesc {
        public static tag(): number { return 365 }
        constructor() {} 
    }
    export class AllocPrice {
        public static tag(): number { return 366 }
        constructor() {} 
    }
    export class QuoteSetValidUntilTime {
        public static tag(): number { return 367 }
        constructor() {} 
    }
    export class QuoteEntryRejectReason {
        public static tag(): number { return 368 }
        constructor() {} 
    }
    export class LastMsgSeqNumProcessed {
        public static tag(): number { return 369 }
        constructor() {} 
    }
    export class RefTagID {
        public static tag(): number { return 371 }
        constructor() {} 
    }
    export class RefMsgType {
        public static tag(): number { return 372 }
        constructor() {} 
    }
    export class SessionRejectReason {
        public static tag(): number { return 373 }
        public static INVALID_TAG_NUMBER = "0"
        public static REQUIRED_TAG_MISSING = "1"
        public static TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE = "2"
        public static UNDEFINED_TAG = "3"
        public static TAG_SPECIFIED_WITHOUT_A_VALUE = "4"
        public static VALUE_IS_INCORRECT = "5"
        public static INCORRECT_DATA_FORMAT_FOR_VALUE = "6"
        public static DECRYPTION_PROBLEM = "7"
        public static SIGNATURE_PROBLEM = "8"
        public static COMPID_PROBLEM = "9"
        public static SENDINGTIME_ACCURACY_PROBLEM = "10"
        public static INVALID_MSGTYPE = "11"
        public static XML_VALIDATION_ERROR = "12"
        public static TAG_APPEARS_MORE_THAN_ONCE = "13"
        public static TAG_SPECIFIED_OUT_OF_REQUIRED_ORDER = "14"
        public static REPEATING_GROUP_FIELDS_OUT_OF_ORDER = "15"
        public static INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUP = "16"
        public static NON_DATA_VALUE_INCLUDES_FIELD_DELIMITER = "17"
        public static INVALID_UNSUPPORTED_APPLICATION_VERSION = "18"
        public static OTHER = "99"
        constructor() {} 
    }
    export class BidRequestTransType {
        public static tag(): number { return 374 }
        public static CANCEL = "C"
        public static NO = "N"
        constructor() {} 
    }
    export class ContraBroker {
        public static tag(): number { return 375 }
        constructor() {} 
    }
    export class ComplianceID {
        public static tag(): number { return 376 }
        constructor() {} 
    }
    export class SolicitedFlag {
        public static tag(): number { return 377 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class ExecRestatementReason {
        public static tag(): number { return 378 }
        public static GT_CORPORATE_ACTION = "0"
        public static GT_RENEWAL = "1"
        public static VERBAL_CHANGE = "2"
        public static REPRICING_OF_ORDER = "3"
        public static BROKER_OPTION = "4"
        public static PARTIAL_DECLINE_OF_ORDERQTY = "5"
        public static CANCEL_ON_TRADING_HALT = "6"
        public static CANCEL_ON_SYSTEM_FAILURE = "7"
        public static MARKET = "8"
        public static CANCELED_NOT_BEST = "9"
        public static WAREHOUSE_RECAP = "10"
        public static PEG_REFRESH = "11"
        public static OTHER = "99"
        constructor() {} 
    }
    export class BusinessRejectRefID {
        public static tag(): number { return 379 }
        constructor() {} 
    }
    export class BusinessRejectReason {
        public static tag(): number { return 380 }
        public static OTHER = "0"
        public static UNKNOWN_ID = "1"
        public static UNKNOWN_SECURITY = "2"
        public static UNSUPPORTED_MESSAGE_TYPE = "3"
        public static APPLICATION_NOT_AVAILABLE = "4"
        public static CONDITIONALLY_REQUIRED_FIELD_MISSING = "5"
        public static NOT_AUTHORIZED = "6"
        public static DELIVERTO_FIRM_NOT_AVAILABLE_AT_THIS_TIME = "7"
        public static INVALID_PRICE_INCREMENT = "18"
        constructor() {} 
    }
    export class GrossTradeAmt {
        public static tag(): number { return 381 }
        constructor() {} 
    }
    export class NoContraBrokers {
        public static tag(): number { return 382 }
        constructor() {} 
    }
    export class MaxMessageSize {
        public static tag(): number { return 383 }
        constructor() {} 
    }
    export class NoMsgTypes {
        public static tag(): number { return 384 }
        constructor() {} 
    }
    export class MsgDirection {
        public static tag(): number { return 385 }
        public static RECEIVE = "R"
        public static SEND = "S"
        constructor() {} 
    }
    export class NoTradingSessions {
        public static tag(): number { return 386 }
        constructor() {} 
    }
    export class TotalVolumeTraded {
        public static tag(): number { return 387 }
        constructor() {} 
    }
    export class DiscretionInst {
        public static tag(): number { return 388 }
        public static RELATED_TO_DISPLAYED_PRICE = "0"
        public static RELATED_TO_MARKET_PRICE = "1"
        public static RELATED_TO_PRIMARY_PRICE = "2"
        public static RELATED_TO_LOCAL_PRIMARY_PRICE = "3"
        public static RELATED_TO_MIDPOINT_PRICE = "4"
        public static RELATED_TO_LAST_TRADE_PRICE = "5"
        public static RELATED_TO_VWAP = "6"
        public static AVERAGE_PRICE_GUARANTEE = "7"
        constructor() {} 
    }
    export class DiscretionOffsetValue {
        public static tag(): number { return 389 }
        constructor() {} 
    }
    export class BidID {
        public static tag(): number { return 390 }
        constructor() {} 
    }
    export class ClientBidID {
        public static tag(): number { return 391 }
        constructor() {} 
    }
    export class ListName {
        public static tag(): number { return 392 }
        constructor() {} 
    }
    export class TotNoRelatedSym {
        public static tag(): number { return 393 }
        constructor() {} 
    }
    export class BidType {
        public static tag(): number { return 394 }
        public static NON_DISCLOSED_STYLE = "1"
        public static DISCLOSED_SYTLE = "2"
        public static NO_BIDDING_PROCESS = "3"
        constructor() {} 
    }
    export class NumTickets {
        public static tag(): number { return 395 }
        constructor() {} 
    }
    export class SideValue1 {
        public static tag(): number { return 396 }
        constructor() {} 
    }
    export class SideValue2 {
        public static tag(): number { return 397 }
        constructor() {} 
    }
    export class NoBidDescriptors {
        public static tag(): number { return 398 }
        constructor() {} 
    }
    export class BidDescriptorType {
        public static tag(): number { return 399 }
        public static SECTOR = "1"
        public static COUNTRY = "2"
        public static INDEX = "3"
        constructor() {} 
    }
    export class BidDescriptor {
        public static tag(): number { return 400 }
        constructor() {} 
    }
    export class SideValueInd {
        public static tag(): number { return 401 }
        public static SIDE_VALUE_1 = "1"
        public static SIDE_VALUE_2 = "2"
        constructor() {} 
    }
    export class LiquidityPctLow {
        public static tag(): number { return 402 }
        constructor() {} 
    }
    export class LiquidityPctHigh {
        public static tag(): number { return 403 }
        constructor() {} 
    }
    export class LiquidityValue {
        public static tag(): number { return 404 }
        constructor() {} 
    }
    export class EFPTrackingError {
        public static tag(): number { return 405 }
        constructor() {} 
    }
    export class FairValue {
        public static tag(): number { return 406 }
        constructor() {} 
    }
    export class OutsideIndexPct {
        public static tag(): number { return 407 }
        constructor() {} 
    }
    export class ValueOfFutures {
        public static tag(): number { return 408 }
        constructor() {} 
    }
    export class LiquidityIndType {
        public static tag(): number { return 409 }
        public static $5_DAY_MOVING_AVERAGE = "1"
        public static $20_DAY_MOVING_AVERAGE = "2"
        public static NORMAL_MARKET_SIZE = "3"
        public static OTHER = "4"
        constructor() {} 
    }
    export class WtAverageLiquidity {
        public static tag(): number { return 410 }
        constructor() {} 
    }
    export class ExchangeForPhysical {
        public static tag(): number { return 411 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class OutMainCntryUIndex {
        public static tag(): number { return 412 }
        constructor() {} 
    }
    export class CrossPercent {
        public static tag(): number { return 413 }
        constructor() {} 
    }
    export class ProgRptReqs {
        public static tag(): number { return 414 }
        public static BUY_SIDE_EXPLICITLY_REQUESTS_STATUS_USING_STATUE_REQUEST = "1"
        public static SELL_SIDE_PERIODICALLY_SENDS_STATUS_USING_LIST_STATUS_PERIOD_OPTIONALLY_SPECIFIED_IN_PROGRESSPERIOD = "2"
        public static REAL_TIME_EXECUTION_REPORTS = "3"
        constructor() {} 
    }
    export class ProgPeriodInterval {
        public static tag(): number { return 415 }
        constructor() {} 
    }
    export class IncTaxInd {
        public static tag(): number { return 416 }
        public static NET = "1"
        public static GROSS = "2"
        constructor() {} 
    }
    export class NumBidders {
        public static tag(): number { return 417 }
        constructor() {} 
    }
    export class BidTradeType {
        public static tag(): number { return 418 }
        public static AGENCY = "A"
        public static VWAP_GUARANTEE = "G"
        public static GUARANTEED_CLOSE = "J"
        public static RISK_TRADE = "R"
        constructor() {} 
    }
    export class BasisPxType {
        public static tag(): number { return 419 }
        public static CLOSING_PRICE_AT_MORNING_SESSION = "2"
        public static CLOSING_PRICE = "3"
        public static CURRENT_PRICE = "4"
        public static SQ = "5"
        public static VWAP_THROUGH_A_DAY = "6"
        public static VWAP_THROUGH_A_MORNING_SESSION = "7"
        public static VWAP_THROUGH_AN_AFTERNOON_SESSION = "8"
        public static VWAP_THROUGH_A_DAY_EXCEPT_YORI = "9"
        public static VWAP_THROUGH_A_MORNING_SESSION_EXCEPT_YORI = "A"
        public static VWAP_THROUGH_AN_AFTERNOON_SESSION_EXCEPT_YORI = "B"
        public static STRIKE = "C"
        public static OPEN = "D"
        public static OTHERS = "Z"
        constructor() {} 
    }
    export class NoBidComponents {
        public static tag(): number { return 420 }
        constructor() {} 
    }
    export class Country {
        public static tag(): number { return 421 }
        constructor() {} 
    }
    export class TotNoStrikes {
        public static tag(): number { return 422 }
        constructor() {} 
    }
    export class PriceType {
        public static tag(): number { return 423 }
        public static PERCENTAGE = "1"
        public static PER_UNIT = "2"
        public static FIXED_AMOUNT = "3"
        public static DISCOUNT = "4"
        public static PREMIUM = "5"
        public static SPREAD = "6"
        public static TED_PRICE = "7"
        public static TED_YIELD = "8"
        public static YIELD = "9"
        public static FIXED_CABINET_TRADE_PRICE = "10"
        public static VARIABLE_CABINET_TRADE_PRICE = "11"
        public static PRODUCT_TICKS_IN_HALFS = "13"
        public static PRODUCT_TICKS_IN_FOURTHS = "14"
        public static PRODUCT_TICKS_IN_EIGHTS = "15"
        public static PRODUCT_TICKS_IN_SIXTEENTHS = "16"
        public static PRODUCT_TICKS_IN_THIRTY_SECONDS = "17"
        public static PRODUCT_TICKS_IN_SIXTY_FORTHS = "18"
        public static PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTS = "19"
        constructor() {} 
    }
    export class DayOrderQty {
        public static tag(): number { return 424 }
        constructor() {} 
    }
    export class DayCumQty {
        public static tag(): number { return 425 }
        constructor() {} 
    }
    export class DayAvgPx {
        public static tag(): number { return 426 }
        constructor() {} 
    }
    export class GTBookingInst {
        public static tag(): number { return 427 }
        public static BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION = "0"
        public static ACCUMULATE_EXECTUIONS_UNTIL_FORDER_IS_FILLED_OR_EXPIRES = "1"
        public static ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE = "2"
        constructor() {} 
    }
    export class NoStrikes {
        public static tag(): number { return 428 }
        constructor() {} 
    }
    export class ListStatusType {
        public static tag(): number { return 429 }
        public static ACK = "1"
        public static RESPONSE = "2"
        public static TIMED = "3"
        public static EXEC_STARTED = "4"
        public static ALL_DONE = "5"
        public static ALERT = "6"
        constructor() {} 
    }
    export class NetGrossInd {
        public static tag(): number { return 430 }
        public static NET = "1"
        public static GROSS = "2"
        constructor() {} 
    }
    export class ListOrderStatus {
        public static tag(): number { return 431 }
        public static IN_BIDDING_PROCESS = "1"
        public static RECEIVED_FOR_EXECUTION = "2"
        public static EXECUTING = "3"
        public static CANCELLING = "4"
        public static ALERT = "5"
        public static ALL_DONE = "6"
        public static REJECT = "7"
        constructor() {} 
    }
    export class ExpireDate {
        public static tag(): number { return 432 }
        constructor() {} 
    }
    export class ListExecInstType {
        public static tag(): number { return 433 }
        public static IMMEDIATE = "1"
        public static WAIT_FOR_EXECUT_INSTRUCTION = "2"
        public static EXCHANGE_SWITCH_CIV_ORDER_3 = "3"
        public static EXCHANGE_SWITCH_CIV_ORDER_4 = "4"
        public static EXCHANGE_SWITCH_CIV_ORDER_5 = "5"
        constructor() {} 
    }
    export class CxlRejResponseTo {
        public static tag(): number { return 434 }
        public static ORDER_CANCEL_REQUEST = "1"
        public static ORDER_CANCEL_REPLACE_REQUEST = "2"
        constructor() {} 
    }
    export class UnderlyingCouponRate {
        public static tag(): number { return 435 }
        constructor() {} 
    }
    export class UnderlyingContractMultiplier {
        public static tag(): number { return 436 }
        constructor() {} 
    }
    export class ContraTradeQty {
        public static tag(): number { return 437 }
        constructor() {} 
    }
    export class ContraTradeTime {
        public static tag(): number { return 438 }
        constructor() {} 
    }
    export class LiquidityNumSecurities {
        public static tag(): number { return 441 }
        constructor() {} 
    }
    export class MultiLegReportingType {
        public static tag(): number { return 442 }
        public static SINGLE_SECURITY = "1"
        public static INDIVIDUAL_LEG_OF_A_MULTI_LEG_SECURITY = "2"
        public static MULTI_LEG_SECURITY = "3"
        constructor() {} 
    }
    export class StrikeTime {
        public static tag(): number { return 443 }
        constructor() {} 
    }
    export class ListStatusText {
        public static tag(): number { return 444 }
        constructor() {} 
    }
    export class EncodedListStatusTextLen {
        public static tag(): number { return 445 }
        constructor() {} 
    }
    export class EncodedListStatusText {
        public static tag(): number { return 446 }
        constructor() {} 
    }
    export class PartyIDSource {
        public static tag(): number { return 447 }
        public static UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = "6"
        public static US_SOCIAL_SECURITY_NUMBER = "7"
        public static US_EMPLOYER_OR_TAX_ID_NUMBER = "8"
        public static AUSTRALIAN_BUSINESS_NUMBER = "9"
        public static AUSTRALIAN_TAX_FILE_NUMBER = "A"
        public static KOREAN_INVESTOR_ID = "1"
        public static TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = "2"
        public static TAIWANESE_TRADING_ACCT = "3"
        public static MALAYSIAN_CENTRAL_DEPOSITORY = "4"
        public static CHINESE_INVESTOR_ID = "5"
        public static DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = "I"
        public static BIC = "B"
        public static GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = "C"
        public static PROPRIETARY = "D"
        public static ISO_COUNTRY_CODE = "E"
        public static SETTLEMENT_ENTITY_LOCATION = "F"
        public static MIC = "G"
        public static CSD_PARTICIPANT_MEMBER_CODE = "H"
        constructor() {} 
    }
    export class PartyID {
        public static tag(): number { return 448 }
        constructor() {} 
    }
    export class NetChgPrevDay {
        public static tag(): number { return 451 }
        constructor() {} 
    }
    export class PartyRole {
        public static tag(): number { return 452 }
        public static EXECUTING_FIRM = "1"
        public static BROKER_OF_CREDIT = "2"
        public static CLIENT_ID = "3"
        public static CLEARING_FIRM = "4"
        public static INVESTOR_ID = "5"
        public static INTRODUCING_FIRM = "6"
        public static ENTERING_FIRM = "7"
        public static LOCATE = "8"
        public static FUND_MANAGER_CLIENT_ID = "9"
        public static SETTLEMENT_LOCATION = "10"
        public static ORDER_ORIGINATION_TRADER = "11"
        public static EXECUTING_TRADER = "12"
        public static ORDER_ORIGINATION_FIRM = "13"
        public static GIVEUP_CLEARING_FIRM = "14"
        public static CORRESPONDANT_CLEARING_FIRM = "15"
        public static EXECUTING_SYSTEM = "16"
        public static CONTRA_FIRM = "17"
        public static CONTRA_CLEARING_FIRM = "18"
        public static SPONSORING_FIRM = "19"
        public static UNDERLYING_CONTRA_FIRM = "20"
        public static CLEARING_ORGANIZATION = "21"
        public static EXCHANGE = "22"
        public static CUSTOMER_ACCOUNT = "24"
        public static CORRESPONDENT_CLEARING_ORGANIZATION = "25"
        public static CORRESPONDENT_BROKER = "26"
        public static BUYER_SELLER = "27"
        public static CUSTODIAN = "28"
        public static INTERMEDIARY = "29"
        public static AGENT = "30"
        public static SUB_CUSTODIAN = "31"
        public static BENEFICIARY = "32"
        public static INTERESTED_PARTY = "33"
        public static REGULATORY_BODY = "34"
        public static LIQUIDITY_PROVIDER = "35"
        public static ENTERING_TRADER = "36"
        public static CONTRA_TRADER = "37"
        public static POSITION_ACCOUNT = "38"
        public static CONTRA_INVESTOR_ID = "39"
        public static TRANSFER_TO_FIRM = "40"
        public static CONTRA_POSITION_ACCOUNT = "41"
        public static CONTRA_EXCHANGE = "42"
        public static INTERNAL_CARRY_ACCOUNT = "43"
        public static ORDER_ENTRY_OPERATOR_ID = "44"
        public static SECONDARY_ACCOUNT_NUMBER = "45"
        public static FOREIGN_FIRM = "46"
        public static THIRD_PARTY_ALLOCATION_FIRM = "47"
        public static CLAIMING_ACCOUNT = "48"
        public static ASSET_MANAGER = "49"
        public static PLEDGOR_ACCOUNT = "50"
        public static PLEDGEE_ACCOUNT = "51"
        public static LARGE_TRADER_REPORTABLE_ACCOUNT = "52"
        public static TRADER_MNEMONIC = "53"
        public static SENDER_LOCATION = "54"
        public static SESSION_ID = "55"
        public static ACCEPTABLE_COUNTERPARTY = "56"
        public static UNACCEPTABLE_COUNTERPARTY = "57"
        public static ENTERING_UNIT = "58"
        public static EXECUTING_UNIT = "59"
        public static INTRODUCING_BROKER = "60"
        public static QUOTE_ORIGINATOR = "61"
        public static REPORT_ORIGINATOR = "62"
        public static SYSTEMATIC_INTERNALISER = "63"
        public static MULTILATERAL_TRADING_FACILITY = "64"
        public static REGULATED_MARKET = "65"
        public static MARKET_MAKER = "66"
        public static INVESTMENT_FIRM = "67"
        public static HOST_COMPETENT_AUTHORITY = "68"
        public static HOME_COMPETENT_AUTHORITY = "69"
        public static COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = "70"
        public static COMPETENT_AUTHORITY_OF_THE_TRANSACTION = "71"
        public static REPORTING_INTERMEDIARY = "72"
        public static EXECUTION_VENUE = "73"
        public static MARKET_DATA_ENTRY_ORIGINATOR = "74"
        public static LOCATION_ID = "75"
        public static DESK_ID = "76"
        public static MARKET_DATA_MARKET = "77"
        public static ALLOCATION_ENTITY = "78"
        public static PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = "79"
        public static STEP_OUT_FIRM = "80"
        public static BROKERCLEARINGID = "81"
        public static CENTRAL_REGISTRATION_DEPOSITORY = "82"
        public static CLEARING_ACCOUNT = "83"
        public static ACCEPTABLE_SETTLING_COUNTERPARTY = "84"
        public static UNACCEPTABLE_SETTLING_COUNTERPARTY = "85"
        constructor() {} 
    }
    export class NoPartyIDs {
        public static tag(): number { return 453 }
        constructor() {} 
    }
    export class NoSecurityAltID {
        public static tag(): number { return 454 }
        constructor() {} 
    }
    export class SecurityAltID {
        public static tag(): number { return 455 }
        constructor() {} 
    }
    export class SecurityAltIDSource {
        public static tag(): number { return 456 }
        constructor() {} 
    }
    export class NoUnderlyingSecurityAltID {
        public static tag(): number { return 457 }
        constructor() {} 
    }
    export class UnderlyingSecurityAltID {
        public static tag(): number { return 458 }
        constructor() {} 
    }
    export class UnderlyingSecurityAltIDSource {
        public static tag(): number { return 459 }
        constructor() {} 
    }
    export class Product {
        public static tag(): number { return 460 }
        public static AGENCY = "1"
        public static COMMODITY = "2"
        public static CORPORATE = "3"
        public static CURRENCY = "4"
        public static EQUITY = "5"
        public static GOVERNMENT = "6"
        public static INDEX = "7"
        public static LOAN = "8"
        public static MONEYMARKET = "9"
        public static MORTGAGE = "10"
        public static MUNICIPAL = "11"
        public static OTHER = "12"
        public static FINANCING = "13"
        constructor() {} 
    }
    export class CFICode {
        public static tag(): number { return 461 }
        constructor() {} 
    }
    export class UnderlyingProduct {
        public static tag(): number { return 462 }
        constructor() {} 
    }
    export class UnderlyingCFICode {
        public static tag(): number { return 463 }
        constructor() {} 
    }
    export class TestMessageIndicator {
        public static tag(): number { return 464 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class BookingRefID {
        public static tag(): number { return 466 }
        constructor() {} 
    }
    export class IndividualAllocID {
        public static tag(): number { return 467 }
        constructor() {} 
    }
    export class RoundingDirection {
        public static tag(): number { return 468 }
        public static ROUND_TO_NEAREST = "0"
        public static ROUND_DOWN = "1"
        public static ROUND_UP = "2"
        constructor() {} 
    }
    export class RoundingModulus {
        public static tag(): number { return 469 }
        constructor() {} 
    }
    export class CountryOfIssue {
        public static tag(): number { return 470 }
        constructor() {} 
    }
    export class StateOrProvinceOfIssue {
        public static tag(): number { return 471 }
        constructor() {} 
    }
    export class LocaleOfIssue {
        public static tag(): number { return 472 }
        constructor() {} 
    }
    export class NoRegistDtls {
        public static tag(): number { return 473 }
        constructor() {} 
    }
    export class MailingDtls {
        public static tag(): number { return 474 }
        constructor() {} 
    }
    export class InvestorCountryOfResidence {
        public static tag(): number { return 475 }
        constructor() {} 
    }
    export class PaymentRef {
        public static tag(): number { return 476 }
        constructor() {} 
    }
    export class DistribPaymentMethod {
        public static tag(): number { return 477 }
        public static CREST = "1"
        public static NSCC = "2"
        public static EUROCLEAR = "3"
        public static CLEARSTREAM = "4"
        public static CHEQUE = "5"
        public static TELEGRAPHIC_TRANSFER = "6"
        public static FED_WIRE = "7"
        public static DIRECT_CREDIT = "8"
        public static ACH_CREDIT = "9"
        public static BPAY = "10"
        public static HIGH_VALUE_CLEARING_SYSTEM_HVACS = "11"
        public static REINVEST_IN_FUND = "12"
        constructor() {} 
    }
    export class CashDistribCurr {
        public static tag(): number { return 478 }
        constructor() {} 
    }
    export class CommCurrency {
        public static tag(): number { return 479 }
        constructor() {} 
    }
    export class CancellationRights {
        public static tag(): number { return 480 }
        public static YES = "Y"
        public static NO_N = "N"
        public static NO_M = "M"
        public static NO_O = "O"
        constructor() {} 
    }
    export class MoneyLaunderingStatus {
        public static tag(): number { return 481 }
        public static PASSED = "Y"
        public static NOT_CHECKED = "N"
        public static EXEMPT_1 = "1"
        public static EXEMPT_2 = "2"
        public static EXEMPT_3 = "3"
        constructor() {} 
    }
    export class MailingInst {
        public static tag(): number { return 482 }
        constructor() {} 
    }
    export class TransBkdTime {
        public static tag(): number { return 483 }
        constructor() {} 
    }
    export class ExecPriceType {
        public static tag(): number { return 484 }
        public static BID_PRICE = "B"
        public static CREATION_PRICE = "C"
        public static CREATION_PRICE_PLUS_ADJUSTMENT_PERCENT = "D"
        public static CREATION_PRICE_PLUS_ADJUSTMENT_AMOUNT = "E"
        public static OFFER_PRICE = "O"
        public static OFFER_PRICE_MINUS_ADJUSTMENT_PERCENT = "P"
        public static OFFER_PRICE_MINUS_ADJUSTMENT_AMOUNT = "Q"
        public static SINGLE_PRICE = "S"
        constructor() {} 
    }
    export class ExecPriceAdjustment {
        public static tag(): number { return 485 }
        constructor() {} 
    }
    export class DateOfBirth {
        public static tag(): number { return 486 }
        constructor() {} 
    }
    export class TradeReportTransType {
        public static tag(): number { return 487 }
        public static NEW = "0"
        public static CANCEL = "1"
        public static REPLACE = "2"
        public static RELEASE = "3"
        public static REVERSE = "4"
        public static CANCEL_DUE_TO_BACK_OUT_OF_TRADE = "5"
        constructor() {} 
    }
    export class CardHolderName {
        public static tag(): number { return 488 }
        constructor() {} 
    }
    export class CardNumber {
        public static tag(): number { return 489 }
        constructor() {} 
    }
    export class CardExpDate {
        public static tag(): number { return 490 }
        constructor() {} 
    }
    export class CardIssNum {
        public static tag(): number { return 491 }
        constructor() {} 
    }
    export class PaymentMethod {
        public static tag(): number { return 492 }
        public static CREST = "1"
        public static NSCC = "2"
        public static EUROCLEAR = "3"
        public static CLEARSTREAM = "4"
        public static CHEQUE = "5"
        public static TELEGRAPHIC_TRANSFER = "6"
        public static FED_WIRE = "7"
        public static DEBIT_CARD = "8"
        public static DIRECT_DEBIT = "9"
        public static DIRECT_CREDIT = "10"
        public static CREDIT_CARD = "11"
        public static ACH_DEBIT = "12"
        public static ACH_CREDIT = "13"
        public static BPAY = "14"
        public static HIGH_VALUE_CLEARING_SYSTEM = "15"
        constructor() {} 
    }
    export class RegistAcctType {
        public static tag(): number { return 493 }
        constructor() {} 
    }
    export class Designation {
        public static tag(): number { return 494 }
        constructor() {} 
    }
    export class TaxAdvantageType {
        public static tag(): number { return 495 }
        public static NONE_NOT_APPLICABLE = "0"
        public static MAXI_ISA = "1"
        public static TESSA = "2"
        public static MINI_CASH_ISA = "3"
        public static MINI_STOCKS_AND_SHARES_ISA = "4"
        public static MINI_INSURANCE_ISA = "5"
        public static CURRENT_YEAR_PAYMENT = "6"
        public static PRIOR_YEAR_PAYMENT = "7"
        public static ASSET_TRANSFER = "8"
        public static EMPLOYEE_9 = "9"
        public static EMPLOYEE_10 = "10"
        public static EMPLOYER_11 = "11"
        public static EMPLOYER_12 = "12"
        public static NON_FUND_PROTOTYPE_IRA = "13"
        public static NON_FUND_QUALIFIED_PLAN = "14"
        public static DEFINED_CONTRIBUTION_PLAN = "15"
        public static INDIVIDUAL_RETIREMENT_ACCOUNT_16 = "16"
        public static INDIVIDUAL_RETIREMENT_ACCOUNT_17 = "17"
        public static KEOGH = "18"
        public static PROFIT_SHARING_PLAN = "19"
        public static $401 = "20"
        public static SELF_DIRECTED_IRA = "21"
        public static $403 = "22"
        public static $457 = "23"
        public static ROTH_IRA_24 = "24"
        public static ROTH_IRA_25 = "25"
        public static ROTH_CONVERSION_IRA_26 = "26"
        public static ROTH_CONVERSION_IRA_27 = "27"
        public static EDUCATION_IRA_28 = "28"
        public static EDUCATION_IRA_29 = "29"
        public static OTHER = "999"
        constructor() {} 
    }
    export class RegistRejReasonText {
        public static tag(): number { return 496 }
        constructor() {} 
    }
    export class FundRenewWaiv {
        public static tag(): number { return 497 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class CashDistribAgentName {
        public static tag(): number { return 498 }
        constructor() {} 
    }
    export class CashDistribAgentCode {
        public static tag(): number { return 499 }
        constructor() {} 
    }
    export class CashDistribAgentAcctNumber {
        public static tag(): number { return 500 }
        constructor() {} 
    }
    export class CashDistribPayRef {
        public static tag(): number { return 501 }
        constructor() {} 
    }
    export class CashDistribAgentAcctName {
        public static tag(): number { return 502 }
        constructor() {} 
    }
    export class CardStartDate {
        public static tag(): number { return 503 }
        constructor() {} 
    }
    export class PaymentDate {
        public static tag(): number { return 504 }
        constructor() {} 
    }
    export class PaymentRemitterID {
        public static tag(): number { return 505 }
        constructor() {} 
    }
    export class RegistStatus {
        public static tag(): number { return 506 }
        public static ACCEPTED = "A"
        public static REJECTED = "R"
        public static HELD = "H"
        public static REMINDER = "N"
        constructor() {} 
    }
    export class RegistRejReasonCode {
        public static tag(): number { return 507 }
        public static INVALID_UNACCEPTABLE_ACCOUNT_TYPE = "1"
        public static INVALID_UNACCEPTABLE_TAX_EXEMPT_TYPE = "2"
        public static INVALID_UNACCEPTABLE_OWNERSHIP_TYPE = "3"
        public static INVALID_UNACCEPTABLE_NO_REG_DETAILS = "4"
        public static INVALID_UNACCEPTABLE_REG_SEQ_NO = "5"
        public static INVALID_UNACCEPTABLE_REG_DETAILS = "6"
        public static INVALID_UNACCEPTABLE_MAILING_DETAILS = "7"
        public static INVALID_UNACCEPTABLE_MAILING_INSTRUCTIONS = "8"
        public static INVALID_UNACCEPTABLE_INVESTOR_ID = "9"
        public static INVALID_UNACEEPTABLE_INVESTOR_ID_SOURCE = "10"
        public static INVALID_UNACCEPTABLE_DATE_OF_BIRTH = "11"
        public static INVALID_UNACCEPTABLE_INVESTOR_COUNTRY_OF_RESIDENCE = "12"
        public static INVALID_UNACCEPTABLE_NO_DISTRIB_INSTNS = "13"
        public static INVALID_UNACCEPTABLE_DISTRIB_PERCENTAGE = "14"
        public static INVALID_UNACCEPTABLE_DISTRIB_PAYMENT_METHOD = "15"
        public static INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NAME = "16"
        public static INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_CODE = "17"
        public static INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NUM = "18"
        public static OTHER = "99"
        constructor() {} 
    }
    export class RegistRefID {
        public static tag(): number { return 508 }
        constructor() {} 
    }
    export class RegistDtls {
        public static tag(): number { return 509 }
        constructor() {} 
    }
    export class NoDistribInsts {
        public static tag(): number { return 510 }
        constructor() {} 
    }
    export class RegistEmail {
        public static tag(): number { return 511 }
        constructor() {} 
    }
    export class DistribPercentage {
        public static tag(): number { return 512 }
        constructor() {} 
    }
    export class RegistID {
        public static tag(): number { return 513 }
        constructor() {} 
    }
    export class RegistTransType {
        public static tag(): number { return 514 }
        public static NEW = "0"
        public static CANCEL = "2"
        public static REPLACE = "1"
        constructor() {} 
    }
    export class ExecValuationPoint {
        public static tag(): number { return 515 }
        constructor() {} 
    }
    export class OrderPercent {
        public static tag(): number { return 516 }
        constructor() {} 
    }
    export class OwnershipType {
        public static tag(): number { return 517 }
        public static JOINT_INVESTORS = "J"
        public static TENANTS_IN_COMMON = "T"
        public static JOINT_TRUSTEES = "2"
        constructor() {} 
    }
    export class NoContAmts {
        public static tag(): number { return 518 }
        constructor() {} 
    }
    export class ContAmtType {
        public static tag(): number { return 519 }
        public static COMMISSION_AMOUNT = "1"
        public static COMMISSION_PERCENT = "2"
        public static INITIAL_CHARGE_AMOUNT = "3"
        public static INITIAL_CHARGE_PERCENT = "4"
        public static DISCOUNT_AMOUNT = "5"
        public static DISCOUNT_PERCENT = "6"
        public static DILUTION_LEVY_AMOUNT = "7"
        public static DILUTION_LEVY_PERCENT = "8"
        public static EXIT_CHARGE_AMOUNT = "9"
        public static EXIT_CHARGE_PERCENT = "10"
        public static FUND_BASED_RENEWAL_COMMISSION_PERCENT = "11"
        public static PROJECTED_FUND_VALUE = "12"
        public static FUND_BASED_RENEWAL_COMMISSION_AMOUNT_13 = "13"
        public static FUND_BASED_RENEWAL_COMMISSION_AMOUNT_14 = "14"
        public static NET_SETTLEMENT_AMOUNT = "15"
        constructor() {} 
    }
    export class ContAmtValue {
        public static tag(): number { return 520 }
        constructor() {} 
    }
    export class ContAmtCurr {
        public static tag(): number { return 521 }
        constructor() {} 
    }
    export class OwnerType {
        public static tag(): number { return 522 }
        public static INDIVIDUAL_INVESTOR = "1"
        public static PUBLIC_COMPANY = "2"
        public static PRIVATE_COMPANY = "3"
        public static INDIVIDUAL_TRUSTEE = "4"
        public static COMPANY_TRUSTEE = "5"
        public static PENSION_PLAN = "6"
        public static CUSTODIAN_UNDER_GIFTS_TO_MINORS_ACT = "7"
        public static TRUSTS = "8"
        public static FIDUCIARIES = "9"
        public static NETWORKING_SUB_ACCOUNT = "10"
        public static NON_PROFIT_ORGANIZATION = "11"
        public static CORPORATE_BODY = "12"
        public static NOMINEE = "13"
        constructor() {} 
    }
    export class PartySubID {
        public static tag(): number { return 523 }
        constructor() {} 
    }
    export class NestedPartyID {
        public static tag(): number { return 524 }
        constructor() {} 
    }
    export class NestedPartyIDSource {
        public static tag(): number { return 525 }
        constructor() {} 
    }
    export class SecondaryClOrdID {
        public static tag(): number { return 526 }
        constructor() {} 
    }
    export class SecondaryExecID {
        public static tag(): number { return 527 }
        constructor() {} 
    }
    export class OrderCapacity {
        public static tag(): number { return 528 }
        public static AGENCY = "A"
        public static PROPRIETARY = "G"
        public static INDIVIDUAL = "I"
        public static PRINCIPAL = "P"
        public static RISKLESS_PRINCIPAL = "R"
        public static AGENT_FOR_OTHER_MEMBER = "W"
        constructor() {} 
    }
    export class OrderRestrictions {
        public static tag(): number { return 529 }
        public static PROGRAM_TRADE = "1"
        public static INDEX_ARBITRAGE = "2"
        public static NON_INDEX_ARBITRAGE = "3"
        public static COMPETING_MARKET_MAKER = "4"
        public static ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITY = "5"
        public static ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_OF_A_DERIVATIVE_SECURITY = "6"
        public static FOREIGN_ENTITY = "7"
        public static EXTERNAL_MARKET_PARTICIPANT = "8"
        public static EXTERNAL_INTER_CONNECTED_MARKET_LINKAGE = "9"
        public static RISKLESS_ARBITRAGE = "A"
        public static ISSUER_HOLDING = "B"
        public static ISSUE_PRICE_STABILIZATION = "C"
        public static NON_ALGORITHMIC = "D"
        public static ALGORITHMIC = "E"
        public static CROSS = "F"
        constructor() {} 
    }
    export class MassCancelRequestType {
        public static tag(): number { return 530 }
        public static CANCEL_ORDERS_FOR_A_SECURITY = "1"
        public static CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITY = "2"
        public static CANCEL_ORDERS_FOR_A_PRODUCT = "3"
        public static CANCEL_ORDERS_FOR_A_CFICODE = "4"
        public static CANCEL_ORDERS_FOR_A_SECURITYTYPE = "5"
        public static CANCEL_ORDERS_FOR_A_TRADING_SESSION = "6"
        public static CANCEL_ALL_ORDERS = "7"
        public static CANCEL_ORDERS_FOR_A_MARKET = "8"
        public static CANCEL_ORDERS_FOR_A_MARKET_SEGMENT = "9"
        public static CANCEL_ORDERS_FOR_A_SECURITY_GROUP = "A"
        public static CANCEL_FOR_SECURITY_ISSUER = "B"
        public static CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY = "C"
        constructor() {} 
    }
    export class MassCancelResponse {
        public static tag(): number { return 531 }
        public static CANCEL_REQUEST_REJECTED = "0"
        public static CANCEL_ORDERS_FOR_A_SECURITY = "1"
        public static CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITY = "2"
        public static CANCEL_ORDERS_FOR_A_PRODUCT = "3"
        public static CANCEL_ORDERS_FOR_A_CFICODE = "4"
        public static CANCEL_ORDERS_FOR_A_SECURITYTYPE = "5"
        public static CANCEL_ORDERS_FOR_A_TRADING_SESSION = "6"
        public static CANCEL_ALL_ORDERS = "7"
        public static CANCEL_ORDERS_FOR_A_MARKET = "8"
        public static CANCEL_ORDERS_FOR_A_MARKET_SEGMENT = "9"
        public static CANCEL_ORDERS_FOR_A_SECURITY_GROUP = "A"
        public static CANCEL_ORDERS_FOR_A_SECURITIES_ISSUER = "B"
        public static CANCEL_ORDERS_FOR_ISSUER_OF_UNDERLYING_SECURITY = "C"
        constructor() {} 
    }
    export class MassCancelRejectReason {
        public static tag(): number { return 532 }
        public static MASS_CANCEL_NOT_SUPPORTED = "0"
        public static INVALID_OR_UNKNOWN_SECURITY = "1"
        public static INVALID_OR_UNKOWN_UNDERLYING_SECURITY = "2"
        public static INVALID_OR_UNKNOWN_PRODUCT = "3"
        public static INVALID_OR_UNKNOWN_CFICODE = "4"
        public static INVALID_OR_UNKNOWN_SECURITYTYPE = "5"
        public static INVALID_OR_UNKNOWN_TRADING_SESSION = "6"
        public static INVALID_OR_UNKNOWN_MARKET = "7"
        public static INVALID_OR_UNKOWN_MARKET_SEGMENT = "8"
        public static INVALID_OR_UNKNOWN_SECURITY_GROUP = "9"
        public static OTHER = "99"
        public static INVALID_OR_UNKNOWN_SECURITY_ISSUER = "10"
        public static INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = "11"
        constructor() {} 
    }
    export class TotalAffectedOrders {
        public static tag(): number { return 533 }
        constructor() {} 
    }
    export class NoAffectedOrders {
        public static tag(): number { return 534 }
        constructor() {} 
    }
    export class AffectedOrderID {
        public static tag(): number { return 535 }
        constructor() {} 
    }
    export class AffectedSecondaryOrderID {
        public static tag(): number { return 536 }
        constructor() {} 
    }
    export class QuoteType {
        public static tag(): number { return 537 }
        public static INDICATIVE = "0"
        public static TRADEABLE = "1"
        public static RESTRICTED_TRADEABLE = "2"
        public static COUNTER = "3"
        constructor() {} 
    }
    export class NestedPartyRole {
        public static tag(): number { return 538 }
        constructor() {} 
    }
    export class NoNestedPartyIDs {
        public static tag(): number { return 539 }
        constructor() {} 
    }
    export class TotalAccruedInterestAmt {
        public static tag(): number { return 540 }
        constructor() {} 
    }
    export class MaturityDate {
        public static tag(): number { return 541 }
        constructor() {} 
    }
    export class UnderlyingMaturityDate {
        public static tag(): number { return 542 }
        constructor() {} 
    }
    export class InstrRegistry {
        public static tag(): number { return 543 }
        constructor() {} 
    }
    export class CashMargin {
        public static tag(): number { return 544 }
        public static CASH = "1"
        public static MARGIN_OPEN = "2"
        public static MARGIN_CLOSE = "3"
        constructor() {} 
    }
    export class NestedPartySubID {
        public static tag(): number { return 545 }
        constructor() {} 
    }
    export class Scope {
        public static tag(): number { return 546 }
        public static LOCAL_MARKET = "1"
        public static NATIONAL = "2"
        public static GLOBAL = "3"
        constructor() {} 
    }
    export class MDImplicitDelete {
        public static tag(): number { return 547 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class CrossID {
        public static tag(): number { return 548 }
        constructor() {} 
    }
    export class CrossType {
        public static tag(): number { return 549 }
        public static CROSS_AON = "1"
        public static CROSS_IOC = "2"
        public static CROSS_ONE_SIDE = "3"
        public static CROSS_SAME_PRICE = "4"
        constructor() {} 
    }
    export class CrossPrioritization {
        public static tag(): number { return 550 }
        public static NONE = "0"
        public static BUY_SIDE_IS_PRIORITIZED = "1"
        public static SELL_SIDE_IS_PRIORITIZED = "2"
        constructor() {} 
    }
    export class OrigCrossID {
        public static tag(): number { return 551 }
        constructor() {} 
    }
    export class NoSides {
        public static tag(): number { return 552 }
        public static ONE_SIDE = "1"
        public static BOTH_SIDES = "2"
        constructor() {} 
    }
    export class Username {
        public static tag(): number { return 553 }
        constructor() {} 
    }
    export class Password {
        public static tag(): number { return 554 }
        constructor() {} 
    }
    export class NoLegs {
        public static tag(): number { return 555 }
        constructor() {} 
    }
    export class LegCurrency {
        public static tag(): number { return 556 }
        constructor() {} 
    }
    export class TotNoSecurityTypes {
        public static tag(): number { return 557 }
        constructor() {} 
    }
    export class NoSecurityTypes {
        public static tag(): number { return 558 }
        constructor() {} 
    }
    export class SecurityListRequestType {
        public static tag(): number { return 559 }
        public static SYMBOL = "0"
        public static SECURITYTYPE_AND_OR_CFICODE = "1"
        public static PRODUCT = "2"
        public static TRADINGSESSIONID = "3"
        public static ALL_SECURITIES = "4"
        public static MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID = "5"
        constructor() {} 
    }
    export class SecurityRequestResult {
        public static tag(): number { return 560 }
        public static VALID_REQUEST = "0"
        public static INVALID_OR_UNSUPPORTED_REQUEST = "1"
        public static NO_INSTRUMENTS_FOUND_THAT_MATCH_SELECTION_CRITERIA = "2"
        public static NOT_AUTHORIZED_TO_RETRIEVE_INSTRUMENT_DATA = "3"
        public static INSTRUMENT_DATA_TEMPORARILY_UNAVAILABLE = "4"
        public static REQUEST_FOR_INSTRUMENT_DATA_NOT_SUPPORTED = "5"
        constructor() {} 
    }
    export class RoundLot {
        public static tag(): number { return 561 }
        constructor() {} 
    }
    export class MinTradeVol {
        public static tag(): number { return 562 }
        constructor() {} 
    }
    export class MultiLegRptTypeReq {
        public static tag(): number { return 563 }
        public static REPORT_BY_MULITLEG_SECURITY_ONLY = "0"
        public static REPORT_BY_MULTILEG_SECURITY_AND_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY = "1"
        public static REPORT_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY_ONLY = "2"
        constructor() {} 
    }
    export class LegPositionEffect {
        public static tag(): number { return 564 }
        constructor() {} 
    }
    export class LegCoveredOrUncovered {
        public static tag(): number { return 565 }
        constructor() {} 
    }
    export class LegPrice {
        public static tag(): number { return 566 }
        constructor() {} 
    }
    export class TradSesStatusRejReason {
        public static tag(): number { return 567 }
        public static UNKNOWN_OR_INVALID_TRADINGSESSIONID = "1"
        public static OTHER = "99"
        constructor() {} 
    }
    export class TradeRequestID {
        public static tag(): number { return 568 }
        constructor() {} 
    }
    export class TradeRequestType {
        public static tag(): number { return 569 }
        public static ALL_TRADES = "0"
        public static MATCHED_TRADES_MATCHING_CRITERIA_PROVIDED_ON_REQUEST = "1"
        public static UNMATCHED_TRADES_THAT_MATCH_CRITERIA = "2"
        public static UNREPORTED_TRADES_THAT_MATCH_CRITERIA = "3"
        public static ADVISORIES_THAT_MATCH_CRITERIA = "4"
        constructor() {} 
    }
    export class PreviouslyReported {
        public static tag(): number { return 570 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class TradeReportID {
        public static tag(): number { return 571 }
        constructor() {} 
    }
    export class TradeReportRefID {
        public static tag(): number { return 572 }
        constructor() {} 
    }
    export class MatchStatus {
        public static tag(): number { return 573 }
        public static COMPARED_MATCHED_OR_AFFIRMED = "0"
        public static UNCOMPARED_UNMATCHED_OR_UNAFFIRMED = "1"
        public static ADVISORY_OR_ALERT = "2"
        constructor() {} 
    }
    export class MatchType {
        public static tag(): number { return 574 }
        public static ONE_PARTY_TRADE_REPORT = "1"
        public static TWO_PARTY_TRADE_REPORT = "2"
        public static CONFIRMED_TRADE_REPORT = "3"
        public static AUTO_MATCH = "4"
        public static CROSS_AUCTION = "5"
        public static COUNTER_ORDER_SELECTION = "6"
        public static CALL_AUCTION = "7"
        public static ISSUING_BUY_BACK_AUCTION = "8"
        public static ACT_ACCEPTED_TRADE = "M3"
        public static ACT_DEFAULT_TRADE = "M4"
        public static ACT_DEFAULT_AFTER_M2 = "M5"
        public static ACT_M6_MATCH = "M6"
        public static EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_AND_EXECUTION_TIME = "A1"
        public static EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES = "A2"
        public static EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AND_EXECUTION_TIME = "A3"
        public static EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES = "A4"
        public static EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIME = "A5"
        public static COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST_ACCEPTS_PAIR_OFFS = "AQ"
        public static SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIED = "S1"
        public static SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S2"
        public static SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S3"
        public static SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S4"
        public static SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S5"
        public static EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_TIMES_ACT_M1_MATCH = "M1"
        public static SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCH = "M2"
        public static OCS_LOCKED_IN_NON_ACT = "MT"
        constructor() {} 
    }
    export class OddLot {
        public static tag(): number { return 575 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class NoClearingInstructions {
        public static tag(): number { return 576 }
        constructor() {} 
    }
    export class ClearingInstruction {
        public static tag(): number { return 577 }
        public static PROCESS_NORMALLY = "0"
        public static EXCLUDE_FROM_ALL_NETTING = "1"
        public static BILATERAL_NETTING_ONLY = "2"
        public static EX_CLEARING = "3"
        public static SPECIAL_TRADE = "4"
        public static MULTILATERAL_NETTING = "5"
        public static CLEAR_AGAINST_CENTRAL_COUNTERPARTY = "6"
        public static EXCLUDE_FROM_CENTRAL_COUNTERPARTY = "7"
        public static MANUAL_MODE = "8"
        public static AUTOMATIC_POSTING_MODE = "9"
        public static AUTOMATIC_GIVE_UP_MODE = "10"
        public static QUALIFIED_SERVICE_REPRESENTATIVE_QSR = "11"
        public static CUSTOMER_TRADE = "12"
        public static SELF_CLEARING = "13"
        constructor() {} 
    }
    export class TradeInputSource {
        public static tag(): number { return 578 }
        constructor() {} 
    }
    export class TradeInputDevice {
        public static tag(): number { return 579 }
        constructor() {} 
    }
    export class NoDates {
        public static tag(): number { return 580 }
        constructor() {} 
    }
    export class AccountType {
        public static tag(): number { return 581 }
        public static ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_THE_BOOKS = "1"
        public static ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS = "2"
        public static HOUSE_TRADER = "3"
        public static FLOOR_TRADER = "4"
        public static ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED = "6"
        public static ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED = "7"
        public static JOINT_BACK_OFFICE_ACCOUNT = "8"
        constructor() {} 
    }
    export class CustOrderCapacity {
        public static tag(): number { return 582 }
        public static MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNT = "1"
        public static CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNT = "2"
        public static MEMBER_TRADING_FOR_ANOTHER_MEMBER = "3"
        public static ALL_OTHER = "4"
        constructor() {} 
    }
    export class ClOrdLinkID {
        public static tag(): number { return 583 }
        constructor() {} 
    }
    export class MassStatusReqID {
        public static tag(): number { return 584 }
        constructor() {} 
    }
    export class MassStatusReqType {
        public static tag(): number { return 585 }
        public static STATUS_FOR_ORDERS_FOR_A_SECURITY = "1"
        public static STATUS_FOR_ORDERS_FOR_AN_UNDERLYING_SECURITY = "2"
        public static STATUS_FOR_ORDERS_FOR_A_PRODUCT = "3"
        public static STATUS_FOR_ORDERS_FOR_A_CFICODE = "4"
        public static STATUS_FOR_ORDERS_FOR_A_SECURITYTYPE = "5"
        public static STATUS_FOR_ORDERS_FOR_A_TRADING_SESSION = "6"
        public static STATUS_FOR_ALL_ORDERS = "7"
        public static STATUS_FOR_ORDERS_FOR_A_PARTYID = "8"
        public static STATUS_FOR_SECURITY_ISSUER = "9"
        public static STATUS_FOR_ISSUER_OF_UNDERLYING_SECURITY = "10"
        constructor() {} 
    }
    export class OrigOrdModTime {
        public static tag(): number { return 586 }
        constructor() {} 
    }
    export class LegSettlType {
        public static tag(): number { return 587 }
        constructor() {} 
    }
    export class LegSettlDate {
        public static tag(): number { return 588 }
        constructor() {} 
    }
    export class DayBookingInst {
        public static tag(): number { return 589 }
        public static CAN_TRIGGER_BOOKING_WITHOUT_REFERENCE_TO_THE_ORDER_INITIATOR = "0"
        public static SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING = "1"
        public static ACCUMULATE = "2"
        constructor() {} 
    }
    export class BookingUnit {
        public static tag(): number { return 590 }
        public static EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT = "0"
        public static AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER_AND_BOOK_ONE_TRADE_PER_ORDER = "1"
        public static AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL_SIDE_AND_SETTLEMENT_DATE = "2"
        constructor() {} 
    }
    export class PreallocMethod {
        public static tag(): number { return 591 }
        public static PRO_RATA = "0"
        public static DO_NOT_PRO_RATA = "1"
        constructor() {} 
    }
    export class UnderlyingCountryOfIssue {
        public static tag(): number { return 592 }
        constructor() {} 
    }
    export class UnderlyingStateOrProvinceOfIssue {
        public static tag(): number { return 593 }
        constructor() {} 
    }
    export class UnderlyingLocaleOfIssue {
        public static tag(): number { return 594 }
        constructor() {} 
    }
    export class UnderlyingInstrRegistry {
        public static tag(): number { return 595 }
        constructor() {} 
    }
    export class LegCountryOfIssue {
        public static tag(): number { return 596 }
        constructor() {} 
    }
    export class LegStateOrProvinceOfIssue {
        public static tag(): number { return 597 }
        constructor() {} 
    }
    export class LegLocaleOfIssue {
        public static tag(): number { return 598 }
        constructor() {} 
    }
    export class LegInstrRegistry {
        public static tag(): number { return 599 }
        constructor() {} 
    }
    export class LegSymbol {
        public static tag(): number { return 600 }
        constructor() {} 
    }
    export class LegSymbolSfx {
        public static tag(): number { return 601 }
        constructor() {} 
    }
    export class LegSecurityID {
        public static tag(): number { return 602 }
        constructor() {} 
    }
    export class LegSecurityIDSource {
        public static tag(): number { return 603 }
        constructor() {} 
    }
    export class NoLegSecurityAltID {
        public static tag(): number { return 604 }
        constructor() {} 
    }
    export class LegSecurityAltID {
        public static tag(): number { return 605 }
        constructor() {} 
    }
    export class LegSecurityAltIDSource {
        public static tag(): number { return 606 }
        constructor() {} 
    }
    export class LegProduct {
        public static tag(): number { return 607 }
        constructor() {} 
    }
    export class LegCFICode {
        public static tag(): number { return 608 }
        constructor() {} 
    }
    export class LegSecurityType {
        public static tag(): number { return 609 }
        constructor() {} 
    }
    export class LegMaturityMonthYear {
        public static tag(): number { return 610 }
        constructor() {} 
    }
    export class LegMaturityDate {
        public static tag(): number { return 611 }
        constructor() {} 
    }
    export class LegStrikePrice {
        public static tag(): number { return 612 }
        constructor() {} 
    }
    export class LegOptAttribute {
        public static tag(): number { return 613 }
        constructor() {} 
    }
    export class LegContractMultiplier {
        public static tag(): number { return 614 }
        constructor() {} 
    }
    export class LegCouponRate {
        public static tag(): number { return 615 }
        constructor() {} 
    }
    export class LegSecurityExchange {
        public static tag(): number { return 616 }
        constructor() {} 
    }
    export class LegIssuer {
        public static tag(): number { return 617 }
        constructor() {} 
    }
    export class EncodedLegIssuerLen {
        public static tag(): number { return 618 }
        constructor() {} 
    }
    export class EncodedLegIssuer {
        public static tag(): number { return 619 }
        constructor() {} 
    }
    export class LegSecurityDesc {
        public static tag(): number { return 620 }
        constructor() {} 
    }
    export class EncodedLegSecurityDescLen {
        public static tag(): number { return 621 }
        constructor() {} 
    }
    export class EncodedLegSecurityDesc {
        public static tag(): number { return 622 }
        constructor() {} 
    }
    export class LegRatioQty {
        public static tag(): number { return 623 }
        constructor() {} 
    }
    export class LegSide {
        public static tag(): number { return 624 }
        constructor() {} 
    }
    export class TradingSessionSubID {
        public static tag(): number { return 625 }
        public static PRE_TRADING = "1"
        public static OPENING_OR_OPENING_AUCTION = "2"
        public static $3 = "3"
        public static CLOSING_OR_CLOSING_AUCTION = "4"
        public static POST_TRADING = "5"
        public static INTRADAY_AUCTION = "6"
        public static QUIESCENT = "7"
        constructor() {} 
    }
    export class AllocType {
        public static tag(): number { return 626 }
        public static CALCULATED = "1"
        public static PRELIMINARY = "2"
        public static SELLSIDE_CALCULATED_USING_PRELIMINARY = "3"
        public static SELLSIDE_CALCULATED_WITHOUT_PRELIMINARY = "4"
        public static READY_TO_BOOK = "5"
        public static BUYSIDE_READY_TO_BOOK = "6"
        public static WAREHOUSE_INSTRUCTION = "7"
        public static REQUEST_TO_INTERMEDIARY = "8"
        public static ACCEPT = "9"
        public static REJECT = "10"
        public static ACCEPT_PENDING = "11"
        public static INCOMPLETE_GROUP = "12"
        public static COMPLETE_GROUP = "13"
        public static REVERSAL_PENDING = "14"
        constructor() {} 
    }
    export class NoHops {
        public static tag(): number { return 627 }
        constructor() {} 
    }
    export class HopCompID {
        public static tag(): number { return 628 }
        constructor() {} 
    }
    export class HopSendingTime {
        public static tag(): number { return 629 }
        constructor() {} 
    }
    export class HopRefID {
        public static tag(): number { return 630 }
        constructor() {} 
    }
    export class MidPx {
        public static tag(): number { return 631 }
        constructor() {} 
    }
    export class BidYield {
        public static tag(): number { return 632 }
        constructor() {} 
    }
    export class MidYield {
        public static tag(): number { return 633 }
        constructor() {} 
    }
    export class OfferYield {
        public static tag(): number { return 634 }
        constructor() {} 
    }
    export class ClearingFeeIndicator {
        public static tag(): number { return 635 }
        public static $1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "1"
        public static $2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "2"
        public static $3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "3"
        public static $4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "4"
        public static $5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "5"
        public static $6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "9"
        public static CBOE_MEMBER = "B"
        public static NON_MEMBER_AND_CUSTOMER = "C"
        public static EQUITY_MEMBER_AND_CLEARING_MEMBER = "E"
        public static FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_BROKERS = "F"
        public static $106H_AND_106J_FIRMS = "H"
        public static GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERS = "I"
        public static LESSEE_106F_EMPLOYEES = "L"
        public static ALL_OTHER_OWNERSHIP_TYPES = "M"
        constructor() {} 
    }
    export class WorkingIndicator {
        public static tag(): number { return 636 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class LegLastPx {
        public static tag(): number { return 637 }
        constructor() {} 
    }
    export class PriorityIndicator {
        public static tag(): number { return 638 }
        public static PRIORITY_UNCHANGED = "0"
        public static LOST_PRIORITY_AS_RESULT_OF_ORDER_CHANGE = "1"
        constructor() {} 
    }
    export class PriceImprovement {
        public static tag(): number { return 639 }
        constructor() {} 
    }
    export class Price2 {
        public static tag(): number { return 640 }
        constructor() {} 
    }
    export class LastForwardPoints2 {
        public static tag(): number { return 641 }
        constructor() {} 
    }
    export class BidForwardPoints2 {
        public static tag(): number { return 642 }
        constructor() {} 
    }
    export class OfferForwardPoints2 {
        public static tag(): number { return 643 }
        constructor() {} 
    }
    export class RFQReqID {
        public static tag(): number { return 644 }
        constructor() {} 
    }
    export class MktBidPx {
        public static tag(): number { return 645 }
        constructor() {} 
    }
    export class MktOfferPx {
        public static tag(): number { return 646 }
        constructor() {} 
    }
    export class MinBidSize {
        public static tag(): number { return 647 }
        constructor() {} 
    }
    export class MinOfferSize {
        public static tag(): number { return 648 }
        constructor() {} 
    }
    export class QuoteStatusReqID {
        public static tag(): number { return 649 }
        constructor() {} 
    }
    export class LegalConfirm {
        public static tag(): number { return 650 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class UnderlyingLastPx {
        public static tag(): number { return 651 }
        constructor() {} 
    }
    export class UnderlyingLastQty {
        public static tag(): number { return 652 }
        constructor() {} 
    }
    export class LegRefID {
        public static tag(): number { return 654 }
        constructor() {} 
    }
    export class ContraLegRefID {
        public static tag(): number { return 655 }
        constructor() {} 
    }
    export class SettlCurrBidFxRate {
        public static tag(): number { return 656 }
        constructor() {} 
    }
    export class SettlCurrOfferFxRate {
        public static tag(): number { return 657 }
        constructor() {} 
    }
    export class QuoteRequestRejectReason {
        public static tag(): number { return 658 }
        public static UNKNOWN_SYMBOL = "1"
        public static EXCHANGE = "2"
        public static QUOTE_REQUEST_EXCEEDS_LIMIT = "3"
        public static TOO_LATE_TO_ENTER = "4"
        public static INVALID_PRICE = "5"
        public static NOT_AUTHORIZED_TO_REQUEST_QUOTE = "6"
        public static NO_MATCH_FOR_INQUIRY = "7"
        public static NO_MARKET_FOR_INSTRUMENT = "8"
        public static NO_INVENTORY = "9"
        public static PASS = "10"
        public static INSUFFICIENT_CREDIT = "11"
        public static OTHER = "99"
        constructor() {} 
    }
    export class SideComplianceID {
        public static tag(): number { return 659 }
        constructor() {} 
    }
    export class AcctIDSource {
        public static tag(): number { return 660 }
        public static BIC = "1"
        public static SID_CODE = "2"
        public static TFM = "3"
        public static OMGEO = "4"
        public static DTCC_CODE = "5"
        public static OTHER = "99"
        constructor() {} 
    }
    export class AllocAcctIDSource {
        public static tag(): number { return 661 }
        constructor() {} 
    }
    export class BenchmarkPrice {
        public static tag(): number { return 662 }
        constructor() {} 
    }
    export class BenchmarkPriceType {
        public static tag(): number { return 663 }
        constructor() {} 
    }
    export class ConfirmID {
        public static tag(): number { return 664 }
        constructor() {} 
    }
    export class ConfirmStatus {
        public static tag(): number { return 665 }
        public static RECEIVED = "1"
        public static MISMATCHED_ACCOUNT = "2"
        public static MISSING_SETTLEMENT_INSTRUCTIONS = "3"
        public static CONFIRMED = "4"
        public static REQUEST_REJECTED = "5"
        constructor() {} 
    }
    export class ConfirmTransType {
        public static tag(): number { return 666 }
        public static NEW = "0"
        public static REPLACE = "1"
        public static CANCEL = "2"
        constructor() {} 
    }
    export class ContractSettlMonth {
        public static tag(): number { return 667 }
        constructor() {} 
    }
    export class DeliveryForm {
        public static tag(): number { return 668 }
        public static BOOK_ENTRY = "1"
        public static BEARER = "2"
        constructor() {} 
    }
    export class LastParPx {
        public static tag(): number { return 669 }
        constructor() {} 
    }
    export class NoLegAllocs {
        public static tag(): number { return 670 }
        constructor() {} 
    }
    export class LegAllocAccount {
        public static tag(): number { return 671 }
        constructor() {} 
    }
    export class LegIndividualAllocID {
        public static tag(): number { return 672 }
        constructor() {} 
    }
    export class LegAllocQty {
        public static tag(): number { return 673 }
        constructor() {} 
    }
    export class LegAllocAcctIDSource {
        public static tag(): number { return 674 }
        constructor() {} 
    }
    export class LegSettlCurrency {
        public static tag(): number { return 675 }
        constructor() {} 
    }
    export class LegBenchmarkCurveCurrency {
        public static tag(): number { return 676 }
        constructor() {} 
    }
    export class LegBenchmarkCurveName {
        public static tag(): number { return 677 }
        constructor() {} 
    }
    export class LegBenchmarkCurvePoint {
        public static tag(): number { return 678 }
        constructor() {} 
    }
    export class LegBenchmarkPrice {
        public static tag(): number { return 679 }
        constructor() {} 
    }
    export class LegBenchmarkPriceType {
        public static tag(): number { return 680 }
        constructor() {} 
    }
    export class LegBidPx {
        public static tag(): number { return 681 }
        constructor() {} 
    }
    export class LegIOIQty {
        public static tag(): number { return 682 }
        constructor() {} 
    }
    export class NoLegStipulations {
        public static tag(): number { return 683 }
        constructor() {} 
    }
    export class LegOfferPx {
        public static tag(): number { return 684 }
        constructor() {} 
    }
    export class LegOrderQty {
        public static tag(): number { return 685 }
        constructor() {} 
    }
    export class LegPriceType {
        public static tag(): number { return 686 }
        constructor() {} 
    }
    export class LegQty {
        public static tag(): number { return 687 }
        constructor() {} 
    }
    export class LegStipulationType {
        public static tag(): number { return 688 }
        constructor() {} 
    }
    export class LegStipulationValue {
        public static tag(): number { return 689 }
        constructor() {} 
    }
    export class LegSwapType {
        public static tag(): number { return 690 }
        public static PAR_FOR_PAR = "1"
        public static MODIFIED_DURATION = "2"
        public static RISK = "4"
        public static PROCEEDS = "5"
        constructor() {} 
    }
    export class Pool {
        public static tag(): number { return 691 }
        constructor() {} 
    }
    export class QuotePriceType {
        public static tag(): number { return 692 }
        public static PERCENT = "1"
        public static PER_SHARE = "2"
        public static FIXED_AMOUNT = "3"
        public static DISCOUNT = "4"
        public static PREMIUM = "5"
        public static SPREAD = "6"
        public static TED_PRICE = "7"
        public static TED_YIELD = "8"
        public static YIELD_SPREAD = "9"
        public static YIELD = "10"
        constructor() {} 
    }
    export class QuoteRespID {
        public static tag(): number { return 693 }
        constructor() {} 
    }
    export class QuoteRespType {
        public static tag(): number { return 694 }
        public static HIT_LIFT = "1"
        public static COUNTER = "2"
        public static EXPIRED = "3"
        public static COVER = "4"
        public static DONE_AWAY = "5"
        public static PASS = "6"
        public static END_TRADE = "7"
        public static TIMED_OUT = "8"
        constructor() {} 
    }
    export class QuoteQualifier {
        public static tag(): number { return 695 }
        constructor() {} 
    }
    export class YieldRedemptionDate {
        public static tag(): number { return 696 }
        constructor() {} 
    }
    export class YieldRedemptionPrice {
        public static tag(): number { return 697 }
        constructor() {} 
    }
    export class YieldRedemptionPriceType {
        public static tag(): number { return 698 }
        constructor() {} 
    }
    export class BenchmarkSecurityID {
        public static tag(): number { return 699 }
        constructor() {} 
    }
    export class ReversalIndicator {
        public static tag(): number { return 700 }
        constructor() {} 
    }
    export class YieldCalcDate {
        public static tag(): number { return 701 }
        constructor() {} 
    }
    export class NoPositions {
        public static tag(): number { return 702 }
        constructor() {} 
    }
    export class PosType {
        public static tag(): number { return 703 }
        public static ALLOCATION_TRADE_QTY = "ALC"
        public static OPTION_ASSIGNMENT = "AS"
        public static AS_OF_TRADE_QTY = "ASF"
        public static DELIVERY_QTY = "DLV"
        public static ELECTRONIC_TRADE_QTY = "ETR"
        public static OPTION_EXERCISE_QTY = "EX"
        public static END_OF_DAY_QTY = "FIN"
        public static INTRA_SPREAD_QTY = "IAS"
        public static INTER_SPREAD_QTY = "IES"
        public static ADJUSTMENT_QTY = "PA"
        public static PIT_TRADE_QTY = "PIT"
        public static START_OF_DAY_QTY = "SOD"
        public static INTEGRAL_SPLIT = "SPL"
        public static TRANSACTION_FROM_ASSIGNMENT = "TA"
        public static TOTAL_TRANSACTION_QTY = "TOT"
        public static TRANSACTION_QUANTITY = "TQ"
        public static TRANSFER_TRADE_QTY = "TRF"
        public static TRANSACTION_FROM_EXERCISE = "TX"
        public static CROSS_MARGIN_QTY = "XM"
        public static RECEIVE_QUANTITY = "RCV"
        public static CORPORATE_ACTION_ADJUSTMENT = "CAA"
        public static DELIVERY_NOTICE_QTY = "DN"
        public static EXCHANGE_FOR_PHYSICAL_QTY = "EP"
        public static PRIVATELY_NEGOTIATED_TRADE_QTY = "PNTN"
        public static NET_DELTA_QTY = "DLT"
        public static CREDIT_EVENT_ADJUSTMENT = "CEA"
        public static SUCCESSION_EVENT_ADJUSTMENT = "SEA"
        constructor() {} 
    }
    export class LongQty {
        public static tag(): number { return 704 }
        constructor() {} 
    }
    export class ShortQty {
        public static tag(): number { return 705 }
        constructor() {} 
    }
    export class PosQtyStatus {
        public static tag(): number { return 706 }
        public static SUBMITTED = "0"
        public static ACCEPTED = "1"
        public static REJECTED = "2"
        constructor() {} 
    }
    export class PosAmtType {
        public static tag(): number { return 707 }
        public static CASH_AMOUNT = "CASH"
        public static CASH_RESIDUAL_AMOUNT = "CRES"
        public static FINAL_MARK_TO_MARKET_AMOUNT = "FMTM"
        public static INCREMENTAL_MARK_TO_MARKET_AMOUNT = "IMTM"
        public static PREMIUM_AMOUNT = "PREM"
        public static START_OF_DAY_MARK_TO_MARKET_AMOUNT = "SMTM"
        public static TRADE_VARIATION_AMOUNT = "TVAR"
        public static VALUE_ADJUSTED_AMOUNT = "VADJ"
        public static SETTLEMENT_VALUE = "SETL"
        public static INITIAL_TRADE_COUPON_AMOUNT = "ICPN"
        public static ACCRUED_COUPON_AMOUNT = "ACPN"
        public static COUPON_AMOUNT = "CPN"
        public static INCREMENTAL_ACCRUED_COUPON = "IACPN"
        public static COLLATERALIZED_MARK_TO_MARKET = "CMTM"
        public static INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET = "ICMTM"
        public static COMPENSATION_AMOUNT = "DLV"
        public static TOTAL_BANKED_AMOUNT = "BANK"
        public static TOTAL_COLLATERALIZED_AMOUNT = "COLAT"
        constructor() {} 
    }
    export class PosAmt {
        public static tag(): number { return 708 }
        constructor() {} 
    }
    export class PosTransType {
        public static tag(): number { return 709 }
        public static EXERCISE = "1"
        public static DO_NOT_EXERCISE = "2"
        public static POSITION_ADJUSTMENT = "3"
        public static POSITION_CHANGE_SUBMISSION_MARGIN_DISPOSITION = "4"
        public static PLEDGE = "5"
        public static LARGE_TRADER_SUBMISSION = "6"
        constructor() {} 
    }
    export class PosReqID {
        public static tag(): number { return 710 }
        constructor() {} 
    }
    export class NoUnderlyings {
        public static tag(): number { return 711 }
        constructor() {} 
    }
    export class PosMaintAction {
        public static tag(): number { return 712 }
        public static NEW = "1"
        public static REPLACE = "2"
        public static CANCEL = "3"
        public static REVERSE = "4"
        constructor() {} 
    }
    export class OrigPosReqRefID {
        public static tag(): number { return 713 }
        constructor() {} 
    }
    export class PosMaintRptRefID {
        public static tag(): number { return 714 }
        constructor() {} 
    }
    export class ClearingBusinessDate {
        public static tag(): number { return 715 }
        constructor() {} 
    }
    export class SettlSessID {
        public static tag(): number { return 716 }
        public static INTRADAY = "ITD"
        public static REGULAR_TRADING_HOURS = "RTH"
        public static ELECTRONIC_TRADING_HOURS = "ETH"
        public static END_OF_DAY = "EOD"
        constructor() {} 
    }
    export class SettlSessSubID {
        public static tag(): number { return 717 }
        constructor() {} 
    }
    export class AdjustmentType {
        public static tag(): number { return 718 }
        public static PROCESS_REQUEST_AS_MARGIN_DISPOSITION = "0"
        public static DELTA_PLUS = "1"
        public static DELTA_MINUS = "2"
        public static FINAL = "3"
        constructor() {} 
    }
    export class ContraryInstructionIndicator {
        public static tag(): number { return 719 }
        constructor() {} 
    }
    export class PriorSpreadIndicator {
        public static tag(): number { return 720 }
        constructor() {} 
    }
    export class PosMaintRptID {
        public static tag(): number { return 721 }
        constructor() {} 
    }
    export class PosMaintStatus {
        public static tag(): number { return 722 }
        public static ACCEPTED = "0"
        public static ACCEPTED_WITH_WARNINGS = "1"
        public static REJECTED = "2"
        public static COMPLETED = "3"
        public static COMPLETED_WITH_WARNINGS = "4"
        constructor() {} 
    }
    export class PosMaintResult {
        public static tag(): number { return 723 }
        public static SUCCESSFUL_COMPLETION = "0"
        public static REJECTED = "1"
        public static OTHER = "99"
        constructor() {} 
    }
    export class PosReqType {
        public static tag(): number { return 724 }
        public static POSITIONS = "0"
        public static TRADES = "1"
        public static EXERCISES = "2"
        public static ASSIGNMENTS = "3"
        public static SETTLEMENT_ACTIVITY = "4"
        public static BACKOUT_MESSAGE = "5"
        public static DELTA_POSITIONS = "6"
        constructor() {} 
    }
    export class ResponseTransportType {
        public static tag(): number { return 725 }
        public static INBAND = "0"
        public static OUT_OF_BAND = "1"
        constructor() {} 
    }
    export class ResponseDestination {
        public static tag(): number { return 726 }
        constructor() {} 
    }
    export class TotalNumPosReports {
        public static tag(): number { return 727 }
        constructor() {} 
    }
    export class PosReqResult {
        public static tag(): number { return 728 }
        public static VALID_REQUEST = "0"
        public static INVALID_OR_UNSUPPORTED_REQUEST = "1"
        public static NO_POSITIONS_FOUND_THAT_MATCH_CRITERIA = "2"
        public static NOT_AUTHORIZED_TO_REQUEST_POSITIONS = "3"
        public static REQUEST_FOR_POSITION_NOT_SUPPORTED = "4"
        public static OTHER = "99"
        constructor() {} 
    }
    export class PosReqStatus {
        public static tag(): number { return 729 }
        public static COMPLETED = "0"
        public static COMPLETED_WITH_WARNINGS = "1"
        public static REJECTED = "2"
        constructor() {} 
    }
    export class SettlPrice {
        public static tag(): number { return 730 }
        constructor() {} 
    }
    export class SettlPriceType {
        public static tag(): number { return 731 }
        public static FINAL = "1"
        public static THEORETICAL = "2"
        constructor() {} 
    }
    export class UnderlyingSettlPrice {
        public static tag(): number { return 732 }
        constructor() {} 
    }
    export class UnderlyingSettlPriceType {
        public static tag(): number { return 733 }
        constructor() {} 
    }
    export class PriorSettlPrice {
        public static tag(): number { return 734 }
        constructor() {} 
    }
    export class NoQuoteQualifiers {
        public static tag(): number { return 735 }
        constructor() {} 
    }
    export class AllocSettlCurrency {
        public static tag(): number { return 736 }
        constructor() {} 
    }
    export class AllocSettlCurrAmt {
        public static tag(): number { return 737 }
        constructor() {} 
    }
    export class InterestAtMaturity {
        public static tag(): number { return 738 }
        constructor() {} 
    }
    export class LegDatedDate {
        public static tag(): number { return 739 }
        constructor() {} 
    }
    export class LegPool {
        public static tag(): number { return 740 }
        constructor() {} 
    }
    export class AllocInterestAtMaturity {
        public static tag(): number { return 741 }
        constructor() {} 
    }
    export class AllocAccruedInterestAmt {
        public static tag(): number { return 742 }
        constructor() {} 
    }
    export class DeliveryDate {
        public static tag(): number { return 743 }
        constructor() {} 
    }
    export class AssignmentMethod {
        public static tag(): number { return 744 }
        public static PRO_RATA = "P"
        public static RANDOM = "R"
        constructor() {} 
    }
    export class AssignmentUnit {
        public static tag(): number { return 745 }
        constructor() {} 
    }
    export class OpenInterest {
        public static tag(): number { return 746 }
        constructor() {} 
    }
    export class ExerciseMethod {
        public static tag(): number { return 747 }
        public static AUTOMATIC = "A"
        public static MANUAL = "M"
        constructor() {} 
    }
    export class TotNumTradeReports {
        public static tag(): number { return 748 }
        constructor() {} 
    }
    export class TradeRequestResult {
        public static tag(): number { return 749 }
        public static SUCCESSFUL = "0"
        public static INVALID_OR_UNKNOWN_INSTRUMENT = "1"
        public static INVALID_TYPE_OF_TRADE_REQUESTED = "2"
        public static INVALID_PARTIES = "3"
        public static INVALID_TRANSPORT_TYPE_REQUESTED = "4"
        public static INVALID_DESTINATION_REQUESTED = "5"
        public static TRADEREQUESTTYPE_NOT_SUPPORTED = "8"
        public static NOT_AUTHORIZED = "9"
        public static OTHER = "99"
        constructor() {} 
    }
    export class TradeRequestStatus {
        public static tag(): number { return 750 }
        public static ACCEPTED = "0"
        public static COMPLETED = "1"
        public static REJECTED = "2"
        constructor() {} 
    }
    export class TradeReportRejectReason {
        public static tag(): number { return 751 }
        public static SUCCESSFUL = "0"
        public static INVALID_PARTY_ONFORMATION = "1"
        public static UNKNOWN_INSTRUMENT = "2"
        public static UNAUTHORIZED_TO_REPORT_TRADES = "3"
        public static INVALID_TRADE_TYPE = "4"
        public static OTHER = "99"
        constructor() {} 
    }
    export class SideMultiLegReportingType {
        public static tag(): number { return 752 }
        public static SINGLE_SECURITY = "1"
        public static INDIVIDUAL_LEG_OF_A_MULTILEG_SECURITY = "2"
        public static MULTILEG_SECURITY = "3"
        constructor() {} 
    }
    export class NoPosAmt {
        public static tag(): number { return 753 }
        constructor() {} 
    }
    export class AutoAcceptIndicator {
        public static tag(): number { return 754 }
        constructor() {} 
    }
    export class AllocReportID {
        public static tag(): number { return 755 }
        constructor() {} 
    }
    export class NoNested2PartyIDs {
        public static tag(): number { return 756 }
        constructor() {} 
    }
    export class Nested2PartyID {
        public static tag(): number { return 757 }
        constructor() {} 
    }
    export class Nested2PartyIDSource {
        public static tag(): number { return 758 }
        constructor() {} 
    }
    export class Nested2PartyRole {
        public static tag(): number { return 759 }
        constructor() {} 
    }
    export class Nested2PartySubID {
        public static tag(): number { return 760 }
        constructor() {} 
    }
    export class BenchmarkSecurityIDSource {
        public static tag(): number { return 761 }
        constructor() {} 
    }
    export class SecuritySubType {
        public static tag(): number { return 762 }
        constructor() {} 
    }
    export class UnderlyingSecuritySubType {
        public static tag(): number { return 763 }
        constructor() {} 
    }
    export class LegSecuritySubType {
        public static tag(): number { return 764 }
        constructor() {} 
    }
    export class AllowableOneSidednessPct {
        public static tag(): number { return 765 }
        constructor() {} 
    }
    export class AllowableOneSidednessValue {
        public static tag(): number { return 766 }
        constructor() {} 
    }
    export class AllowableOneSidednessCurr {
        public static tag(): number { return 767 }
        constructor() {} 
    }
    export class NoTrdRegTimestamps {
        public static tag(): number { return 768 }
        constructor() {} 
    }
    export class TrdRegTimestamp {
        public static tag(): number { return 769 }
        constructor() {} 
    }
    export class TrdRegTimestampType {
        public static tag(): number { return 770 }
        public static EXECUTION_TIME = "1"
        public static TIME_IN = "2"
        public static TIME_OUT = "3"
        public static BROKER_RECEIPT = "4"
        public static BROKER_EXECUTION = "5"
        public static DESK_RECEIPT = "6"
        public static SUBMISSION_TO_CLEARING = "7"
        constructor() {} 
    }
    export class TrdRegTimestampOrigin {
        public static tag(): number { return 771 }
        constructor() {} 
    }
    export class ConfirmRefID {
        public static tag(): number { return 772 }
        constructor() {} 
    }
    export class ConfirmType {
        public static tag(): number { return 773 }
        public static STATUS = "1"
        public static CONFIRMATION = "2"
        public static CONFIRMATION_REQUEST_REJECTED = "3"
        constructor() {} 
    }
    export class ConfirmRejReason {
        public static tag(): number { return 774 }
        public static MISMATCHED_ACCOUNT = "1"
        public static MISSING_SETTLEMENT_INSTRUCTIONS = "2"
        public static OTHER = "99"
        constructor() {} 
    }
    export class BookingType {
        public static tag(): number { return 775 }
        public static REGULAR_BOOKING = "0"
        public static CFD = "1"
        public static TOTAL_RETURN_SWAP = "2"
        constructor() {} 
    }
    export class IndividualAllocRejCode {
        public static tag(): number { return 776 }
        constructor() {} 
    }
    export class SettlInstMsgID {
        public static tag(): number { return 777 }
        constructor() {} 
    }
    export class NoSettlInst {
        public static tag(): number { return 778 }
        constructor() {} 
    }
    export class LastUpdateTime {
        public static tag(): number { return 779 }
        constructor() {} 
    }
    export class AllocSettlInstType {
        public static tag(): number { return 780 }
        public static USE_DEFAULT_INSTRUCTIONS = "0"
        public static DERIVE_FROM_PARAMETERS_PROVIDED = "1"
        public static FULL_DETAILS_PROVIDED = "2"
        public static SSI_DB_IDS_PROVIDED = "3"
        public static PHONE_FOR_INSTRUCTIONS = "4"
        constructor() {} 
    }
    export class NoSettlPartyIDs {
        public static tag(): number { return 781 }
        constructor() {} 
    }
    export class SettlPartyID {
        public static tag(): number { return 782 }
        constructor() {} 
    }
    export class SettlPartyIDSource {
        public static tag(): number { return 783 }
        constructor() {} 
    }
    export class SettlPartyRole {
        public static tag(): number { return 784 }
        constructor() {} 
    }
    export class SettlPartySubID {
        public static tag(): number { return 785 }
        constructor() {} 
    }
    export class SettlPartySubIDType {
        public static tag(): number { return 786 }
        constructor() {} 
    }
    export class DlvyInstType {
        public static tag(): number { return 787 }
        public static CASH = "C"
        public static SECURITIES = "S"
        constructor() {} 
    }
    export class TerminationType {
        public static tag(): number { return 788 }
        public static OVERNIGHT = "1"
        public static TERM = "2"
        public static FLEXIBLE = "3"
        public static OPEN = "4"
        constructor() {} 
    }
    export class NextExpectedMsgSeqNum {
        public static tag(): number { return 789 }
        constructor() {} 
    }
    export class OrdStatusReqID {
        public static tag(): number { return 790 }
        constructor() {} 
    }
    export class SettlInstReqID {
        public static tag(): number { return 791 }
        constructor() {} 
    }
    export class SettlInstReqRejCode {
        public static tag(): number { return 792 }
        public static UNABLE_TO_PROCESS_REQUEST = "0"
        public static UNKNOWN_ACCOUNT = "1"
        public static NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND = "2"
        public static OTHER = "99"
        constructor() {} 
    }
    export class SecondaryAllocID {
        public static tag(): number { return 793 }
        constructor() {} 
    }
    export class AllocReportType {
        public static tag(): number { return 794 }
        public static PRELIMINARY_REQUEST_TO_INTERMEDIARY = "2"
        public static SELLSIDE_CALCULATED_USING_PRELIMINARY = "3"
        public static SELLSIDE_CALCULATED_WITHOUT_PRELIMINARY = "4"
        public static WAREHOUSE_RECAP = "5"
        public static REQUEST_TO_INTERMEDIARY = "8"
        public static ACCEPT = "9"
        public static REJECT = "10"
        public static ACCEPT_PENDING = "11"
        public static COMPLETE = "12"
        public static REVERSE_PENDING = "14"
        constructor() {} 
    }
    export class AllocReportRefID {
        public static tag(): number { return 795 }
        constructor() {} 
    }
    export class AllocCancReplaceReason {
        public static tag(): number { return 796 }
        public static ORIGINAL_DETAILS_INCOMPLETE_INCORRECT = "1"
        public static CHANGE_IN_UNDERLYING_ORDER_DETAILS = "2"
        public static OTHER = "99"
        constructor() {} 
    }
    export class CopyMsgIndicator {
        public static tag(): number { return 797 }
        constructor() {} 
    }
    export class AllocAccountType {
        public static tag(): number { return 798 }
        public static ACCOUNT_IS_CARRIED_PN_CUSTOMER_SIDE_OF_BOOKS = "1"
        public static ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS = "2"
        public static HOUSE_TRADER = "3"
        public static FLOOR_TRADER = "4"
        public static ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED = "6"
        public static ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED = "7"
        public static JOINT_BACK_OFFICE_ACCOUNT = "8"
        constructor() {} 
    }
    export class OrderAvgPx {
        public static tag(): number { return 799 }
        constructor() {} 
    }
    export class OrderBookingQty {
        public static tag(): number { return 800 }
        constructor() {} 
    }
    export class NoSettlPartySubIDs {
        public static tag(): number { return 801 }
        constructor() {} 
    }
    export class NoPartySubIDs {
        public static tag(): number { return 802 }
        constructor() {} 
    }
    export class PartySubIDType {
        public static tag(): number { return 803 }
        public static FIRM = "1"
        public static PERSON = "2"
        public static SYSTEM = "3"
        public static APPLICATION = "4"
        public static FULL_LEGAL_NAME_OF_FIRM = "5"
        public static POSTAL_ADDRESS = "6"
        public static PHONE_NUMBER = "7"
        public static EMAIL_ADDRESS = "8"
        public static CONTACT_NAME = "9"
        public static SECURITIES_ACCOUNT_NUMBER = "10"
        public static REGISTRATION_NUMBER = "11"
        public static REGISTERED_ADDRESS_12 = "12"
        public static REGULATORY_STATUS = "13"
        public static REGISTRATION_NAME = "14"
        public static CASH_ACCOUNT_NUMBER = "15"
        public static BIC = "16"
        public static CSD_PARTICIPANT_MEMBER_CODE = "17"
        public static REGISTERED_ADDRESS_18 = "18"
        public static FUND_ACCOUNT_NAME = "19"
        public static TELEX_NUMBER = "20"
        public static FAX_NUMBER = "21"
        public static SECURITIES_ACCOUNT_NAME = "22"
        public static CASH_ACCOUNT_NAME = "23"
        public static DEPARTMENT = "24"
        public static LOCATION_DESK = "25"
        public static POSITION_ACCOUNT_TYPE = "26"
        public static SECURITY_LOCATE_ID = "27"
        public static MARKET_MAKER = "28"
        public static ELIGIBLE_COUNTERPARTY = "29"
        public static PROFESSIONAL_CLIENT = "30"
        public static LOCATION = "31"
        public static EXECUTION_VENUE = "32"
        public static CURRENCY_DELIVERY_IDENTIFIER = "33"
        constructor() {} 
    }
    export class NoNestedPartySubIDs {
        public static tag(): number { return 804 }
        constructor() {} 
    }
    export class NestedPartySubIDType {
        public static tag(): number { return 805 }
        constructor() {} 
    }
    export class NoNested2PartySubIDs {
        public static tag(): number { return 806 }
        constructor() {} 
    }
    export class Nested2PartySubIDType {
        public static tag(): number { return 807 }
        constructor() {} 
    }
    export class AllocIntermedReqType {
        public static tag(): number { return 808 }
        public static PENDING_ACCEPT = "1"
        public static PENDING_RELEASE = "2"
        public static PENDING_REVERSAL = "3"
        public static ACCEPT = "4"
        public static BLOCK_LEVEL_REJECT = "5"
        public static ACCOUNT_LEVEL_REJECT = "6"
        constructor() {} 
    }
    export class UnderlyingPx {
        public static tag(): number { return 810 }
        constructor() {} 
    }
    export class PriceDelta {
        public static tag(): number { return 811 }
        constructor() {} 
    }
    export class ApplQueueMax {
        public static tag(): number { return 812 }
        constructor() {} 
    }
    export class ApplQueueDepth {
        public static tag(): number { return 813 }
        constructor() {} 
    }
    export class ApplQueueResolution {
        public static tag(): number { return 814 }
        public static NO_ACTION_TAKEN = "0"
        public static QUEUE_FLUSHED = "1"
        public static OVERLAY_LAST = "2"
        public static END_SESSION = "3"
        constructor() {} 
    }
    export class ApplQueueAction {
        public static tag(): number { return 815 }
        public static NO_ACTION_TAKEN = "0"
        public static QUEUE_FLUSHED = "1"
        public static OVERLAY_LAST = "2"
        public static END_SESSION = "3"
        constructor() {} 
    }
    export class NoAltMDSource {
        public static tag(): number { return 816 }
        constructor() {} 
    }
    export class AltMDSourceID {
        public static tag(): number { return 817 }
        constructor() {} 
    }
    export class SecondaryTradeReportID {
        public static tag(): number { return 818 }
        constructor() {} 
    }
    export class AvgPxIndicator {
        public static tag(): number { return 819 }
        public static NO_AVERAGE_PRICING = "0"
        public static TRADE_IS_PART_OF_AN_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID = "1"
        public static LAST_TRADE_IS_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID = "2"
        constructor() {} 
    }
    export class TradeLinkID {
        public static tag(): number { return 820 }
        constructor() {} 
    }
    export class OrderInputDevice {
        public static tag(): number { return 821 }
        constructor() {} 
    }
    export class UnderlyingTradingSessionID {
        public static tag(): number { return 822 }
        constructor() {} 
    }
    export class UnderlyingTradingSessionSubID {
        public static tag(): number { return 823 }
        constructor() {} 
    }
    export class TradeLegRefID {
        public static tag(): number { return 824 }
        constructor() {} 
    }
    export class ExchangeRule {
        public static tag(): number { return 825 }
        constructor() {} 
    }
    export class TradeAllocIndicator {
        public static tag(): number { return 826 }
        public static ALLOCATION_NOT_REQUIRED = "0"
        public static ALLOCATION_REQUIRED = "1"
        public static USE_ALLOCATION_PROVIDED_WITH_THE_TRADE = "2"
        public static ALLOCATION_GIVE_UP_EXECUTOR = "3"
        public static ALLOCATION_FROM_EXECUTOR = "4"
        public static ALLOCATION_TO_CLAIM_ACCOUNT = "5"
        constructor() {} 
    }
    export class ExpirationCycle {
        public static tag(): number { return 827 }
        public static EXPIRE_ON_TRADING_SESSION_CLOSE = "0"
        public static EXPIRE_ON_TRADING_SESSION_OPEN = "1"
        public static TRADING_ELIGIBILITY_EXPIRATION_SPECIFIED_IN_THE_DATE_AND_TIME_FIELDS_EVENTDATE = "2"
        constructor() {} 
    }
    export class TrdType {
        public static tag(): number { return 828 }
        public static REGULAR_TRADE = "0"
        public static BLOCK_TRADE_1 = "1"
        public static EFP = "2"
        public static TRANSFER = "3"
        public static LATE_TRADE = "4"
        public static T_TRADE = "5"
        public static WEIGHTED_AVERAGE_PRICE_TRADE = "6"
        public static BUNCHED_TRADE = "7"
        public static LATE_BUNCHED_TRADE = "8"
        public static PRIOR_REFERENCE_PRICE_TRADE = "9"
        public static AFTER_HOURS_TRADE = "10"
        public static EXCHANGE_FOR_RISK = "11"
        public static EXCHANGE_FOR_SWAP = "12"
        public static EXCHANGE_OF_FUTURES_FOR = "13"
        public static EXCHANGE_OF_OPTIONS_FOR_OPTIONS = "14"
        public static TRADING_AT_SETTLEMENT = "15"
        public static ALL_OR_NONE = "16"
        public static FUTURES_LARGE_ORDER_EXECUTION = "17"
        public static EXCHANGE_OF_FUTURES_FOR_FUTURES = "18"
        public static OPTION_INTERIM_TRADE = "19"
        public static OPTION_CABINET_TRADE = "20"
        public static PRIVATELY_NEGOTIATED_TRADES = "22"
        public static SUBSTITUTION_OF_FUTURES_FOR_FORWARDS = "23"
        public static NON_STANDARD_SETTLEMENT = "48"
        public static DERIVATIVE_RELATED_TRANSACTION = "49"
        public static PORTFOLIO_TRADE = "50"
        public static VOLUME_WEIGHTED_AVERAGE_TRADE = "51"
        public static EXCHANGE_GRANTED_TRADE = "52"
        public static REPURCHASE_AGREEMENT = "53"
        public static OTC = "54"
        public static EXCHANGE_BASIS_FACILITY = "55"
        public static ERROR_TRADE = "24"
        public static SPECIAL_CUM_DIVIDEND = "25"
        public static SPECIAL_EX_DIVIDEND = "26"
        public static SPECIAL_CUM_COUPON = "27"
        public static SPECIAL_EX_COUPON = "28"
        public static CASH_SETTLEMENT = "29"
        public static SPECIAL_PRICE = "30"
        public static GUARANTEED_DELIVERY = "31"
        public static SPECIAL_CUM_RIGHTS = "32"
        public static SPECIAL_EX_RIGHTS = "33"
        public static SPECIAL_CUM_CAPITAL_REPAYMENTS = "34"
        public static SPECIAL_EX_CAPITAL_REPAYMENTS = "35"
        public static SPECIAL_CUM_BONUS = "36"
        public static SPECIAL_EX_BONUS = "37"
        public static BLOCK_TRADE_38 = "38"
        public static WORKED_PRINCIPAL_TRADE = "39"
        public static BLOCK_TRADES = "40"
        public static NAME_CHANGE = "41"
        public static PORTFOLIO_TRANSFER = "42"
        public static PROROGATION_BUY = "43"
        public static PROROGATION_SELL = "44"
        public static OPTION_EXERCISE = "45"
        public static DELTA_NEUTRAL_TRANSACTION = "46"
        public static FINANCING_TRANSACTION = "47"
        constructor() {} 
    }
    export class TrdSubType {
        public static tag(): number { return 829 }
        public static CMTA = "0"
        public static INTERNAL_TRANSFER_OR_ADJUSTMENT = "1"
        public static EXTERNAL_TRANSFER_OR_TRANSFER_OF_ACCOUNT = "2"
        public static REJECT_FOR_SUBMITTING_SIDE = "3"
        public static ADVISORY_FOR_CONTRA_SIDE = "4"
        public static OFFSET_DUE_TO_AN_ALLOCATION = "5"
        public static ONSET_DUE_TO_AN_ALLOCATION = "6"
        public static DIFFERENTIAL_SPREAD = "7"
        public static IMPLIED_SPREAD_LEG_EXECUTED_AGAINST_AN_OUTRIGHT = "8"
        public static TRANSACTION_FROM_EXERCISE = "9"
        public static TRANSACTION_FROM_ASSIGNMENT = "10"
        public static ACATS = "11"
        public static OFF_HOURS_TRADE = "33"
        public static ON_HOURS_TRADE = "34"
        public static OTC_QUOTE = "35"
        public static CONVERTED_SWAP = "36"
        public static AI = "14"
        public static B = "15"
        public static K = "16"
        public static LC = "17"
        public static M = "18"
        public static N = "19"
        public static NM = "20"
        public static NR = "21"
        public static P = "22"
        public static PA = "23"
        public static PC = "24"
        public static PN = "25"
        public static R = "26"
        public static RO = "27"
        public static RT = "28"
        public static SW = "29"
        public static T = "30"
        public static WN = "31"
        public static WT = "32"
        public static CROSSED_TRADE = "37"
        public static INTERIM_PROTECTED_TRADE = "38"
        public static LARGE_IN_SCALE = "39"
        constructor() {} 
    }
    export class TransferReason {
        public static tag(): number { return 830 }
        constructor() {} 
    }
    export class TotNumAssignmentReports {
        public static tag(): number { return 832 }
        constructor() {} 
    }
    export class AsgnRptID {
        public static tag(): number { return 833 }
        constructor() {} 
    }
    export class ThresholdAmount {
        public static tag(): number { return 834 }
        constructor() {} 
    }
    export class PegMoveType {
        public static tag(): number { return 835 }
        public static FLOATING = "0"
        public static FIXED = "1"
        constructor() {} 
    }
    export class PegOffsetType {
        public static tag(): number { return 836 }
        public static PRICE = "0"
        public static BASIS_POINTS = "1"
        public static TICKS = "2"
        public static PRICE_TIER = "3"
        constructor() {} 
    }
    export class PegLimitType {
        public static tag(): number { return 837 }
        public static OR_BETTER = "0"
        public static STRICT = "1"
        public static OR_WORSE = "2"
        constructor() {} 
    }
    export class PegRoundDirection {
        public static tag(): number { return 838 }
        public static MORE_AGGRESSIVE = "1"
        public static MORE_PASSIVE = "2"
        constructor() {} 
    }
    export class PeggedPrice {
        public static tag(): number { return 839 }
        constructor() {} 
    }
    export class PegScope {
        public static tag(): number { return 840 }
        public static LOCAL = "1"
        public static NATIONAL = "2"
        public static GLOBAL = "3"
        public static NATIONAL_EXCLUDING_LOCAL = "4"
        constructor() {} 
    }
    export class DiscretionMoveType {
        public static tag(): number { return 841 }
        public static FLOATING = "0"
        public static FIXED = "1"
        constructor() {} 
    }
    export class DiscretionOffsetType {
        public static tag(): number { return 842 }
        public static PRICE = "0"
        public static BASIS_POINTS = "1"
        public static TICKS = "2"
        public static PRICE_TIER = "3"
        constructor() {} 
    }
    export class DiscretionLimitType {
        public static tag(): number { return 843 }
        public static OR_BETTER = "0"
        public static STRICT = "1"
        public static OR_WORSE = "2"
        constructor() {} 
    }
    export class DiscretionRoundDirection {
        public static tag(): number { return 844 }
        public static MORE_AGGRESSIVE = "1"
        public static MORE_PASSIVE = "2"
        constructor() {} 
    }
    export class DiscretionPrice {
        public static tag(): number { return 845 }
        constructor() {} 
    }
    export class DiscretionScope {
        public static tag(): number { return 846 }
        public static LOCAL = "1"
        public static NATIONAL = "2"
        public static GLOBAL = "3"
        public static NATIONAL_EXCLUDING_LOCAL = "4"
        constructor() {} 
    }
    export class TargetStrategy {
        public static tag(): number { return 847 }
        public static VWAP = "1"
        public static PARTICIPATE = "2"
        public static MININIZE_MARKET_IMPACT = "3"
        constructor() {} 
    }
    export class TargetStrategyParameters {
        public static tag(): number { return 848 }
        constructor() {} 
    }
    export class ParticipationRate {
        public static tag(): number { return 849 }
        constructor() {} 
    }
    export class TargetStrategyPerformance {
        public static tag(): number { return 850 }
        constructor() {} 
    }
    export class LastLiquidityInd {
        public static tag(): number { return 851 }
        public static ADDED_LIQUIDITY = "1"
        public static REMOVED_LIQUIDITY = "2"
        public static LIQUIDITY_ROUTED_OUT = "3"
        public static AUCTION = "4"
        constructor() {} 
    }
    export class PublishTrdIndicator {
        public static tag(): number { return 852 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class ShortSaleReason {
        public static tag(): number { return 853 }
        public static DEALER_SOLD_SHORT = "0"
        public static DEALER_SOLD_SHORT_EXEMPT = "1"
        public static SELLING_CUSTOMER_SOLD_SHORT = "2"
        public static SELLING_CUSTOMER_SOLD_SHORT_EXEMPT = "3"
        public static QUALIFIED_SERVICE_REPRESENTATIVE = "4"
        public static QSR_OR_AGU_CONTRA_SIDE_SOLD_SHORT_EXEMPT = "5"
        constructor() {} 
    }
    export class QtyType {
        public static tag(): number { return 854 }
        public static UNITS = "0"
        public static CONTRACTS = "1"
        public static UNITS_OF_MEASURE_PER_TIME_UNIT = "2"
        constructor() {} 
    }
    export class SecondaryTrdType {
        public static tag(): number { return 855 }
        constructor() {} 
    }
    export class TradeReportType {
        public static tag(): number { return 856 }
        public static SUBMIT = "0"
        public static ALLEGED_1 = "1"
        public static ACCEPT = "2"
        public static DECLINE = "3"
        public static ADDENDUM = "4"
        public static NO_WAS = "5"
        public static TRADE_REPORT_CANCEL = "6"
        public static $7 = "7"
        public static DEFAULTED = "8"
        public static INVALID_CMTA = "9"
        public static PENDED = "10"
        public static ALLEGED_NEW = "11"
        public static ALLEGED_ADDENDUM = "12"
        public static ALLEGED_NO_WAS = "13"
        public static ALLEGED_TRADE_REPORT_CANCEL = "14"
        public static ALLEGED_15 = "15"
        constructor() {} 
    }
    export class AllocNoOrdersType {
        public static tag(): number { return 857 }
        public static NOT_SPECIFIED = "0"
        public static EXPLICIT_LIST_PROVIDED = "1"
        constructor() {} 
    }
    export class SharedCommission {
        public static tag(): number { return 858 }
        constructor() {} 
    }
    export class ConfirmReqID {
        public static tag(): number { return 859 }
        constructor() {} 
    }
    export class AvgParPx {
        public static tag(): number { return 860 }
        constructor() {} 
    }
    export class ReportedPx {
        public static tag(): number { return 861 }
        constructor() {} 
    }
    export class NoCapacities {
        public static tag(): number { return 862 }
        constructor() {} 
    }
    export class OrderCapacityQty {
        public static tag(): number { return 863 }
        constructor() {} 
    }
    export class NoEvents {
        public static tag(): number { return 864 }
        constructor() {} 
    }
    export class EventType {
        public static tag(): number { return 865 }
        public static PUT = "1"
        public static CALL = "2"
        public static TENDER = "3"
        public static SINKING_FUND_CALL = "4"
        public static ACTIVATION = "5"
        public static INACTIVIATION = "6"
        public static LAST_ELIGIBLE_TRADE_DATE = "7"
        public static SWAP_START_DATE = "8"
        public static SWAP_END_DATE = "9"
        public static SWAP_ROLL_DATE = "10"
        public static SWAP_NEXT_START_DATE = "11"
        public static SWAP_NEXT_ROLL_DATE = "12"
        public static FIRST_DELIVERY_DATE = "13"
        public static LAST_DELIVERY_DATE = "14"
        public static INITIAL_INVENTORY_DUE_DATE = "15"
        public static FINAL_INVENTORY_DUE_DATE = "16"
        public static FIRST_INTENT_DATE = "17"
        public static LAST_INTENT_DATE = "18"
        public static POSITION_REMOVAL_DATE = "19"
        public static OTHER = "99"
        constructor() {} 
    }
    export class EventDate {
        public static tag(): number { return 866 }
        constructor() {} 
    }
    export class EventPx {
        public static tag(): number { return 867 }
        constructor() {} 
    }
    export class EventText {
        public static tag(): number { return 868 }
        constructor() {} 
    }
    export class PctAtRisk {
        public static tag(): number { return 869 }
        constructor() {} 
    }
    export class NoInstrAttrib {
        public static tag(): number { return 870 }
        constructor() {} 
    }
    export class InstrAttribType {
        public static tag(): number { return 871 }
        public static FLAT = "1"
        public static ZERO_COUPON = "2"
        public static INTEREST_BEARING = "3"
        public static NO_PERIODIC_PAYMENTS = "4"
        public static VARIABLE_RATE = "5"
        public static LESS_FEE_FOR_PUT = "6"
        public static STEPPED_COUPON = "7"
        public static COUPON_PERIOD = "8"
        public static WHEN_AND_IF_ISSUED = "9"
        public static ORIGINAL_ISSUE_DISCOUNT = "10"
        public static CALLABLE_PUTTABLE = "11"
        public static ESCROWED_TO_MATURITY = "12"
        public static ESCROWED_TO_REDEMPTION_DATE = "13"
        public static PRE_REFUNDED = "14"
        public static IN_DEFAULT = "15"
        public static UNRATED = "16"
        public static TAXABLE = "17"
        public static INDEXED = "18"
        public static SUBJECT_TO_ALTERNATIVE_MINIMUM_TAX = "19"
        public static ORIGINAL_ISSUE_DISCOUNT_PRICE_SUPPLY_PRICE_IN_THE_INSTRATTRIBVALUE = "20"
        public static CALLABLE_BELOW_MATURITY_VALUE = "21"
        public static CALLABLE_WITHOUT_NOTICE_BY_MAIL_TO_HOLDER_UNLESS_REGISTERED = "22"
        public static PRICE_TICK_RULES_FOR_SECURITY = "23"
        public static TRADE_TYPE_ELIGIBILITY_DETAILS_FOR_SECURITY = "24"
        public static INSTRUMENT_DENOMINATOR = "25"
        public static INSTRUMENT_NUMERATOR = "26"
        public static INSTRUMENT_PRICE_PRECISION = "27"
        public static INSTRUMENT_STRIKE_PRICE = "28"
        public static TRADEABLE_INDICATOR = "29"
        public static TEXT_SUPPLY_THE_TEXT_OF_THE_ATTRIBUTE_OR_DISCLAIMER_IN_THE_INSTRATTRIBVALUE = "99"
        constructor() {} 
    }
    export class InstrAttribValue {
        public static tag(): number { return 872 }
        constructor() {} 
    }
    export class DatedDate {
        public static tag(): number { return 873 }
        constructor() {} 
    }
    export class InterestAccrualDate {
        public static tag(): number { return 874 }
        constructor() {} 
    }
    export class CPProgram {
        public static tag(): number { return 875 }
        public static $3 = "1"
        public static $4 = "2"
        public static OTHER = "99"
        constructor() {} 
    }
    export class CPRegType {
        public static tag(): number { return 876 }
        constructor() {} 
    }
    export class UnderlyingCPProgram {
        public static tag(): number { return 877 }
        constructor() {} 
    }
    export class UnderlyingCPRegType {
        public static tag(): number { return 878 }
        constructor() {} 
    }
    export class UnderlyingQty {
        public static tag(): number { return 879 }
        constructor() {} 
    }
    export class TrdMatchID {
        public static tag(): number { return 880 }
        constructor() {} 
    }
    export class SecondaryTradeReportRefID {
        public static tag(): number { return 881 }
        constructor() {} 
    }
    export class UnderlyingDirtyPrice {
        public static tag(): number { return 882 }
        constructor() {} 
    }
    export class UnderlyingEndPrice {
        public static tag(): number { return 883 }
        constructor() {} 
    }
    export class UnderlyingStartValue {
        public static tag(): number { return 884 }
        constructor() {} 
    }
    export class UnderlyingCurrentValue {
        public static tag(): number { return 885 }
        constructor() {} 
    }
    export class UnderlyingEndValue {
        public static tag(): number { return 886 }
        constructor() {} 
    }
    export class NoUnderlyingStips {
        public static tag(): number { return 887 }
        constructor() {} 
    }
    export class UnderlyingStipType {
        public static tag(): number { return 888 }
        constructor() {} 
    }
    export class UnderlyingStipValue {
        public static tag(): number { return 889 }
        constructor() {} 
    }
    export class MaturityNetMoney {
        public static tag(): number { return 890 }
        constructor() {} 
    }
    export class MiscFeeBasis {
        public static tag(): number { return 891 }
        public static ABSOLUTE = "0"
        public static PER_UNIT = "1"
        public static PERCENTAGE = "2"
        constructor() {} 
    }
    export class TotNoAllocs {
        public static tag(): number { return 892 }
        constructor() {} 
    }
    export class LastFragment {
        public static tag(): number { return 893 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class CollReqID {
        public static tag(): number { return 894 }
        constructor() {} 
    }
    export class CollAsgnReason {
        public static tag(): number { return 895 }
        public static INITIAL = "0"
        public static SCHEDULED = "1"
        public static TIME_WARNING = "2"
        public static MARGIN_DEFICIENCY = "3"
        public static MARGIN_EXCESS = "4"
        public static FORWARD_COLLATERAL_DEMAND = "5"
        public static EVENT_OF_DEFAULT = "6"
        public static ADVERSE_TAX_EVENT = "7"
        constructor() {} 
    }
    export class CollInquiryQualifier {
        public static tag(): number { return 896 }
        public static TRADE_DATE = "0"
        public static GC_INSTRUMENT = "1"
        public static COLLATERAL_INSTRUMENT = "2"
        public static SUBSTITUTION_ELIGIBLE = "3"
        public static NOT_ASSIGNED = "4"
        public static PARTIALLY_ASSIGNED = "5"
        public static FULLY_ASSIGNED = "6"
        public static OUTSTANDING_TRADES = "7"
        constructor() {} 
    }
    export class NoTrades {
        public static tag(): number { return 897 }
        constructor() {} 
    }
    export class MarginRatio {
        public static tag(): number { return 898 }
        constructor() {} 
    }
    export class MarginExcess {
        public static tag(): number { return 899 }
        constructor() {} 
    }
    export class TotalNetValue {
        public static tag(): number { return 900 }
        constructor() {} 
    }
    export class CashOutstanding {
        public static tag(): number { return 901 }
        constructor() {} 
    }
    export class CollAsgnID {
        public static tag(): number { return 902 }
        constructor() {} 
    }
    export class CollAsgnTransType {
        public static tag(): number { return 903 }
        public static NEW = "0"
        public static REPLACE = "1"
        public static CANCEL = "2"
        public static RELEASE = "3"
        public static REVERSE = "4"
        constructor() {} 
    }
    export class CollRespID {
        public static tag(): number { return 904 }
        constructor() {} 
    }
    export class CollAsgnRespType {
        public static tag(): number { return 905 }
        public static RECEIVED = "0"
        public static ACCEPTED = "1"
        public static DECLINED = "2"
        public static REJECTED = "3"
        constructor() {} 
    }
    export class CollAsgnRejectReason {
        public static tag(): number { return 906 }
        public static UNKNOWN_DEAL = "0"
        public static UNKNOWN_OR_INVALID_INSTRUMENT = "1"
        public static UNAUTHORIZED_TRANSACTION = "2"
        public static INSUFFICIENT_COLLATERAL = "3"
        public static INVALID_TYPE_OF_COLLATERAL = "4"
        public static EXCESSIVE_SUBSTITUTION = "5"
        public static OTHER = "99"
        constructor() {} 
    }
    export class CollAsgnRefID {
        public static tag(): number { return 907 }
        constructor() {} 
    }
    export class CollRptID {
        public static tag(): number { return 908 }
        constructor() {} 
    }
    export class CollInquiryID {
        public static tag(): number { return 909 }
        constructor() {} 
    }
    export class CollStatus {
        public static tag(): number { return 910 }
        public static UNASSIGNED = "0"
        public static PARTIALLY_ASSIGNED = "1"
        public static ASSIGNMENT_PROPOSED = "2"
        public static ASSIGNED = "3"
        public static CHALLENGED = "4"
        constructor() {} 
    }
    export class TotNumReports {
        public static tag(): number { return 911 }
        constructor() {} 
    }
    export class LastRptRequested {
        public static tag(): number { return 912 }
        public static NO = "N"
        public static YES = "Y"
        constructor() {} 
    }
    export class AgreementDesc {
        public static tag(): number { return 913 }
        constructor() {} 
    }
    export class AgreementID {
        public static tag(): number { return 914 }
        constructor() {} 
    }
    export class AgreementDate {
        public static tag(): number { return 915 }
        constructor() {} 
    }
    export class StartDate {
        public static tag(): number { return 916 }
        constructor() {} 
    }
    export class EndDate {
        public static tag(): number { return 917 }
        constructor() {} 
    }
    export class AgreementCurrency {
        public static tag(): number { return 918 }
        constructor() {} 
    }
    export class DeliveryType {
        public static tag(): number { return 919 }
        public static VERSUS_PAYMENT_DELIVER = "0"
        public static FREE_DELIVER = "1"
        public static TRI_PARTY = "2"
        public static HOLD_IN_CUSTODY = "3"
        constructor() {} 
    }
    export class EndAccruedInterestAmt {
        public static tag(): number { return 920 }
        constructor() {} 
    }
    export class StartCash {
        public static tag(): number { return 921 }
        constructor() {} 
    }
    export class EndCash {
        public static tag(): number { return 922 }
        constructor() {} 
    }
    export class UserRequestID {
        public static tag(): number { return 923 }
        constructor() {} 
    }
    export class UserRequestType {
        public static tag(): number { return 924 }
        public static LOG_ON_USER = "1"
        public static LOG_OFF_USER = "2"
        public static CHANGE_PASSWORD_FOR_USER = "3"
        public static REQUEST_INDIVIDUAL_USER_STATUS = "4"
        constructor() {} 
    }
    export class NewPassword {
        public static tag(): number { return 925 }
        constructor() {} 
    }
    export class UserStatus {
        public static tag(): number { return 926 }
        public static LOGGED_IN = "1"
        public static NOT_LOGGED_IN = "2"
        public static USER_NOT_RECOGNISED = "3"
        public static PASSWORD_INCORRECT = "4"
        public static PASSWORD_CHANGED = "5"
        public static OTHER = "6"
        public static FORCED_USER_LOGOUT_BY_EXCHANGE = "7"
        public static SESSION_SHUTDOWN_WARNING = "8"
        constructor() {} 
    }
    export class UserStatusText {
        public static tag(): number { return 927 }
        constructor() {} 
    }
    export class StatusValue {
        public static tag(): number { return 928 }
        public static CONNECTED = "1"
        public static NOT_CONNECTED_2 = "2"
        public static NOT_CONNECTED_3 = "3"
        public static IN_PROCESS = "4"
        constructor() {} 
    }
    export class StatusText {
        public static tag(): number { return 929 }
        constructor() {} 
    }
    export class RefCompID {
        public static tag(): number { return 930 }
        constructor() {} 
    }
    export class RefSubID {
        public static tag(): number { return 931 }
        constructor() {} 
    }
    export class NetworkResponseID {
        public static tag(): number { return 932 }
        constructor() {} 
    }
    export class NetworkRequestID {
        public static tag(): number { return 933 }
        constructor() {} 
    }
    export class LastNetworkResponseID {
        public static tag(): number { return 934 }
        constructor() {} 
    }
    export class NetworkRequestType {
        public static tag(): number { return 935 }
        public static SNAPSHOT = "1"
        public static SUBSCRIBE = "2"
        public static STOP_SUBSCRIBING = "4"
        public static LEVEL_OF_DETAIL_THEN_NOCOMPIDS_BECOMES_REQUIRED = "8"
        constructor() {} 
    }
    export class NoCompIDs {
        public static tag(): number { return 936 }
        constructor() {} 
    }
    export class NetworkStatusResponseType {
        public static tag(): number { return 937 }
        public static FULL = "1"
        public static INCREMENTAL_UPDATE = "2"
        constructor() {} 
    }
    export class NoCollInquiryQualifier {
        public static tag(): number { return 938 }
        constructor() {} 
    }
    export class TrdRptStatus {
        public static tag(): number { return 939 }
        public static ACCEPTED = "0"
        public static REJECTED = "1"
        public static ACCEPTED_WITH_ERRORS = "3"
        constructor() {} 
    }
    export class AffirmStatus {
        public static tag(): number { return 940 }
        public static RECEIVED = "1"
        public static CONFIRM_REJECTED_IE_NOT_AFFIRMED = "2"
        public static AFFIRMED = "3"
        constructor() {} 
    }
    export class UnderlyingStrikeCurrency {
        public static tag(): number { return 941 }
        constructor() {} 
    }
    export class LegStrikeCurrency {
        public static tag(): number { return 942 }
        constructor() {} 
    }
    export class TimeBracket {
        public static tag(): number { return 943 }
        constructor() {} 
    }
    export class CollAction {
        public static tag(): number { return 944 }
        public static RETAIN = "0"
        public static ADD = "1"
        public static REMOVE = "2"
        constructor() {} 
    }
    export class CollInquiryStatus {
        public static tag(): number { return 945 }
        public static ACCEPTED = "0"
        public static ACCEPTED_WITH_WARNINGS = "1"
        public static COMPLETED = "2"
        public static COMPLETED_WITH_WARNINGS = "3"
        public static REJECTED = "4"
        constructor() {} 
    }
    export class CollInquiryResult {
        public static tag(): number { return 946 }
        public static SUCCESSFUL = "0"
        public static INVALID_OR_UNKNOWN_INSTRUMENT = "1"
        public static INVALID_OR_UNKNOWN_COLLATERAL_TYPE = "2"
        public static INVALID_PARTIES = "3"
        public static INVALID_TRANSPORT_TYPE_REQUESTED = "4"
        public static INVALID_DESTINATION_REQUESTED = "5"
        public static NO_COLLATERAL_FOUND_FOR_THE_TRADE_SPECIFIED = "6"
        public static NO_COLLATERAL_FOUND_FOR_THE_ORDER_SPECIFIED = "7"
        public static COLLATERAL_INQUIRY_TYPE_NOT_SUPPORTED = "8"
        public static UNAUTHORIZED_FOR_COLLATERAL_INQUIRY = "9"
        public static OTHER = "99"
        constructor() {} 
    }
    export class StrikeCurrency {
        public static tag(): number { return 947 }
        constructor() {} 
    }
    export class NoNested3PartyIDs {
        public static tag(): number { return 948 }
        constructor() {} 
    }
    export class Nested3PartyID {
        public static tag(): number { return 949 }
        constructor() {} 
    }
    export class Nested3PartyIDSource {
        public static tag(): number { return 950 }
        constructor() {} 
    }
    export class Nested3PartyRole {
        public static tag(): number { return 951 }
        constructor() {} 
    }
    export class NoNested3PartySubIDs {
        public static tag(): number { return 952 }
        constructor() {} 
    }
    export class Nested3PartySubID {
        public static tag(): number { return 953 }
        constructor() {} 
    }
    export class Nested3PartySubIDType {
        public static tag(): number { return 954 }
        constructor() {} 
    }
    export class LegContractSettlMonth {
        public static tag(): number { return 955 }
        constructor() {} 
    }
    export class LegInterestAccrualDate {
        public static tag(): number { return 956 }
        constructor() {} 
    }
    export class NoStrategyParameters {
        public static tag(): number { return 957 }
        constructor() {} 
    }
    export class StrategyParameterName {
        public static tag(): number { return 958 }
        constructor() {} 
    }
    export class StrategyParameterType {
        public static tag(): number { return 959 }
        public static INT = "1"
        public static LENGTH = "2"
        public static NUMINGROUP = "3"
        public static SEQNUM = "4"
        public static TAGNUM = "5"
        public static FLOAT = "6"
        public static QTY = "7"
        public static PRICE = "8"
        public static PRICEOFFSET = "9"
        public static AMT = "10"
        public static PERCENTAGE = "11"
        public static CHAR = "12"
        public static BOOLEAN = "13"
        public static STRING = "14"
        public static MULTIPLECHARVALUE = "15"
        public static CURRENCY = "16"
        public static EXCHANGE = "17"
        public static MONTHYEAR = "18"
        public static UTCTIMESTAMP = "19"
        public static UTCTIMEONLY = "20"
        public static LOCALMKTDATE = "21"
        public static UTCDATEONLY = "22"
        public static DATA = "23"
        public static MULTIPLESTRINGVALUE = "24"
        public static COUNTRY = "25"
        public static LANGUAGE = "26"
        public static TZTIMEONLY = "27"
        public static TZTIMESTAMP = "28"
        public static TENOR = "29"
        constructor() {} 
    }
    export class StrategyParameterValue {
        public static tag(): number { return 960 }
        constructor() {} 
    }
    export class HostCrossID {
        public static tag(): number { return 961 }
        constructor() {} 
    }
    export class SideTimeInForce {
        public static tag(): number { return 962 }
        constructor() {} 
    }
    export class MDReportID {
        public static tag(): number { return 963 }
        constructor() {} 
    }
    export class SecurityReportID {
        public static tag(): number { return 964 }
        constructor() {} 
    }
    export class SecurityStatus {
        public static tag(): number { return 965 }
        public static ACTIVE = "1"
        public static INACTIVE = "2"
        constructor() {} 
    }
    export class SettleOnOpenFlag {
        public static tag(): number { return 966 }
        constructor() {} 
    }
    export class StrikeMultiplier {
        public static tag(): number { return 967 }
        constructor() {} 
    }
    export class StrikeValue {
        public static tag(): number { return 968 }
        constructor() {} 
    }
    export class MinPriceIncrement {
        public static tag(): number { return 969 }
        constructor() {} 
    }
    export class PositionLimit {
        public static tag(): number { return 970 }
        constructor() {} 
    }
    export class NTPositionLimit {
        public static tag(): number { return 971 }
        constructor() {} 
    }
    export class UnderlyingAllocationPercent {
        public static tag(): number { return 972 }
        constructor() {} 
    }
    export class UnderlyingCashAmount {
        public static tag(): number { return 973 }
        constructor() {} 
    }
    export class UnderlyingCashType {
        public static tag(): number { return 974 }
        public static FIXED = "FIXED"
        public static DIFF = "DIFF"
        constructor() {} 
    }
    export class UnderlyingSettlementType {
        public static tag(): number { return 975 }
        public static T_PLUS_1 = "2"
        public static T_PLUS_3 = "4"
        public static T_PLUS_4 = "5"
        constructor() {} 
    }
    export class QuantityDate {
        public static tag(): number { return 976 }
        constructor() {} 
    }
    export class ContIntRptID {
        public static tag(): number { return 977 }
        constructor() {} 
    }
    export class LateIndicator {
        public static tag(): number { return 978 }
        constructor() {} 
    }
    export class InputSource {
        public static tag(): number { return 979 }
        constructor() {} 
    }
    export class SecurityUpdateAction {
        public static tag(): number { return 980 }
        public static ADD = "A"
        public static DELETE = "D"
        public static MODIFY = "M"
        constructor() {} 
    }
    export class NoExpiration {
        public static tag(): number { return 981 }
        constructor() {} 
    }
    export class ExpirationQtyType {
        public static tag(): number { return 982 }
        public static AUTO_EXERCISE = "1"
        public static NON_AUTO_EXERCISE = "2"
        public static FINAL_WILL_BE_EXERCISED = "3"
        public static CONTRARY_INTENTION = "4"
        public static DIFFERENCE = "5"
        constructor() {} 
    }
    export class ExpQty {
        public static tag(): number { return 983 }
        constructor() {} 
    }
    export class NoUnderlyingAmounts {
        public static tag(): number { return 984 }
        constructor() {} 
    }
    export class UnderlyingPayAmount {
        public static tag(): number { return 985 }
        constructor() {} 
    }
    export class UnderlyingCollectAmount {
        public static tag(): number { return 986 }
        constructor() {} 
    }
    export class UnderlyingSettlementDate {
        public static tag(): number { return 987 }
        constructor() {} 
    }
    export class UnderlyingSettlementStatus {
        public static tag(): number { return 988 }
        constructor() {} 
    }
    export class SecondaryIndividualAllocID {
        public static tag(): number { return 989 }
        constructor() {} 
    }
    export class LegReportID {
        public static tag(): number { return 990 }
        constructor() {} 
    }
    export class RndPx {
        public static tag(): number { return 991 }
        constructor() {} 
    }
    export class IndividualAllocType {
        public static tag(): number { return 992 }
        public static SUB_ALLOCATE = "1"
        public static THIRD_PARTY_ALLOCATION = "2"
        constructor() {} 
    }
    export class AllocCustomerCapacity {
        public static tag(): number { return 993 }
        constructor() {} 
    }
    export class TierCode {
        public static tag(): number { return 994 }
        constructor() {} 
    }
    export class UnitOfMeasure {
        public static tag(): number { return 996 }
        public static BILLION_CUBIC_FEET = "Bcf"
        public static MILLION_BARRELS = "MMbbl"
        public static ONE_MILLION_BTU = "MMBtu"
        public static MEGAWATT_HOURS = "MWh"
        public static BARRELS = "Bbl"
        public static BUSHELS = "Bu"
        public static POUNDS = "lbs"
        public static GALLONS = "Gal"
        public static TROY_OUNCES = "oz_tr"
        public static METRIC_TONS = "t"
        public static TONS = "tn"
        public static US_DOLLARS = "USD"
        public static ALLOWANCES = "Alw"
        constructor() {} 
    }
    export class TimeUnit {
        public static tag(): number { return 997 }
        public static HOUR = "H"
        public static MINUTE = "Min"
        public static SECOND = "S"
        public static DAY = "D"
        public static WEEK = "Wk"
        public static MONTH = "Mo"
        public static YEAR = "Yr"
        constructor() {} 
    }
    export class UnderlyingUnitOfMeasure {
        public static tag(): number { return 998 }
        constructor() {} 
    }
    export class LegUnitOfMeasure {
        public static tag(): number { return 999 }
        constructor() {} 
    }
    export class UnderlyingTimeUnit {
        public static tag(): number { return 1000 }
        constructor() {} 
    }
    export class LegTimeUnit {
        public static tag(): number { return 1001 }
        constructor() {} 
    }
    export class AllocMethod {
        public static tag(): number { return 1002 }
        public static AUTOMATIC = "1"
        public static GUARANTOR = "2"
        public static MANUAL = "3"
        constructor() {} 
    }
    export class TradeID {
        public static tag(): number { return 1003 }
        constructor() {} 
    }
    export class SideTradeReportID {
        public static tag(): number { return 1005 }
        constructor() {} 
    }
    export class SideFillStationCd {
        public static tag(): number { return 1006 }
        constructor() {} 
    }
    export class SideReasonCd {
        public static tag(): number { return 1007 }
        constructor() {} 
    }
    export class SideTrdSubTyp {
        public static tag(): number { return 1008 }
        constructor() {} 
    }
    export class SideLastQty {
        public static tag(): number { return 1009 }
        constructor() {} 
    }
    export class MessageEventSource {
        public static tag(): number { return 1011 }
        constructor() {} 
    }
    export class SideTrdRegTimestamp {
        public static tag(): number { return 1012 }
        constructor() {} 
    }
    export class SideTrdRegTimestampType {
        public static tag(): number { return 1013 }
        constructor() {} 
    }
    export class SideTrdRegTimestampSrc {
        public static tag(): number { return 1014 }
        constructor() {} 
    }
    export class AsOfIndicator {
        public static tag(): number { return 1015 }
        public static FALSE = "0"
        public static TRUE = "1"
        constructor() {} 
    }
    export class NoSideTrdRegTS {
        public static tag(): number { return 1016 }
        constructor() {} 
    }
    export class LegOptionRatio {
        public static tag(): number { return 1017 }
        constructor() {} 
    }
    export class NoInstrumentParties {
        public static tag(): number { return 1018 }
        constructor() {} 
    }
    export class InstrumentPartyID {
        public static tag(): number { return 1019 }
        constructor() {} 
    }
    export class TradeVolume {
        public static tag(): number { return 1020 }
        constructor() {} 
    }
    export class MDBookType {
        public static tag(): number { return 1021 }
        public static TOP_OF_BOOK = "1"
        public static PRICE_DEPTH = "2"
        public static ORDER_DEPTH = "3"
        constructor() {} 
    }
    export class MDFeedType {
        public static tag(): number { return 1022 }
        constructor() {} 
    }
    export class MDPriceLevel {
        public static tag(): number { return 1023 }
        constructor() {} 
    }
    export class MDOriginType {
        public static tag(): number { return 1024 }
        public static BOOK = "0"
        public static OFF_BOOK = "1"
        public static CROSS = "2"
        constructor() {} 
    }
    export class FirstPx {
        public static tag(): number { return 1025 }
        constructor() {} 
    }
    export class MDEntrySpotRate {
        public static tag(): number { return 1026 }
        constructor() {} 
    }
    export class MDEntryForwardPoints {
        public static tag(): number { return 1027 }
        constructor() {} 
    }
    export class ManualOrderIndicator {
        public static tag(): number { return 1028 }
        constructor() {} 
    }
    export class CustDirectedOrder {
        public static tag(): number { return 1029 }
        constructor() {} 
    }
    export class ReceivedDeptID {
        public static tag(): number { return 1030 }
        constructor() {} 
    }
    export class CustOrderHandlingInst {
        public static tag(): number { return 1031 }
        public static ADD_ON_ORDER = "ADD"
        public static ALL_OR_NONE = "AON"
        public static CASH_NOT_HELD = "CNH"
        public static DIRECTED_ORDER = "DIR"
        public static EXCHANGE_FOR_PHYSICAL_TRANSACTION = "E.W"
        public static FILL_OR_KILL = "FOK"
        public static IMBALANCE_ONLY = "IO"
        public static IMMEDIATE_OR_CANCEL = "IOC"
        public static LIMIT_ON_OPEN = "LOO"
        public static LIMIT_ON_CLOSE = "LOC"
        public static MARKET_AT_OPEN = "MAO"
        public static MARKET_AT_CLOSE = "MAC"
        public static MARKET_ON_OPEN = "MOO"
        public static MARKET_ON_CLOSE = "MOC"
        public static MINIMUM_QUANTITY = "MQT"
        public static NOT_HELD = "NH"
        public static OVER_THE_DAY = "OVD"
        public static PEGGED = "PEG"
        public static RESERVE_SIZE_ORDER = "RSV"
        public static STOP_STOCK_TRANSACTION = "S.W"
        public static SCALE = "SCL"
        public static TIME_ORDER = "TMO"
        public static TRAILING_STOP = "TS"
        public static WORK = "WRK"
        constructor() {} 
    }
    export class OrderHandlingInstSource {
        public static tag(): number { return 1032 }
        public static NASD_OATS = "1"
        constructor() {} 
    }
    export class DeskType {
        public static tag(): number { return 1033 }
        public static AGENCY = "A"
        public static ARBITRAGE = "AR"
        public static DERIVATIVES = "D"
        public static INTERNATIONAL = "IN"
        public static INSTITUTIONAL = "IS"
        public static OTHER = "O"
        public static PREFERRED_TRADING = "PF"
        public static PROPRIETARY = "PR"
        public static PROGRAM_TRADING = "PT"
        public static SALES = "S"
        public static TRADING = "T"
        constructor() {} 
    }
    export class DeskTypeSource {
        public static tag(): number { return 1034 }
        public static NASD_OATS = "1"
        constructor() {} 
    }
    export class DeskOrderHandlingInst {
        public static tag(): number { return 1035 }
        public static ADD_ON_ORDER = "ADD"
        public static ALL_OR_NONE = "AON"
        public static CASH_NOT_HELD = "CNH"
        public static DIRECTED_ORDER = "DIR"
        public static EXCHANGE_FOR_PHYSICAL_TRANSACTION = "E.W"
        public static FILL_OR_KILL = "FOK"
        public static IMBALANCE_ONLY = "IO"
        public static IMMEDIATE_OR_CANCEL = "IOC"
        public static LIMIT_ON_OPEN = "LOO"
        public static LIMIT_ON_CLOSE = "LOC"
        public static MARKET_AT_OPEN = "MAO"
        public static MARKET_AT_CLOSE = "MAC"
        public static MARKET_ON_OPEN = "MOO"
        public static MARKET_ON_CLOSE = "MOC"
        public static MINIMUM_QUANTITY = "MQT"
        public static NOT_HELD = "NH"
        public static OVER_THE_DAY = "OVD"
        public static PEGGED = "PEG"
        public static RESERVE_SIZE_ORDER = "RSV"
        public static STOP_STOCK_TRANSACTION = "S.W"
        public static SCALE = "SCL"
        public static TIME_ORDER = "TMO"
        public static TRAILING_STOP = "TS"
        public static WORK = "WRK"
        constructor() {} 
    }
    export class ExecAckStatus {
        public static tag(): number { return 1036 }
        public static RECEIVED_NOT_YET_PROCESSED = "0"
        public static ACCEPTED = "1"
        public static DONT_KNOW = "2"
        constructor() {} 
    }
    export class UnderlyingDeliveryAmount {
        public static tag(): number { return 1037 }
        constructor() {} 
    }
    export class UnderlyingCapValue {
        public static tag(): number { return 1038 }
        constructor() {} 
    }
    export class UnderlyingSettlMethod {
        public static tag(): number { return 1039 }
        constructor() {} 
    }
    export class SecondaryTradeID {
        public static tag(): number { return 1040 }
        constructor() {} 
    }
    export class FirmTradeID {
        public static tag(): number { return 1041 }
        constructor() {} 
    }
    export class SecondaryFirmTradeID {
        public static tag(): number { return 1042 }
        constructor() {} 
    }
    export class CollApplType {
        public static tag(): number { return 1043 }
        public static SPECIFIC_DEPOSIT = "0"
        public static GENERAL = "1"
        constructor() {} 
    }
    export class UnderlyingAdjustedQuantity {
        public static tag(): number { return 1044 }
        constructor() {} 
    }
    export class UnderlyingFXRate {
        public static tag(): number { return 1045 }
        constructor() {} 
    }
    export class UnderlyingFXRateCalc {
        public static tag(): number { return 1046 }
        public static DIVIDE = "D"
        public static MULTIPLY = "M"
        constructor() {} 
    }
    export class AllocPositionEffect {
        public static tag(): number { return 1047 }
        public static OPEN = "O"
        public static CLOSE = "C"
        public static ROLLED = "R"
        public static FIFO = "F"
        constructor() {} 
    }
    export class DealingCapacity {
        public static tag(): number { return 1048 }
        public static AGENT = "A"
        public static PRINCIPAL = "P"
        public static RISKLESS_PRINCIPAL = "R"
        constructor() {} 
    }
    export class InstrmtAssignmentMethod {
        public static tag(): number { return 1049 }
        constructor() {} 
    }
    export class InstrumentPartyIDSource {
        public static tag(): number { return 1050 }
        constructor() {} 
    }
    export class InstrumentPartyRole {
        public static tag(): number { return 1051 }
        constructor() {} 
    }
    export class NoInstrumentPartySubIDs {
        public static tag(): number { return 1052 }
        constructor() {} 
    }
    export class InstrumentPartySubID {
        public static tag(): number { return 1053 }
        constructor() {} 
    }
    export class InstrumentPartySubIDType {
        public static tag(): number { return 1054 }
        constructor() {} 
    }
    export class PositionCurrency {
        public static tag(): number { return 1055 }
        constructor() {} 
    }
    export class CalculatedCcyLastQty {
        public static tag(): number { return 1056 }
        constructor() {} 
    }
    export class AggressorIndicator {
        public static tag(): number { return 1057 }
        public static YES = "Y"
        public static NO = "N"
        constructor() {} 
    }
    export class NoUndlyInstrumentParties {
        public static tag(): number { return 1058 }
        constructor() {} 
    }
    export class UnderlyingInstrumentPartyID {
        public static tag(): number { return 1059 }
        constructor() {} 
    }
    export class UnderlyingInstrumentPartyIDSource {
        public static tag(): number { return 1060 }
        constructor() {} 
    }
    export class UnderlyingInstrumentPartyRole {
        public static tag(): number { return 1061 }
        constructor() {} 
    }
    export class NoUndlyInstrumentPartySubIDs {
        public static tag(): number { return 1062 }
        constructor() {} 
    }
    export class UnderlyingInstrumentPartySubID {
        public static tag(): number { return 1063 }
        constructor() {} 
    }
    export class UnderlyingInstrumentPartySubIDType {
        public static tag(): number { return 1064 }
        constructor() {} 
    }
    export class BidSwapPoints {
        public static tag(): number { return 1065 }
        constructor() {} 
    }
    export class OfferSwapPoints {
        public static tag(): number { return 1066 }
        constructor() {} 
    }
    export class LegBidForwardPoints {
        public static tag(): number { return 1067 }
        constructor() {} 
    }
    export class LegOfferForwardPoints {
        public static tag(): number { return 1068 }
        constructor() {} 
    }
    export class SwapPoints {
        public static tag(): number { return 1069 }
        constructor() {} 
    }
    export class MDQuoteType {
        public static tag(): number { return 1070 }
        public static INDICATIVE = "0"
        public static TRADEABLE = "1"
        public static RESTRICTED_TRADEABLE = "2"
        public static COUNTER = "3"
        public static INDICATIVE_AND_TRADEABLE = "4"
        constructor() {} 
    }
    export class LastSwapPoints {
        public static tag(): number { return 1071 }
        constructor() {} 
    }
    export class SideGrossTradeAmt {
        public static tag(): number { return 1072 }
        constructor() {} 
    }
    export class LegLastForwardPoints {
        public static tag(): number { return 1073 }
        constructor() {} 
    }
    export class LegCalculatedCcyLastQty {
        public static tag(): number { return 1074 }
        constructor() {} 
    }
    export class LegGrossTradeAmt {
        public static tag(): number { return 1075 }
        constructor() {} 
    }
    export class MaturityTime {
        public static tag(): number { return 1079 }
        constructor() {} 
    }
    export class RefOrderID {
        public static tag(): number { return 1080 }
        constructor() {} 
    }
    export class RefOrderIDSource {
        public static tag(): number { return 1081 }
        public static SECONDARYORDERID = "0"
        public static ORDERID = "1"
        public static MDENTRYID = "2"
        public static QUOTEENTRYID = "3"
        public static ORIGINAL_ORDER_ID = "4"
        constructor() {} 
    }
    export class SecondaryDisplayQty {
        public static tag(): number { return 1082 }
        constructor() {} 
    }
    export class DisplayWhen {
        public static tag(): number { return 1083 }
        public static IMMEDIATE = "1"
        public static EXHAUST = "2"
        constructor() {} 
    }
    export class DisplayMethod {
        public static tag(): number { return 1084 }
        public static INITIAL = "1"
        public static NEW = "2"
        public static RANDOM = "3"
        public static UNDISCLOSED = "4"
        constructor() {} 
    }
    export class DisplayLowQty {
        public static tag(): number { return 1085 }
        constructor() {} 
    }
    export class DisplayHighQty {
        public static tag(): number { return 1086 }
        constructor() {} 
    }
    export class DisplayMinIncr {
        public static tag(): number { return 1087 }
        constructor() {} 
    }
    export class RefreshQty {
        public static tag(): number { return 1088 }
        constructor() {} 
    }
    export class MatchIncrement {
        public static tag(): number { return 1089 }
        constructor() {} 
    }
    export class MaxPriceLevels {
        public static tag(): number { return 1090 }
        constructor() {} 
    }
    export class PreTradeAnonymity {
        public static tag(): number { return 1091 }
        constructor() {} 
    }
    export class PriceProtectionScope {
        public static tag(): number { return 1092 }
        public static NONE = "0"
        public static LOCAL = "1"
        public static NATIONAL = "2"
        public static GLOBAL = "3"
        constructor() {} 
    }
    export class LotType {
        public static tag(): number { return 1093 }
        public static ODD_LOT = "1"
        public static ROUND_LOT = "2"
        public static BLOCK_LOT = "3"
        public static ROUND_LOT_BASED_UPON_UNITOFMEASURE = "4"
        constructor() {} 
    }
    export class PegPriceType {
        public static tag(): number { return 1094 }
        public static LAST_PEG = "1"
        public static MID_PRICE_PEG = "2"
        public static OPENING_PEG = "3"
        public static MARKET_PEG = "4"
        public static PRIMARY_PEG = "5"
        public static PEG_TO_VWAP = "7"
        public static TRAILING_STOP_PEG = "8"
        public static PEG_TO_LIMIT_PRICE = "9"
        constructor() {} 
    }
    export class PeggedRefPrice {
        public static tag(): number { return 1095 }
        constructor() {} 
    }
    export class PegSecurityIDSource {
        public static tag(): number { return 1096 }
        constructor() {} 
    }
    export class PegSecurityID {
        public static tag(): number { return 1097 }
        constructor() {} 
    }
    export class PegSymbol {
        public static tag(): number { return 1098 }
        constructor() {} 
    }
    export class PegSecurityDesc {
        public static tag(): number { return 1099 }
        constructor() {} 
    }
    export class TriggerType {
        public static tag(): number { return 1100 }
        public static PARTIAL_EXECUTION = "1"
        public static SPECIFIED_TRADING_SESSION = "2"
        public static NEXT_AUCTION = "3"
        public static PRICE_MOVEMENT = "4"
        constructor() {} 
    }
    export class TriggerAction {
        public static tag(): number { return 1101 }
        public static ACTIVATE = "1"
        public static MODIFY = "2"
        public static CANCEL = "3"
        constructor() {} 
    }
    export class TriggerPrice {
        public static tag(): number { return 1102 }
        constructor() {} 
    }
    export class TriggerSymbol {
        public static tag(): number { return 1103 }
        constructor() {} 
    }
    export class TriggerSecurityID {
        public static tag(): number { return 1104 }
        constructor() {} 
    }
    export class TriggerSecurityIDSource {
        public static tag(): number { return 1105 }
        constructor() {} 
    }
    export class TriggerSecurityDesc {
        public static tag(): number { return 1106 }
        constructor() {} 
    }
    export class TriggerPriceType {
        public static tag(): number { return 1107 }
        public static BEST_OFFER = "1"
        public static LAST_TRADE = "2"
        public static BEST_BID = "3"
        public static BEST_BID_OR_LAST_TRADE = "4"
        public static BEST_OFFER_OR_LAST_TRADE = "5"
        public static BEST_MID = "6"
        constructor() {} 
    }
    export class TriggerPriceTypeScope {
        public static tag(): number { return 1108 }
        public static NONE = "0"
        public static LOCAL = "1"
        public static NATIONAL = "2"
        public static GLOBAL = "3"
        constructor() {} 
    }
    export class TriggerPriceDirection {
        public static tag(): number { return 1109 }
        public static TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_UP_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE = "U"
        public static TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_DOWN_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE = "D"
        constructor() {} 
    }
    export class TriggerNewPrice {
        public static tag(): number { return 1110 }
        constructor() {} 
    }
    export class TriggerOrderType {
        public static tag(): number { return 1111 }
        public static MARKET = "1"
        public static LIMIT = "2"
        constructor() {} 
    }
    export class TriggerNewQty {
        public static tag(): number { return 1112 }
        constructor() {} 
    }
    export class TriggerTradingSessionID {
        public static tag(): number { return 1113 }
        constructor() {} 
    }
    export class TriggerTradingSessionSubID {
        public static tag(): number { return 1114 }
        constructor() {} 
    }
    export class OrderCategory {
        public static tag(): number { return 1115 }
        public static ORDER = "1"
        public static QUOTE = "2"
        public static PRIVATELY_NEGOTIATED_TRADE = "3"
        public static MULTILEG_ORDER = "4"
        public static LINKED_ORDER = "5"
        public static QUOTE_REQUEST = "6"
        public static IMPLIED_ORDER = "7"
        public static CROSS_ORDER = "8"
        public static STREAMING_PRICE = "9"
        constructor() {} 
    }
    export class NoRootPartyIDs {
        public static tag(): number { return 1116 }
        constructor() {} 
    }
    export class RootPartyID {
        public static tag(): number { return 1117 }
        constructor() {} 
    }
    export class RootPartyIDSource {
        public static tag(): number { return 1118 }
        constructor() {} 
    }
    export class RootPartyRole {
        public static tag(): number { return 1119 }
        constructor() {} 
    }
    export class NoRootPartySubIDs {
        public static tag(): number { return 1120 }
        constructor() {} 
    }
    export class RootPartySubID {
        public static tag(): number { return 1121 }
        constructor() {} 
    }
    export class RootPartySubIDType {
        public static tag(): number { return 1122 }
        constructor() {} 
    }
    export class TradeHandlingInstr {
        public static tag(): number { return 1123 }
        public static TRADE_CONFIRMATION = "0"
        public static TWO_PARTY_REPORT = "1"
        public static ONE_PARTY_REPORT_FOR_MATCHING = "2"
        public static ONE_PARTY_REPORT_FOR_PASS_THROUGH = "3"
        public static AUTOMATED_FLOOR_ORDER_ROUTING = "4"
        public static TWO_PARTY_REPORT_FOR_CLAIM = "5"
        constructor() {} 
    }
    export class OrigTradeHandlingInstr {
        public static tag(): number { return 1124 }
        constructor() {} 
    }
    export class OrigTradeDate {
        public static tag(): number { return 1125 }
        constructor() {} 
    }
    export class OrigTradeID {
        public static tag(): number { return 1126 }
        constructor() {} 
    }
    export class OrigSecondaryTradeID {
        public static tag(): number { return 1127 }
        constructor() {} 
    }
    export class ApplVerID {
        public static tag(): number { return 1128 }
        public static FIX27 = "0"
        public static FIX30 = "1"
        public static FIX40 = "2"
        public static FIX41 = "3"
        public static FIX42 = "4"
        public static FIX43 = "5"
        public static FIX44 = "6"
        public static FIX50 = "7"
        public static FIX50SP1 = "8"
        public static FIX50SP2 = "9"
        constructor() {} 
    }
    export class CstmApplVerID {
        public static tag(): number { return 1129 }
        constructor() {} 
    }
    export class RefApplVerID {
        public static tag(): number { return 1130 }
        constructor() {} 
    }
    export class RefCstmApplVerID {
        public static tag(): number { return 1131 }
        constructor() {} 
    }
    export class TZTransactTime {
        public static tag(): number { return 1132 }
        constructor() {} 
    }
    export class ExDestinationIDSource {
        public static tag(): number { return 1133 }
        public static BIC = "B"
        public static GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = "C"
        public static PROPRIETARY = "D"
        public static ISO_COUNTRY_CODE = "E"
        public static MIC = "G"
        constructor() {} 
    }
    export class ReportedPxDiff {
        public static tag(): number { return 1134 }
        constructor() {} 
    }
    export class RptSys {
        public static tag(): number { return 1135 }
        constructor() {} 
    }
    export class AllocClearingFeeIndicator {
        public static tag(): number { return 1136 }
        constructor() {} 
    }
    export class DefaultApplVerID {
        public static tag(): number { return 1137 }
        constructor() {} 
    }
    export class DisplayQty {
        public static tag(): number { return 1138 }
        constructor() {} 
    }
    export class ExchangeSpecialInstructions {
        public static tag(): number { return 1139 }
        constructor() {} 
    }
    export class MaxTradeVol {
        public static tag(): number { return 1140 }
        constructor() {} 
    }
    export class NoMDFeedTypes {
        public static tag(): number { return 1141 }
        constructor() {} 
    }
    export class MatchAlgorithm {
        public static tag(): number { return 1142 }
        constructor() {} 
    }
    export class MaxPriceVariation {
        public static tag(): number { return 1143 }
        constructor() {} 
    }
    export class ImpliedMarketIndicator {
        public static tag(): number { return 1144 }
        public static NOT_IMPLIED = "0"
        public static IMPLIED_IN = "1"
        public static IMPLIED_OUT = "2"
        public static BOTH_IMPLIED_IN_AND_IMPLIED_OUT = "3"
        constructor() {} 
    }
    export class EventTime {
        public static tag(): number { return 1145 }
        constructor() {} 
    }
    export class MinPriceIncrementAmount {
        public static tag(): number { return 1146 }
        constructor() {} 
    }
    export class UnitOfMeasureQty {
        public static tag(): number { return 1147 }
        constructor() {} 
    }
    export class LowLimitPrice {
        public static tag(): number { return 1148 }
        constructor() {} 
    }
    export class HighLimitPrice {
        public static tag(): number { return 1149 }
        constructor() {} 
    }
    export class TradingReferencePrice {
        public static tag(): number { return 1150 }
        constructor() {} 
    }
    export class SecurityGroup {
        public static tag(): number { return 1151 }
        constructor() {} 
    }
    export class LegNumber {
        public static tag(): number { return 1152 }
        constructor() {} 
    }
    export class SettlementCycleNo {
        public static tag(): number { return 1153 }
        constructor() {} 
    }
    export class SideCurrency {
        public static tag(): number { return 1154 }
        constructor() {} 
    }
    export class SideSettlCurrency {
        public static tag(): number { return 1155 }
        constructor() {} 
    }
    export class ApplExtID {
        public static tag(): number { return 1156 }
        constructor() {} 
    }
    export class CcyAmt {
        public static tag(): number { return 1157 }
        constructor() {} 
    }
    export class NoSettlDetails {
        public static tag(): number { return 1158 }
        constructor() {} 
    }
    export class SettlObligMode {
        public static tag(): number { return 1159 }
        public static PRELIMINARY = "1"
        public static FINAL = "2"
        constructor() {} 
    }
    export class SettlObligMsgID {
        public static tag(): number { return 1160 }
        constructor() {} 
    }
    export class SettlObligID {
        public static tag(): number { return 1161 }
        constructor() {} 
    }
    export class SettlObligTransType {
        public static tag(): number { return 1162 }
        public static CANCEL = "C"
        public static NEW = "N"
        public static REPLACE = "R"
        public static RESTATE = "T"
        constructor() {} 
    }
    export class SettlObligRefID {
        public static tag(): number { return 1163 }
        constructor() {} 
    }
    export class SettlObligSource {
        public static tag(): number { return 1164 }
        public static INSTRUCTIONS_OF_BROKER = "1"
        public static INSTRUCTIONS_FOR_INSTITUTION = "2"
        public static INVESTOR = "3"
        constructor() {} 
    }
    export class NoSettlOblig {
        public static tag(): number { return 1165 }
        constructor() {} 
    }
    export class QuoteMsgID {
        public static tag(): number { return 1166 }
        constructor() {} 
    }
    export class QuoteEntryStatus {
        public static tag(): number { return 1167 }
        public static ACCEPTED = "0"
        public static REJECTED = "5"
        public static REMOVED_FROM_MARKET = "6"
        public static EXPIRED = "7"
        public static LOCKED_MARKET_WARNING = "12"
        public static CROSS_MARKET_WARNING = "13"
        public static CANCELED_DUE_TO_LOCK_MARKET = "14"
        public static CANCELED_DUE_TO_CROSS_MARKET = "15"
        public static ACTIVE = "16"
        constructor() {} 
    }
    export class TotNoCxldQuotes {
        public static tag(): number { return 1168 }
        constructor() {} 
    }
    export class TotNoAccQuotes {
        public static tag(): number { return 1169 }
        constructor() {} 
    }
    export class TotNoRejQuotes {
        public static tag(): number { return 1170 }
        constructor() {} 
    }
    export class PrivateQuote {
        public static tag(): number { return 1171 }
        constructor() {} 
    }
    export class RespondentType {
        public static tag(): number { return 1172 }
        public static ALL_MARKET_PARTICIPANTS = "1"
        public static SPECIFIED_MARKET_PARTICIPANTS = "2"
        public static ALL_MARKET_MAKERS = "3"
        public static PRIMARY_MARKET_MAKER = "4"
        constructor() {} 
    }
    export class MDSubBookType {
        public static tag(): number { return 1173 }
        constructor() {} 
    }
    export class SecurityTradingEvent {
        public static tag(): number { return 1174 }
        public static ORDER_IMBALANCE_AUCTION_IS_EXTENDED = "1"
        public static TRADING_RESUMES = "2"
        public static PRICE_VOLATILITY_INTERRUPTION = "3"
        public static CHANGE_OF_TRADING_SESSION = "4"
        public static CHANGE_OF_TRADING_SUBSESSION = "5"
        public static CHANGE_OF_SECURITY_TRADING_STATUS = "6"
        public static CHANGE_OF_BOOK_TYPE = "7"
        public static CHANGE_OF_MARKET_DEPTH = "8"
        constructor() {} 
    }
    export class NoStatsIndicators {
        public static tag(): number { return 1175 }
        constructor() {} 
    }
    export class StatsType {
        public static tag(): number { return 1176 }
        public static EXCHANGE_LAST = "1"
        public static HIGH = "2"
        public static AVERAGE_PRICE = "3"
        public static TURNOVER = "4"
        constructor() {} 
    }
    export class NoOfSecSizes {
        public static tag(): number { return 1177 }
        constructor() {} 
    }
    export class MDSecSizeType {
        public static tag(): number { return 1178 }
        public static CUSTOMER = "1"
        constructor() {} 
    }
    export class MDSecSize {
        public static tag(): number { return 1179 }
        constructor() {} 
    }
    export class ApplID {
        public static tag(): number { return 1180 }
        constructor() {} 
    }
    export class ApplSeqNum {
        public static tag(): number { return 1181 }
        constructor() {} 
    }
    export class ApplBegSeqNum {
        public static tag(): number { return 1182 }
        constructor() {} 
    }
    export class ApplEndSeqNum {
        public static tag(): number { return 1183 }
        constructor() {} 
    }
    export class SecurityXMLLen {
        public static tag(): number { return 1184 }
        constructor() {} 
    }
    export class SecurityXML {
        public static tag(): number { return 1185 }
        constructor() {} 
    }
    export class SecurityXMLSchema {
        public static tag(): number { return 1186 }
        constructor() {} 
    }
    export class RefreshIndicator {
        public static tag(): number { return 1187 }
        constructor() {} 
    }
    export class Volatility {
        public static tag(): number { return 1188 }
        constructor() {} 
    }
    export class TimeToExpiration {
        public static tag(): number { return 1189 }
        constructor() {} 
    }
    export class RiskFreeRate {
        public static tag(): number { return 1190 }
        constructor() {} 
    }
    export class PriceUnitOfMeasure {
        public static tag(): number { return 1191 }
        constructor() {} 
    }
    export class PriceUnitOfMeasureQty {
        public static tag(): number { return 1192 }
        constructor() {} 
    }
    export class SettlMethod {
        public static tag(): number { return 1193 }
        public static CASH_SETTLEMENT_REQUIRED = "C"
        public static PHYSICAL_SETTLEMENT_REQUIRED = "P"
        constructor() {} 
    }
    export class ExerciseStyle {
        public static tag(): number { return 1194 }
        public static EUROPEAN = "0"
        public static AMERICAN = "1"
        public static BERMUDA = "2"
        constructor() {} 
    }
    export class OptPayoutAmount {
        public static tag(): number { return 1195 }
        constructor() {} 
    }
    export class PriceQuoteMethod {
        public static tag(): number { return 1196 }
        public static STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL = "STD"
        public static INDEX = "INX"
        public static INTEREST_RATE_INDEX = "INT"
        public static PERCENT_OF_PAR = "PCTPAR"
        constructor() {} 
    }
    export class ValuationMethod {
        public static tag(): number { return 1197 }
        public static PREMIUM_STYLE = "EQTY"
        public static FUTURES_STYLE_MARK_TO_MARKET = "FUT"
        public static FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = "FUTDA"
        public static CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON = "CDS"
        public static CDS_IN_DELIVERY = "CDSD"
        constructor() {} 
    }
    export class ListMethod {
        public static tag(): number { return 1198 }
        public static PRE_LISTED_ONLY = "0"
        public static USER_REQUESTED = "1"
        constructor() {} 
    }
    export class CapPrice {
        public static tag(): number { return 1199 }
        constructor() {} 
    }
    export class FloorPrice {
        public static tag(): number { return 1200 }
        constructor() {} 
    }
    export class NoStrikeRules {
        public static tag(): number { return 1201 }
        constructor() {} 
    }
    export class StartStrikePxRange {
        public static tag(): number { return 1202 }
        constructor() {} 
    }
    export class EndStrikePxRange {
        public static tag(): number { return 1203 }
        constructor() {} 
    }
    export class StrikeIncrement {
        public static tag(): number { return 1204 }
        constructor() {} 
    }
    export class NoTickRules {
        public static tag(): number { return 1205 }
        constructor() {} 
    }
    export class StartTickPriceRange {
        public static tag(): number { return 1206 }
        constructor() {} 
    }
    export class EndTickPriceRange {
        public static tag(): number { return 1207 }
        constructor() {} 
    }
    export class TickIncrement {
        public static tag(): number { return 1208 }
        constructor() {} 
    }
    export class TickRuleType {
        public static tag(): number { return 1209 }
        public static REGULAR = "0"
        public static VARIABLE = "1"
        public static FIXED = "2"
        public static TRADED_AS_A_SPREAD_LEG = "3"
        public static SETTLED_AS_A_SPREAD_LEG = "4"
        constructor() {} 
    }
    export class NestedInstrAttribType {
        public static tag(): number { return 1210 }
        constructor() {} 
    }
    export class NestedInstrAttribValue {
        public static tag(): number { return 1211 }
        constructor() {} 
    }
    export class LegMaturityTime {
        public static tag(): number { return 1212 }
        constructor() {} 
    }
    export class UnderlyingMaturityTime {
        public static tag(): number { return 1213 }
        constructor() {} 
    }
    export class DerivativeSymbol {
        public static tag(): number { return 1214 }
        constructor() {} 
    }
    export class DerivativeSymbolSfx {
        public static tag(): number { return 1215 }
        constructor() {} 
    }
    export class DerivativeSecurityID {
        public static tag(): number { return 1216 }
        constructor() {} 
    }
    export class DerivativeSecurityIDSource {
        public static tag(): number { return 1217 }
        constructor() {} 
    }
    export class NoDerivativeSecurityAltID {
        public static tag(): number { return 1218 }
        constructor() {} 
    }
    export class DerivativeSecurityAltID {
        public static tag(): number { return 1219 }
        constructor() {} 
    }
    export class DerivativeSecurityAltIDSource {
        public static tag(): number { return 1220 }
        constructor() {} 
    }
    export class SecondaryLowLimitPrice {
        public static tag(): number { return 1221 }
        constructor() {} 
    }
    export class MaturityRuleID {
        public static tag(): number { return 1222 }
        constructor() {} 
    }
    export class StrikeRuleID {
        public static tag(): number { return 1223 }
        constructor() {} 
    }
    export class LegUnitOfMeasureQty {
        public static tag(): number { return 1224 }
        constructor() {} 
    }
    export class DerivativeOptPayAmount {
        public static tag(): number { return 1225 }
        constructor() {} 
    }
    export class EndMaturityMonthYear {
        public static tag(): number { return 1226 }
        constructor() {} 
    }
    export class ProductComplex {
        public static tag(): number { return 1227 }
        constructor() {} 
    }
    export class DerivativeProductComplex {
        public static tag(): number { return 1228 }
        constructor() {} 
    }
    export class MaturityMonthYearIncrement {
        public static tag(): number { return 1229 }
        constructor() {} 
    }
    export class SecondaryHighLimitPrice {
        public static tag(): number { return 1230 }
        constructor() {} 
    }
    export class MinLotSize {
        public static tag(): number { return 1231 }
        constructor() {} 
    }
    export class NoExecInstRules {
        public static tag(): number { return 1232 }
        constructor() {} 
    }
    export class NoLotTypeRules {
        public static tag(): number { return 1234 }
        constructor() {} 
    }
    export class NoMatchRules {
        public static tag(): number { return 1235 }
        constructor() {} 
    }
    export class NoMaturityRules {
        public static tag(): number { return 1236 }
        constructor() {} 
    }
    export class NoOrdTypeRules {
        public static tag(): number { return 1237 }
        constructor() {} 
    }
    export class NoTimeInForceRules {
        public static tag(): number { return 1239 }
        constructor() {} 
    }
    export class SecondaryTradingReferencePrice {
        public static tag(): number { return 1240 }
        constructor() {} 
    }
    export class StartMaturityMonthYear {
        public static tag(): number { return 1241 }
        constructor() {} 
    }
    export class FlexProductEligibilityIndicator {
        public static tag(): number { return 1242 }
        constructor() {} 
    }
    export class DerivFlexProductEligibilityIndicator {
        public static tag(): number { return 1243 }
        constructor() {} 
    }
    export class FlexibleIndicator {
        public static tag(): number { return 1244 }
        constructor() {} 
    }
    export class TradingCurrency {
        public static tag(): number { return 1245 }
        constructor() {} 
    }
    export class DerivativeProduct {
        public static tag(): number { return 1246 }
        constructor() {} 
    }
    export class DerivativeSecurityGroup {
        public static tag(): number { return 1247 }
        constructor() {} 
    }
    export class DerivativeCFICode {
        public static tag(): number { return 1248 }
        constructor() {} 
    }
    export class DerivativeSecurityType {
        public static tag(): number { return 1249 }
        constructor() {} 
    }
    export class DerivativeSecuritySubType {
        public static tag(): number { return 1250 }
        constructor() {} 
    }
    export class DerivativeMaturityMonthYear {
        public static tag(): number { return 1251 }
        constructor() {} 
    }
    export class DerivativeMaturityDate {
        public static tag(): number { return 1252 }
        constructor() {} 
    }
    export class DerivativeMaturityTime {
        public static tag(): number { return 1253 }
        constructor() {} 
    }
    export class DerivativeSettleOnOpenFlag {
        public static tag(): number { return 1254 }
        constructor() {} 
    }
    export class DerivativeInstrmtAssignmentMethod {
        public static tag(): number { return 1255 }
        constructor() {} 
    }
    export class DerivativeSecurityStatus {
        public static tag(): number { return 1256 }
        constructor() {} 
    }
    export class DerivativeInstrRegistry {
        public static tag(): number { return 1257 }
        constructor() {} 
    }
    export class DerivativeCountryOfIssue {
        public static tag(): number { return 1258 }
        constructor() {} 
    }
    export class DerivativeStateOrProvinceOfIssue {
        public static tag(): number { return 1259 }
        constructor() {} 
    }
    export class DerivativeLocaleOfIssue {
        public static tag(): number { return 1260 }
        constructor() {} 
    }
    export class DerivativeStrikePrice {
        public static tag(): number { return 1261 }
        constructor() {} 
    }
    export class DerivativeStrikeCurrency {
        public static tag(): number { return 1262 }
        constructor() {} 
    }
    export class DerivativeStrikeMultiplier {
        public static tag(): number { return 1263 }
        constructor() {} 
    }
    export class DerivativeStrikeValue {
        public static tag(): number { return 1264 }
        constructor() {} 
    }
    export class DerivativeOptAttribute {
        public static tag(): number { return 1265 }
        constructor() {} 
    }
    export class DerivativeContractMultiplier {
        public static tag(): number { return 1266 }
        constructor() {} 
    }
    export class DerivativeMinPriceIncrement {
        public static tag(): number { return 1267 }
        constructor() {} 
    }
    export class DerivativeMinPriceIncrementAmount {
        public static tag(): number { return 1268 }
        constructor() {} 
    }
    export class DerivativeUnitOfMeasure {
        public static tag(): number { return 1269 }
        constructor() {} 
    }
    export class DerivativeUnitOfMeasureQty {
        public static tag(): number { return 1270 }
        constructor() {} 
    }
    export class DerivativeTimeUnit {
        public static tag(): number { return 1271 }
        constructor() {} 
    }
    export class DerivativeSecurityExchange {
        public static tag(): number { return 1272 }
        constructor() {} 
    }
    export class DerivativePositionLimit {
        public static tag(): number { return 1273 }
        constructor() {} 
    }
    export class DerivativeNTPositionLimit {
        public static tag(): number { return 1274 }
        constructor() {} 
    }
    export class DerivativeIssuer {
        public static tag(): number { return 1275 }
        constructor() {} 
    }
    export class DerivativeIssueDate {
        public static tag(): number { return 1276 }
        constructor() {} 
    }
    export class DerivativeEncodedIssuerLen {
        public static tag(): number { return 1277 }
        constructor() {} 
    }
    export class DerivativeEncodedIssuer {
        public static tag(): number { return 1278 }
        constructor() {} 
    }
    export class DerivativeSecurityDesc {
        public static tag(): number { return 1279 }
        constructor() {} 
    }
    export class DerivativeEncodedSecurityDescLen {
        public static tag(): number { return 1280 }
        constructor() {} 
    }
    export class DerivativeEncodedSecurityDesc {
        public static tag(): number { return 1281 }
        constructor() {} 
    }
    export class DerivativeSecurityXMLLen {
        public static tag(): number { return 1282 }
        constructor() {} 
    }
    export class DerivativeSecurityXML {
        public static tag(): number { return 1283 }
        constructor() {} 
    }
    export class DerivativeSecurityXMLSchema {
        public static tag(): number { return 1284 }
        constructor() {} 
    }
    export class DerivativeContractSettlMonth {
        public static tag(): number { return 1285 }
        constructor() {} 
    }
    export class NoDerivativeEvents {
        public static tag(): number { return 1286 }
        constructor() {} 
    }
    export class DerivativeEventType {
        public static tag(): number { return 1287 }
        constructor() {} 
    }
    export class DerivativeEventDate {
        public static tag(): number { return 1288 }
        constructor() {} 
    }
    export class DerivativeEventTime {
        public static tag(): number { return 1289 }
        constructor() {} 
    }
    export class DerivativeEventPx {
        public static tag(): number { return 1290 }
        constructor() {} 
    }
    export class DerivativeEventText {
        public static tag(): number { return 1291 }
        constructor() {} 
    }
    export class NoDerivativeInstrumentParties {
        public static tag(): number { return 1292 }
        constructor() {} 
    }
    export class DerivativeInstrumentPartyID {
        public static tag(): number { return 1293 }
        constructor() {} 
    }
    export class DerivativeInstrumentPartyIDSource {
        public static tag(): number { return 1294 }
        constructor() {} 
    }
    export class DerivativeInstrumentPartyRole {
        public static tag(): number { return 1295 }
        constructor() {} 
    }
    export class NoDerivativeInstrumentPartySubIDs {
        public static tag(): number { return 1296 }
        constructor() {} 
    }
    export class DerivativeInstrumentPartySubID {
        public static tag(): number { return 1297 }
        constructor() {} 
    }
    export class DerivativeInstrumentPartySubIDType {
        public static tag(): number { return 1298 }
        constructor() {} 
    }
    export class DerivativeExerciseStyle {
        public static tag(): number { return 1299 }
        constructor() {} 
    }
    export class MarketSegmentID {
        public static tag(): number { return 1300 }
        constructor() {} 
    }
    export class MarketID {
        public static tag(): number { return 1301 }
        constructor() {} 
    }
    export class MaturityMonthYearIncrementUnits {
        public static tag(): number { return 1302 }
        public static MONTHS = "0"
        public static DAYS = "1"
        public static WEEKS = "2"
        public static YEARS = "3"
        constructor() {} 
    }
    export class MaturityMonthYearFormat {
        public static tag(): number { return 1303 }
        public static YEARMONTH_ONLY = "0"
        public static YEARMONTHDAY = "1"
        public static YEARMONTHWEEK = "2"
        constructor() {} 
    }
    export class StrikeExerciseStyle {
        public static tag(): number { return 1304 }
        constructor() {} 
    }
    export class SecondaryPriceLimitType {
        public static tag(): number { return 1305 }
        constructor() {} 
    }
    export class PriceLimitType {
        public static tag(): number { return 1306 }
        public static PRICE = "0"
        public static TICKS = "1"
        public static PERCENTAGE = "2"
        constructor() {} 
    }
    export class ExecInstValue {
        public static tag(): number { return 1308 }
        constructor() {} 
    }
    export class NoTradingSessionRules {
        public static tag(): number { return 1309 }
        constructor() {} 
    }
    export class NoMarketSegments {
        public static tag(): number { return 1310 }
        constructor() {} 
    }
    export class NoDerivativeInstrAttrib {
        public static tag(): number { return 1311 }
        constructor() {} 
    }
    export class NoNestedInstrAttrib {
        public static tag(): number { return 1312 }
        constructor() {} 
    }
    export class DerivativeInstrAttribType {
        public static tag(): number { return 1313 }
        constructor() {} 
    }
    export class DerivativeInstrAttribValue {
        public static tag(): number { return 1314 }
        constructor() {} 
    }
    export class DerivativePriceUnitOfMeasure {
        public static tag(): number { return 1315 }
        constructor() {} 
    }
    export class DerivativePriceUnitOfMeasureQty {
        public static tag(): number { return 1316 }
        constructor() {} 
    }
    export class DerivativeSettlMethod {
        public static tag(): number { return 1317 }
        constructor() {} 
    }
    export class DerivativePriceQuoteMethod {
        public static tag(): number { return 1318 }
        constructor() {} 
    }
    export class DerivativeValuationMethod {
        public static tag(): number { return 1319 }
        constructor() {} 
    }
    export class DerivativeListMethod {
        public static tag(): number { return 1320 }
        constructor() {} 
    }
    export class DerivativeCapPrice {
        public static tag(): number { return 1321 }
        constructor() {} 
    }
    export class DerivativeFloorPrice {
        public static tag(): number { return 1322 }
        constructor() {} 
    }
    export class DerivativePutOrCall {
        public static tag(): number { return 1323 }
        constructor() {} 
    }
    export class ListUpdateAction {
        public static tag(): number { return 1324 }
        constructor() {} 
    }
    export class ParentMktSegmID {
        public static tag(): number { return 1325 }
        constructor() {} 
    }
    export class TradingSessionDesc {
        public static tag(): number { return 1326 }
        constructor() {} 
    }
    export class TradSesUpdateAction {
        public static tag(): number { return 1327 }
        constructor() {} 
    }
    export class RejectText {
        public static tag(): number { return 1328 }
        constructor() {} 
    }
    export class FeeMultiplier {
        public static tag(): number { return 1329 }
        constructor() {} 
    }
    export class UnderlyingLegSymbol {
        public static tag(): number { return 1330 }
        constructor() {} 
    }
    export class UnderlyingLegSymbolSfx {
        public static tag(): number { return 1331 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityID {
        public static tag(): number { return 1332 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityIDSource {
        public static tag(): number { return 1333 }
        constructor() {} 
    }
    export class NoUnderlyingLegSecurityAltID {
        public static tag(): number { return 1334 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityAltID {
        public static tag(): number { return 1335 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityAltIDSource {
        public static tag(): number { return 1336 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityType {
        public static tag(): number { return 1337 }
        constructor() {} 
    }
    export class UnderlyingLegSecuritySubType {
        public static tag(): number { return 1338 }
        constructor() {} 
    }
    export class UnderlyingLegMaturityMonthYear {
        public static tag(): number { return 1339 }
        constructor() {} 
    }
    export class UnderlyingLegStrikePrice {
        public static tag(): number { return 1340 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityExchange {
        public static tag(): number { return 1341 }
        constructor() {} 
    }
    export class NoOfLegUnderlyings {
        public static tag(): number { return 1342 }
        constructor() {} 
    }
    export class UnderlyingLegPutOrCall {
        public static tag(): number { return 1343 }
        constructor() {} 
    }
    export class UnderlyingLegCFICode {
        public static tag(): number { return 1344 }
        constructor() {} 
    }
    export class UnderlyingLegMaturityDate {
        public static tag(): number { return 1345 }
        constructor() {} 
    }
    export class ApplReqID {
        public static tag(): number { return 1346 }
        constructor() {} 
    }
    export class ApplReqType {
        public static tag(): number { return 1347 }
        public static RETRANSMISSION_OF_APPLICATION_MESSAGES_FOR_THE_SPECIFIED_APPLICATIONS = "0"
        public static SUBSCRIPTION_TO_THE_SPECIFIED_APPLICATIONS = "1"
        public static REQUEST_FOR_THE_LAST_APPLLASTSEQNUM_PUBLISHED_FOR_THE_SPECIFIED_APPLICATIONS = "2"
        public static REQUEST_VALID_SET_OF_APPLICATIONS = "3"
        public static UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS = "4"
        public static CANCEL_RETRANSMISSION = "5"
        public static CANCEL_RETRANSMISSION_AND_UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS = "6"
        constructor() {} 
    }
    export class ApplResponseType {
        public static tag(): number { return 1348 }
        public static REQUEST_SUCCESSFULLY_PROCESSED = "0"
        public static APPLICATION_DOES_NOT_EXIST = "1"
        public static MESSAGES_NOT_AVAILABLE = "2"
        constructor() {} 
    }
    export class ApplTotalMessageCount {
        public static tag(): number { return 1349 }
        constructor() {} 
    }
    export class ApplLastSeqNum {
        public static tag(): number { return 1350 }
        constructor() {} 
    }
    export class NoApplIDs {
        public static tag(): number { return 1351 }
        constructor() {} 
    }
    export class ApplResendFlag {
        public static tag(): number { return 1352 }
        constructor() {} 
    }
    export class ApplResponseID {
        public static tag(): number { return 1353 }
        constructor() {} 
    }
    export class ApplResponseError {
        public static tag(): number { return 1354 }
        public static APPLICATION_DOES_NOT_EXIST = "0"
        public static MESSAGES_REQUESTED_ARE_NOT_AVAILABLE = "1"
        public static USER_NOT_AUTHORIZED_FOR_APPLICATION = "2"
        constructor() {} 
    }
    export class RefApplID {
        public static tag(): number { return 1355 }
        constructor() {} 
    }
    export class ApplReportID {
        public static tag(): number { return 1356 }
        constructor() {} 
    }
    export class RefApplLastSeqNum {
        public static tag(): number { return 1357 }
        constructor() {} 
    }
    export class LegPutOrCall {
        public static tag(): number { return 1358 }
        constructor() {} 
    }
    export class TotNoFills {
        public static tag(): number { return 1361 }
        constructor() {} 
    }
    export class NoFills {
        public static tag(): number { return 1362 }
        constructor() {} 
    }
    export class FillExecID {
        public static tag(): number { return 1363 }
        constructor() {} 
    }
    export class FillPx {
        public static tag(): number { return 1364 }
        constructor() {} 
    }
    export class FillQty {
        public static tag(): number { return 1365 }
        constructor() {} 
    }
    export class LegAllocID {
        public static tag(): number { return 1366 }
        constructor() {} 
    }
    export class LegAllocSettlCurrency {
        public static tag(): number { return 1367 }
        constructor() {} 
    }
    export class TradSesEvent {
        public static tag(): number { return 1368 }
        public static TRADING_RESUMES = "0"
        public static CHANGE_OF_TRADING_SESSION = "1"
        public static CHANGE_OF_TRADING_SUBSESSION = "2"
        public static CHANGE_OF_TRADING_STATUS = "3"
        constructor() {} 
    }
    export class MassActionReportID {
        public static tag(): number { return 1369 }
        constructor() {} 
    }
    export class NoNotAffectedOrders {
        public static tag(): number { return 1370 }
        constructor() {} 
    }
    export class NotAffectedOrderID {
        public static tag(): number { return 1371 }
        constructor() {} 
    }
    export class NotAffOrigClOrdID {
        public static tag(): number { return 1372 }
        constructor() {} 
    }
    export class MassActionType {
        public static tag(): number { return 1373 }
        public static SUSPEND_ORDERS = "1"
        public static RELEASE_ORDERS_FROM_SUSPENSION = "2"
        public static CANCEL_ORDERS = "3"
        constructor() {} 
    }
    export class MassActionScope {
        public static tag(): number { return 1374 }
        public static ALL_ORDERS_FOR_A_SECURITY = "1"
        public static ALL_ORDERS_FOR_AN_UNDERLYING_SECURITY = "2"
        public static ALL_ORDERS_FOR_A_PRODUCT = "3"
        public static ALL_ORDERS_FOR_A_CFICODE = "4"
        public static ALL_ORDERS_FOR_A_SECURITYTYPE = "5"
        public static ALL_ORDERS_FOR_A_TRADING_SESSION = "6"
        public static ALL_ORDERS = "7"
        public static ALL_ORDERS_FOR_A_MARKET = "8"
        public static ALL_ORDERS_FOR_A_MARKET_SEGMENT = "9"
        public static ALL_ORDERS_FOR_A_SECURITY_GROUP = "10"
        public static CANCEL_FOR_SECURITY_ISSUER = "11"
        public static CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY = "12"
        constructor() {} 
    }
    export class MassActionResponse {
        public static tag(): number { return 1375 }
        public static REJECTED = "0"
        public static ACCEPTED = "1"
        constructor() {} 
    }
    export class MassActionRejectReason {
        public static tag(): number { return 1376 }
        public static MASS_ACTION_NOT_SUPPORTED = "0"
        public static INVALID_OR_UNKNOWN_SECURITY = "1"
        public static INVALID_OR_UNKNOWN_UNDERLYING_SECURITY = "2"
        public static INVALID_OR_UNKNOWN_PRODUCT = "3"
        public static INVALID_OR_UNKNOWN_CFICODE = "4"
        public static INVALID_OR_UNKNOWN_SECURITYTYPE = "5"
        public static INVALID_OR_UNKNOWN_TRADING_SESSION = "6"
        public static INVALID_OR_UNKNOWN_MARKET = "7"
        public static INVALID_OR_UNKNOWN_MARKET_SEGMENT = "8"
        public static INVALID_OR_UNKNOWN_SECURITY_GROUP = "9"
        public static OTHER = "99"
        public static INVALID_OR_UNKNOWN_SECURITY_ISSUER = "10"
        public static INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = "11"
        constructor() {} 
    }
    export class MultilegModel {
        public static tag(): number { return 1377 }
        public static PREDEFINED_MULTILEG_SECURITY = "0"
        public static USER_DEFINED_MULTLEG_SECURITY = "1"
        public static USER_DEFINED_NON_SECURITIZED_MULTILEG = "2"
        constructor() {} 
    }
    export class MultilegPriceMethod {
        public static tag(): number { return 1378 }
        public static NET_PRICE = "0"
        public static REVERSED_NET_PRICE = "1"
        public static YIELD_DIFFERENCE = "2"
        public static INDIVIDUAL = "3"
        public static CONTRACT_WEIGHTED_AVERAGE_PRICE = "4"
        public static MULTIPLIED_PRICE = "5"
        constructor() {} 
    }
    export class LegVolatility {
        public static tag(): number { return 1379 }
        constructor() {} 
    }
    export class DividendYield {
        public static tag(): number { return 1380 }
        constructor() {} 
    }
    export class LegDividendYield {
        public static tag(): number { return 1381 }
        constructor() {} 
    }
    export class CurrencyRatio {
        public static tag(): number { return 1382 }
        constructor() {} 
    }
    export class LegCurrencyRatio {
        public static tag(): number { return 1383 }
        constructor() {} 
    }
    export class LegExecInst {
        public static tag(): number { return 1384 }
        constructor() {} 
    }
    export class ContingencyType {
        public static tag(): number { return 1385 }
        public static ONE_CANCELS_THE_OTHER = "1"
        public static ONE_TRIGGERS_THE_OTHER = "2"
        public static ONE_UPDATES_THE_OTHER_3 = "3"
        public static ONE_UPDATES_THE_OTHER_4 = "4"
        constructor() {} 
    }
    export class ListRejectReason {
        public static tag(): number { return 1386 }
        public static BROKER = "0"
        public static EXCHANGE_CLOSED = "2"
        public static TOO_LATE_TO_ENTER = "4"
        public static UNKNOWN_ORDER = "5"
        public static DUPLICATE_ORDER = "6"
        public static UNSUPPORTED_ORDER_CHARACTERISTIC = "11"
        public static OTHER = "99"
        constructor() {} 
    }
    export class NoTrdRepIndicators {
        public static tag(): number { return 1387 }
        constructor() {} 
    }
    export class TrdRepPartyRole {
        public static tag(): number { return 1388 }
        constructor() {} 
    }
    export class TrdRepIndicator {
        public static tag(): number { return 1389 }
        constructor() {} 
    }
    export class TradePublishIndicator {
        public static tag(): number { return 1390 }
        public static DO_NOT_PUBLISH_TRADE = "0"
        public static PUBLISH_TRADE = "1"
        public static DEFERRED_PUBLICATION = "2"
        constructor() {} 
    }
    export class UnderlyingLegOptAttribute {
        public static tag(): number { return 1391 }
        constructor() {} 
    }
    export class UnderlyingLegSecurityDesc {
        public static tag(): number { return 1392 }
        constructor() {} 
    }
    export class MarketReqID {
        public static tag(): number { return 1393 }
        constructor() {} 
    }
    export class MarketReportID {
        public static tag(): number { return 1394 }
        constructor() {} 
    }
    export class MarketUpdateAction {
        public static tag(): number { return 1395 }
        public static ADD = "A"
        public static DELETE = "D"
        public static MODIFY = "M"
        constructor() {} 
    }
    export class MarketSegmentDesc {
        public static tag(): number { return 1396 }
        constructor() {} 
    }
    export class EncodedMktSegmDescLen {
        public static tag(): number { return 1397 }
        constructor() {} 
    }
    export class EncodedMktSegmDesc {
        public static tag(): number { return 1398 }
        constructor() {} 
    }
    export class ApplNewSeqNum {
        public static tag(): number { return 1399 }
        constructor() {} 
    }
    export class EncryptedPasswordMethod {
        public static tag(): number { return 1400 }
        constructor() {} 
    }
    export class EncryptedPasswordLen {
        public static tag(): number { return 1401 }
        constructor() {} 
    }
    export class EncryptedPassword {
        public static tag(): number { return 1402 }
        constructor() {} 
    }
    export class EncryptedNewPasswordLen {
        public static tag(): number { return 1403 }
        constructor() {} 
    }
    export class EncryptedNewPassword {
        public static tag(): number { return 1404 }
        constructor() {} 
    }
    export class UnderlyingLegMaturityTime {
        public static tag(): number { return 1405 }
        constructor() {} 
    }
    export class RefApplExtID {
        public static tag(): number { return 1406 }
        constructor() {} 
    }
    export class DefaultApplExtID {
        public static tag(): number { return 1407 }
        constructor() {} 
    }
    export class DefaultCstmApplVerID {
        public static tag(): number { return 1408 }
        constructor() {} 
    }
    export class SessionStatus {
        public static tag(): number { return 1409 }
        public static SESSION_ACTIVE = "0"
        public static SESSION_PASSWORD_CHANGED = "1"
        public static SESSION_PASSWORD_DUE_TO_EXPIRE = "2"
        public static NEW_SESSION_PASSWORD_DOES_NOT_COMPLY_WITH_POLICY = "3"
        public static SESSION_LOGOUT_COMPLETE = "4"
        public static INVALID_USERNAME_OR_PASSWORD = "5"
        public static ACCOUNT_LOCKED = "6"
        public static LOGONS_ARE_NOT_ALLOWED_AT_THIS_TIME = "7"
        public static PASSWORD_EXPIRED = "8"
        constructor() {} 
    }
    export class DefaultVerIndicator {
        public static tag(): number { return 1410 }
        constructor() {} 
    }
    export class Nested4PartySubIDType {
        public static tag(): number { return 1411 }
        constructor() {} 
    }
    export class Nested4PartySubID {
        public static tag(): number { return 1412 }
        constructor() {} 
    }
    export class NoNested4PartySubIDs {
        public static tag(): number { return 1413 }
        constructor() {} 
    }
    export class NoNested4PartyIDs {
        public static tag(): number { return 1414 }
        constructor() {} 
    }
    export class Nested4PartyID {
        public static tag(): number { return 1415 }
        constructor() {} 
    }
    export class Nested4PartyIDSource {
        public static tag(): number { return 1416 }
        constructor() {} 
    }
    export class Nested4PartyRole {
        public static tag(): number { return 1417 }
        constructor() {} 
    }
    export class LegLastQty {
        public static tag(): number { return 1418 }
        constructor() {} 
    }
    export class UnderlyingExerciseStyle {
        public static tag(): number { return 1419 }
        constructor() {} 
    }
    export class LegExerciseStyle {
        public static tag(): number { return 1420 }
        constructor() {} 
    }
    export class LegPriceUnitOfMeasure {
        public static tag(): number { return 1421 }
        constructor() {} 
    }
    export class LegPriceUnitOfMeasureQty {
        public static tag(): number { return 1422 }
        constructor() {} 
    }
    export class UnderlyingUnitOfMeasureQty {
        public static tag(): number { return 1423 }
        constructor() {} 
    }
    export class UnderlyingPriceUnitOfMeasure {
        public static tag(): number { return 1424 }
        constructor() {} 
    }
    export class UnderlyingPriceUnitOfMeasureQty {
        public static tag(): number { return 1425 }
        constructor() {} 
    }
    export class ApplReportType {
        public static tag(): number { return 1426 }
        public static RESET_APPLSEQNUM_TO_NEW_VALUE_SPECIFIED_IN_APPLNEWSEQNUM = "0"
        public static REPORTS_THAT_THE_LAST_MESSAGE_HAS_BEEN_SENT_FOR_THE_APPLIDS_REFER_TO_REFAPPLLASTSEQNUM = "1"
        public static HEARTBEAT_MESSAGE_INDICATING_THAT_APPLICATION_IDENTIFIED_BY_REFAPPLID = "2"
        public static APPLICATION_MESSAGE_RE_SEND_COMPLETED = "3"
        constructor() {} 
    }
    export class SideExecID {
        public static tag(): number { return 1427 }
        constructor() {} 
    }
    export class OrderDelay {
        public static tag(): number { return 1428 }
        constructor() {} 
    }
    export class OrderDelayUnit {
        public static tag(): number { return 1429 }
        public static SECONDS = "0"
        public static TENTHS_OF_A_SECOND = "1"
        public static HUNDREDTHS_OF_A_SECOND = "2"
        public static MILLISECONDS = "3"
        public static MICROSECONDS = "4"
        public static NANOSECONDS = "5"
        public static MINUTES = "10"
        public static HOURS = "11"
        public static DAYS = "12"
        public static WEEKS = "13"
        public static MONTHS = "14"
        public static YEARS = "15"
        constructor() {} 
    }
    export class VenueType {
        public static tag(): number { return 1430 }
        public static ELECTRONIC = "E"
        public static PIT = "P"
        public static EX_PIT = "X"
        constructor() {} 
    }
    export class RefOrdIDReason {
        public static tag(): number { return 1431 }
        public static GTC_FROM_PREVIOUS_DAY = "0"
        public static PARTIAL_FILL_REMAINING = "1"
        public static ORDER_CHANGED = "2"
        constructor() {} 
    }
    export class OrigCustOrderCapacity {
        public static tag(): number { return 1432 }
        public static MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNT = "1"
        public static CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNT = "2"
        public static MEMBER_TRADING_FOR_ANOTHER_MEMBER = "3"
        public static ALL_OTHER = "4"
        constructor() {} 
    }
    export class RefApplReqID {
        public static tag(): number { return 1433 }
        constructor() {} 
    }
    export class ModelType {
        public static tag(): number { return 1434 }
        public static UTILITY_PROVIDED_STANDARD_MODEL = "0"
        public static PROPRIETARY = "1"
        constructor() {} 
    }
    export class ContractMultiplierUnit {
        public static tag(): number { return 1435 }
        public static SHARES = "0"
        public static HOURS = "1"
        public static DAYS = "2"
        constructor() {} 
    }
    export class LegContractMultiplierUnit {
        public static tag(): number { return 1436 }
        constructor() {} 
    }
    export class UnderlyingContractMultiplierUnit {
        public static tag(): number { return 1437 }
        constructor() {} 
    }
    export class DerivativeContractMultiplierUnit {
        public static tag(): number { return 1438 }
        constructor() {} 
    }
    export class FlowScheduleType {
        public static tag(): number { return 1439 }
        public static NERC_EASTERN_OFF_PEAK = "0"
        public static NERC_WESTERN_OFF_PEAK = "1"
        public static NERC_CALENDAR_ALL_DAYS_IN_MONTH = "2"
        public static NERC_EASTERN_PEAK = "3"
        public static NERC_WESTERN_PEAK = "4"
        constructor() {} 
    }
    export class LegFlowScheduleType {
        public static tag(): number { return 1440 }
        constructor() {} 
    }
    export class UnderlyingFlowScheduleType {
        public static tag(): number { return 1441 }
        constructor() {} 
    }
    export class DerivativeFlowScheduleType {
        public static tag(): number { return 1442 }
        constructor() {} 
    }
    export class FillLiquidityInd {
        public static tag(): number { return 1443 }
        constructor() {} 
    }
    export class SideLiquidityInd {
        public static tag(): number { return 1444 }
        constructor() {} 
    }
    export class NoRateSources {
        public static tag(): number { return 1445 }
        constructor() {} 
    }
    export class RateSource {
        public static tag(): number { return 1446 }
        public static BLOOMBERG = "0"
        public static REUTERS = "1"
        public static TELERATE = "2"
        public static OTHER = "99"
        constructor() {} 
    }
    export class RateSourceType {
        public static tag(): number { return 1447 }
        public static PRIMARY = "0"
        public static SECONDARY = "1"
        constructor() {} 
    }
    export class ReferencePage {
        public static tag(): number { return 1448 }
        constructor() {} 
    }
    export class RestructuringType {
        public static tag(): number { return 1449 }
        public static FULL_RESTRUCTURING = "FR"
        public static MODIFIED_RESTRUCTURING = "MR"
        public static MODIFIED_MOD_RESTRUCTURING = "MM"
        public static NO_RESTRUCTURING_SPECIFIED = "XR"
        constructor() {} 
    }
    export class Seniority {
        public static tag(): number { return 1450 }
        public static SENIOR_SECURED = "SD"
        public static SENIOR = "SR"
        public static SUBORDINATED = "SB"
        constructor() {} 
    }
    export class NotionalPercentageOutstanding {
        public static tag(): number { return 1451 }
        constructor() {} 
    }
    export class OriginalNotionalPercentageOutstanding {
        public static tag(): number { return 1452 }
        constructor() {} 
    }
    export class UnderlyingRestructuringType {
        public static tag(): number { return 1453 }
        constructor() {} 
    }
    export class UnderlyingSeniority {
        public static tag(): number { return 1454 }
        constructor() {} 
    }
    export class UnderlyingNotionalPercentageOutstanding {
        public static tag(): number { return 1455 }
        constructor() {} 
    }
    export class UnderlyingOriginalNotionalPercentageOutstanding {
        public static tag(): number { return 1456 }
        constructor() {} 
    }
    export class AttachmentPoint {
        public static tag(): number { return 1457 }
        constructor() {} 
    }
    export class DetachmentPoint {
        public static tag(): number { return 1458 }
        constructor() {} 
    }
    export class UnderlyingAttachmentPoint {
        public static tag(): number { return 1459 }
        constructor() {} 
    }
    export class UnderlyingDetachmentPoint {
        public static tag(): number { return 1460 }
        constructor() {} 
    }
    export class NoTargetPartyIDs {
        public static tag(): number { return 1461 }
        constructor() {} 
    }
    export class TargetPartyID {
        public static tag(): number { return 1462 }
        constructor() {} 
    }
    export class TargetPartyIDSource {
        public static tag(): number { return 1463 }
        constructor() {} 
    }
    export class TargetPartyRole {
        public static tag(): number { return 1464 }
        constructor() {} 
    }
    export class SecurityListID {
        public static tag(): number { return 1465 }
        constructor() {} 
    }
    export class SecurityListRefID {
        public static tag(): number { return 1466 }
        constructor() {} 
    }
    export class SecurityListDesc {
        public static tag(): number { return 1467 }
        constructor() {} 
    }
    export class EncodedSecurityListDescLen {
        public static tag(): number { return 1468 }
        constructor() {} 
    }
    export class EncodedSecurityListDesc {
        public static tag(): number { return 1469 }
        constructor() {} 
    }
    export class SecurityListType {
        public static tag(): number { return 1470 }
        public static INDUSTRY_CLASSIFICATION = "1"
        public static TRADING_LIST = "2"
        public static MARKET = "3"
        public static NEWSPAPER_LIST = "4"
        constructor() {} 
    }
    export class SecurityListTypeSource {
        public static tag(): number { return 1471 }
        public static ICB = "1"
        public static NAICS = "2"
        public static GICS = "3"
        constructor() {} 
    }
    export class NewsID {
        public static tag(): number { return 1472 }
        constructor() {} 
    }
    export class NewsCategory {
        public static tag(): number { return 1473 }
        public static COMPANY_NEWS = "0"
        public static MARKETPLACE_NEWS = "1"
        public static FINANCIAL_MARKET_NEWS = "2"
        public static TECHNICAL_NEWS = "3"
        public static OTHER_NEWS = "99"
        constructor() {} 
    }
    export class LanguageCode {
        public static tag(): number { return 1474 }
        constructor() {} 
    }
    export class NoNewsRefIDs {
        public static tag(): number { return 1475 }
        constructor() {} 
    }
    export class NewsRefID {
        public static tag(): number { return 1476 }
        constructor() {} 
    }
    export class NewsRefType {
        public static tag(): number { return 1477 }
        public static REPLACEMENT = "0"
        public static OTHER_LANGUAGE = "1"
        public static COMPLIMENTARY = "2"
        constructor() {} 
    }
    export class StrikePriceDeterminationMethod {
        public static tag(): number { return 1478 }
        public static FIXED_STRIKE = "1"
        public static STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUE = "2"
        public static STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTION = "3"
        public static STRIKE_SET_TO_OPTIMAL_VALUE = "4"
        constructor() {} 
    }
    export class StrikePriceBoundaryMethod {
        public static tag(): number { return 1479 }
        public static LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEY = "1"
        public static LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = "2"
        public static EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = "3"
        public static GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEY = "4"
        public static GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY = "5"
        constructor() {} 
    }
    export class StrikePriceBoundaryPrecision {
        public static tag(): number { return 1480 }
        constructor() {} 
    }
    export class UnderlyingPriceDeterminationMethod {
        public static tag(): number { return 1481 }
        public static REGULAR = "1"
        public static SPECIAL_REFERENCE = "2"
        public static OPTIMAL_VALUE = "3"
        public static AVERAGE_VALUE = "4"
        constructor() {} 
    }
    export class OptPayoutType {
        public static tag(): number { return 1482 }
        public static VANILLA = "1"
        public static CAPPED = "2"
        public static BINARY = "3"
        constructor() {} 
    }
    export class NoComplexEvents {
        public static tag(): number { return 1483 }
        constructor() {} 
    }
    export class ComplexEventType {
        public static tag(): number { return 1484 }
        public static CAPPED = "1"
        public static TRIGGER = "2"
        public static KNOCK_IN_UP = "3"
        public static KOCK_IN_DOWN = "4"
        public static KNOCK_OUT_UP = "5"
        public static KNOCK_OUT_DOWN = "6"
        public static UNDERLYING = "7"
        public static RESET_BARRIER = "8"
        public static ROLLING_BARRIER = "9"
        constructor() {} 
    }
    export class ComplexOptPayoutAmount {
        public static tag(): number { return 1485 }
        constructor() {} 
    }
    export class ComplexEventPrice {
        public static tag(): number { return 1486 }
        constructor() {} 
    }
    export class ComplexEventPriceBoundaryMethod {
        public static tag(): number { return 1487 }
        public static LESS_THAN_COMPLEXEVENTPRICE = "1"
        public static LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = "2"
        public static EQUAL_TO_COMPLEXEVENTPRICE = "3"
        public static GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = "4"
        public static GREATER_THAN_COMPLEXEVENTPRICE = "5"
        constructor() {} 
    }
    export class ComplexEventPriceBoundaryPrecision {
        public static tag(): number { return 1488 }
        constructor() {} 
    }
    export class ComplexEventPriceTimeType {
        public static tag(): number { return 1489 }
        public static EXPIRATION = "1"
        public static IMMEDIATE = "2"
        public static SPECIFIED_DATE_TIME = "3"
        constructor() {} 
    }
    export class ComplexEventCondition {
        public static tag(): number { return 1490 }
        public static AND = "1"
        public static OR = "2"
        constructor() {} 
    }
    export class NoComplexEventDates {
        public static tag(): number { return 1491 }
        constructor() {} 
    }
    export class ComplexEventStartDate {
        public static tag(): number { return 1492 }
        constructor() {} 
    }
    export class ComplexEventEndDate {
        public static tag(): number { return 1493 }
        constructor() {} 
    }
    export class NoComplexEventTimes {
        public static tag(): number { return 1494 }
        constructor() {} 
    }
    export class ComplexEventStartTime {
        public static tag(): number { return 1495 }
        constructor() {} 
    }
    export class ComplexEventEndTime {
        public static tag(): number { return 1496 }
        constructor() {} 
    }
    export class StreamAsgnReqID {
        public static tag(): number { return 1497 }
        constructor() {} 
    }
    export class StreamAsgnReqType {
        public static tag(): number { return 1498 }
        public static STREAM_ASSIGNMENT_FOR_NEW_CUSTOMER = "1"
        public static STREAM_ASSIGNMENT_FOR_EXISTING_CUSTOMER = "2"
        constructor() {} 
    }
    export class NoAsgnReqs {
        public static tag(): number { return 1499 }
        constructor() {} 
    }
    export class MDStreamID {
        public static tag(): number { return 1500 }
        constructor() {} 
    }
    export class StreamAsgnRptID {
        public static tag(): number { return 1501 }
        constructor() {} 
    }
    export class StreamAsgnRejReason {
        public static tag(): number { return 1502 }
        public static UNKNOWN_CLIENT = "0"
        public static EXCEEDS_MAXIMUM_SIZE = "1"
        public static UNKNOWN_OR_INVALID_CURRENCY_PAIR = "2"
        public static NO_AVAILABLE_STREAM = "3"
        public static OTHER = "99"
        constructor() {} 
    }
    export class StreamAsgnAckType {
        public static tag(): number { return 1503 }
        public static ASSIGNMENT_ACCEPTED = "0"
        public static ASSIGNMENT_REJECTED = "1"
        constructor() {} 
    }
    export class RelSymTransactTime {
        public static tag(): number { return 1504 }
        constructor() {} 
    }
    export class StreamAsgnType {
        public static tag(): number { return 1617 }
        public static ASSIGNMENT = "1"
        public static REJECTED = "2"
        public static TERMINATE_UNASSIGN = "3"
        constructor() {} 
    }
}
namespace FIX40.Groups {
    export class NoMiscFees extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
}
namespace FIX41.Groups {
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class LinesOfText extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
}
namespace FIX42.Groups {
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoRoutingIDs extends Group {
        constructor() { super() }
    }
    export class NoContraBrokers extends Group {
        constructor() { super() }
    }
    export class NoMsgTypes extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class LinesOfText extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
    export class NoTradingSessions extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoMDEntryTypes extends Group {
        constructor() { super() }
    }
    export class NoMDEntries extends Group {
        constructor() { super() }
    }
    export class NoQuoteEntries extends Group {
        constructor() { super() }
    }
    export class NoQuoteSets extends Group {
        constructor() { super() }
    }
    export class NoBidDescriptors extends Group {
        constructor() { super() }
    }
    export class NoBidComponents extends Group {
        constructor() { super() }
    }
    export class NoStrikes extends Group {
        constructor() { super() }
    }
}
namespace FIX43.Groups {
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoRoutingIDs extends Group {
        constructor() { super() }
    }
    export class NoContraBrokers extends Group {
        constructor() { super() }
    }
    export class NoContAmts extends Group {
        constructor() { super() }
    }
    export class NoLegs extends Group {
        constructor() { super() }
    }
    export class NoMsgTypes extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class LinesOfText extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
    export class NoTradingSessions extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoMDEntryTypes extends Group {
        constructor() { super() }
    }
    export class NoMDEntries extends Group {
        constructor() { super() }
    }
    export class NoQuoteEntries extends Group {
        constructor() { super() }
    }
    export class NoQuoteSets extends Group {
        constructor() { super() }
    }
    export class NoBidDescriptors extends Group {
        constructor() { super() }
    }
    export class NoBidComponents extends Group {
        constructor() { super() }
    }
    export class NoStrikes extends Group {
        constructor() { super() }
    }
    export class NoRegistDtls extends Group {
        constructor() { super() }
    }
    export class NoDistribInsts extends Group {
        constructor() { super() }
    }
    export class NoAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoSides extends Group {
        constructor() { super() }
    }
    export class NoSecurityTypes extends Group {
        constructor() { super() }
    }
    export class NoDates extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoNestedPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoStipulations extends Group {
        constructor() { super() }
    }
    export class NoPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoLegSecurityAltID extends Group {
        constructor() { super() }
    }
}
namespace FIX44.Groups {
    export class NoMsgTypes extends Group {
        constructor() { super() }
    }
    export class NoLegSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
    export class NoBidComponents extends Group {
        constructor() { super() }
    }
    export class NoPosAmt extends Group {
        constructor() { super() }
    }
    export class NoNested3PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoDates extends Group {
        constructor() { super() }
    }
    export class NoPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoContraBrokers extends Group {
        constructor() { super() }
    }
    export class NoClearingInstructions extends Group {
        constructor() { super() }
    }
    export class NoMDEntries extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class NoQuoteEntries extends Group {
        constructor() { super() }
    }
    export class NoUnderlyings extends Group {
        constructor() { super() }
    }
    export class NoSides extends Group {
        constructor() { super() }
    }
    export class NoRegistDtls extends Group {
        constructor() { super() }
    }
    export class NoQuoteSets extends Group {
        constructor() { super() }
    }
    export class NoTrdRegTimestamps extends Group {
        constructor() { super() }
    }
    export class NoCollInquiryQualifier extends Group {
        constructor() { super() }
    }
    export class NoTradingSessions extends Group {
        constructor() { super() }
    }
    export class NoLegs extends Group {
        constructor() { super() }
    }
    export class NoBidDescriptors extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoAltMDSource extends Group {
        constructor() { super() }
    }
    export class NoPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoLegAllocs extends Group {
        constructor() { super() }
    }
    export class NoNested2PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoStrikes extends Group {
        constructor() { super() }
    }
    export class NoHops extends Group {
        constructor() { super() }
    }
    export class NoSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoRoutingIDs extends Group {
        constructor() { super() }
    }
    export class NoNested3PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoCompIDs extends Group {
        constructor() { super() }
    }
    export class NoDlvyInst extends Group {
        constructor() { super() }
    }
    export class NoTrades extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoLegStipulations extends Group {
        constructor() { super() }
    }
    export class NoQuoteQualifiers extends Group {
        constructor() { super() }
    }
    export class NoSettlPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingStips extends Group {
        constructor() { super() }
    }
    export class NoSettlPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoContAmts extends Group {
        constructor() { super() }
    }
    export class NoNestedPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoEvents extends Group {
        constructor() { super() }
    }
    export class NoCapacities extends Group {
        constructor() { super() }
    }
    export class NoSettlInst extends Group {
        constructor() { super() }
    }
    export class NoLinesOfText extends Group {
        constructor() { super() }
    }
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoMiscFees extends Group {
        constructor() { super() }
    }
    export class NoDistribInsts extends Group {
        constructor() { super() }
    }
    export class NoMDEntryTypes extends Group {
        constructor() { super() }
    }
    export class NoNested2PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoSecurityTypes extends Group {
        constructor() { super() }
    }
    export class NoStipulations extends Group {
        constructor() { super() }
    }
    export class NoNestedPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoPositions extends Group {
        constructor() { super() }
    }
}
namespace FIX50.Groups {
    export class NoLegs extends Group {
        constructor() { super() }
    }
    export class NoSides extends Group {
        constructor() { super() }
    }
    export class NoPosAmt extends Group {
        constructor() { super() }
    }
    export class NoStipulations extends Group {
        constructor() { super() }
    }
    export class NoMDEntryTypes extends Group {
        constructor() { super() }
    }
    export class NoSettlInst extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class NoSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoBidComponents extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoTradingSessions extends Group {
        constructor() { super() }
    }
    export class NoSettlPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoLegAllocs extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
    export class NoLinesOfText extends Group {
        constructor() { super() }
    }
    export class NoBidDescriptors extends Group {
        constructor() { super() }
    }
    export class NoQuoteQualifiers extends Group {
        constructor() { super() }
    }
    export class NoAltMDSource extends Group {
        constructor() { super() }
    }
    export class NoUnderlyings extends Group {
        constructor() { super() }
    }
    export class NoHops extends Group {
        constructor() { super() }
    }
    export class NoNested2PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoRootPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoTrades extends Group {
        constructor() { super() }
    }
    export class NoNested3PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoStrategyParameters extends Group {
        constructor() { super() }
    }
    export class NoRootPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoQuoteSets extends Group {
        constructor() { super() }
    }
    export class NoSettlPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoCapacities extends Group {
        constructor() { super() }
    }
    export class NoPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoUndlyInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoNestedPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoDlvyInst extends Group {
        constructor() { super() }
    }
    export class NoStrikes extends Group {
        constructor() { super() }
    }
    export class NoContraBrokers extends Group {
        constructor() { super() }
    }
    export class NoCollInquiryQualifier extends Group {
        constructor() { super() }
    }
    export class NoCompIDs extends Group {
        constructor() { super() }
    }
    export class NoLegStipulations extends Group {
        constructor() { super() }
    }
    export class NoQuoteEntries extends Group {
        constructor() { super() }
    }
    export class NoContAmts extends Group {
        constructor() { super() }
    }
    export class NoMDEntries extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingAmounts extends Group {
        constructor() { super() }
    }
    export class NoTrdRegTimestamps extends Group {
        constructor() { super() }
    }
    export class NoInstrumentParties extends Group {
        constructor() { super() }
    }
    export class NoDates extends Group {
        constructor() { super() }
    }
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoNestedPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoPositions extends Group {
        constructor() { super() }
    }
    export class NoNested2PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoSideTrdRegTS extends Group {
        constructor() { super() }
    }
    export class NoMsgTypes extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoRegistDtls extends Group {
        constructor() { super() }
    }
    export class NoNested3PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoEvents extends Group {
        constructor() { super() }
    }
    export class NoSecurityTypes extends Group {
        constructor() { super() }
    }
    export class NoInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingStips extends Group {
        constructor() { super() }
    }
    export class NoMiscFees extends Group {
        constructor() { super() }
    }
    export class NoRoutingIDs extends Group {
        constructor() { super() }
    }
    export class NoDistribInsts extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoClearingInstructions extends Group {
        constructor() { super() }
    }
    export class NoExpiration extends Group {
        constructor() { super() }
    }
    export class NoLegSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoUndlyInstrumentParties extends Group {
        constructor() { super() }
    }
}
namespace FIX50SP1.Groups {
    export class NoLegs extends Group {
        constructor() { super() }
    }
    export class NoSides extends Group {
        constructor() { super() }
    }
    export class NoPosAmt extends Group {
        constructor() { super() }
    }
    export class NoStipulations extends Group {
        constructor() { super() }
    }
    export class NoMDEntryTypes extends Group {
        constructor() { super() }
    }
    export class NoSettlInst extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class NoSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoMatchRules extends Group {
        constructor() { super() }
    }
    export class NoLotTypeRules extends Group {
        constructor() { super() }
    }
    export class NoBidComponents extends Group {
        constructor() { super() }
    }
    export class NoTimeInForceRules extends Group {
        constructor() { super() }
    }
    export class NoTradingSessions extends Group {
        constructor() { super() }
    }
    export class NoApplIDs extends Group {
        constructor() { super() }
    }
    export class NoSettlPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoLegAllocs extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
    export class NoLinesOfText extends Group {
        constructor() { super() }
    }
    export class NoBidDescriptors extends Group {
        constructor() { super() }
    }
    export class NoMaturityRules extends Group {
        constructor() { super() }
    }
    export class NoStrikeRules extends Group {
        constructor() { super() }
    }
    export class NoQuoteQualifiers extends Group {
        constructor() { super() }
    }
    export class NoAltMDSource extends Group {
        constructor() { super() }
    }
    export class NoOfLegUnderlyings extends Group {
        constructor() { super() }
    }
    export class NoHops extends Group {
        constructor() { super() }
    }
    export class NoNested2PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoRootPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoTrades extends Group {
        constructor() { super() }
    }
    export class NoNested3PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoStrategyParameters extends Group {
        constructor() { super() }
    }
    export class NoNested4PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoTrdRepIndicators extends Group {
        constructor() { super() }
    }
    export class NoDerivativeInstrumentParties extends Group {
        constructor() { super() }
    }
    export class NoMDFeedTypes extends Group {
        constructor() { super() }
    }
    export class NoTickRules extends Group {
        constructor() { super() }
    }
    export class NoRootPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoQuoteSets extends Group {
        constructor() { super() }
    }
    export class NoSettlPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoCapacities extends Group {
        constructor() { super() }
    }
    export class NoUnderlyings extends Group {
        constructor() { super() }
    }
    export class NoPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoTradingSessionRules extends Group {
        constructor() { super() }
    }
    export class NoUndlyInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoNestedPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoFills extends Group {
        constructor() { super() }
    }
    export class NoNotAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoDlvyInst extends Group {
        constructor() { super() }
    }
    export class NoStrikes extends Group {
        constructor() { super() }
    }
    export class NoContraBrokers extends Group {
        constructor() { super() }
    }
    export class NoCollInquiryQualifier extends Group {
        constructor() { super() }
    }
    export class NoCompIDs extends Group {
        constructor() { super() }
    }
    export class NoLegStipulations extends Group {
        constructor() { super() }
    }
    export class NoQuoteEntries extends Group {
        constructor() { super() }
    }
    export class NoContAmts extends Group {
        constructor() { super() }
    }
    export class NoMDEntries extends Group {
        constructor() { super() }
    }
    export class NoNested4PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingAmounts extends Group {
        constructor() { super() }
    }
    export class NoTrdRegTimestamps extends Group {
        constructor() { super() }
    }
    export class NoDerivativeInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoMarketSegments extends Group {
        constructor() { super() }
    }
    export class NoInstrumentParties extends Group {
        constructor() { super() }
    }
    export class NoDerivativeSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoSettlOblig extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoDates extends Group {
        constructor() { super() }
    }
    export class NoExecInstRules extends Group {
        constructor() { super() }
    }
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoNestedPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoPositions extends Group {
        constructor() { super() }
    }
    export class NoNested2PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoSideTrdRegTS extends Group {
        constructor() { super() }
    }
    export class NoMsgTypes extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingLegSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoRegistDtls extends Group {
        constructor() { super() }
    }
    export class NoNested3PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoDerivativeEvents extends Group {
        constructor() { super() }
    }
    export class NoNestedInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoEvents extends Group {
        constructor() { super() }
    }
    export class NoOfSecSizes extends Group {
        constructor() { super() }
    }
    export class NoSecurityTypes extends Group {
        constructor() { super() }
    }
    export class NoInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingStips extends Group {
        constructor() { super() }
    }
    export class NoMiscFees extends Group {
        constructor() { super() }
    }
    export class NoRoutingIDs extends Group {
        constructor() { super() }
    }
    export class NoDistribInsts extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoClearingInstructions extends Group {
        constructor() { super() }
    }
    export class NoSettlDetails extends Group {
        constructor() { super() }
    }
    export class NoOrdTypeRules extends Group {
        constructor() { super() }
    }
    export class NoExpiration extends Group {
        constructor() { super() }
    }
    export class NoDerivativeInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoLegSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoStatsIndicators extends Group {
        constructor() { super() }
    }
    export class NoUndlyInstrumentParties extends Group {
        constructor() { super() }
    }
}
namespace FIX50SP2.Groups {
    export class NoLegs extends Group {
        constructor() { super() }
    }
    export class NoSides extends Group {
        constructor() { super() }
    }
    export class NoPosAmt extends Group {
        constructor() { super() }
    }
    export class NoStipulations extends Group {
        constructor() { super() }
    }
    export class NoMDEntryTypes extends Group {
        constructor() { super() }
    }
    export class NoSettlInst extends Group {
        constructor() { super() }
    }
    export class NoRelatedSym extends Group {
        constructor() { super() }
    }
    export class NoSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoMatchRules extends Group {
        constructor() { super() }
    }
    export class NoLotTypeRules extends Group {
        constructor() { super() }
    }
    export class NoBidComponents extends Group {
        constructor() { super() }
    }
    export class NoTargetPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoTimeInForceRules extends Group {
        constructor() { super() }
    }
    export class NoTradingSessions extends Group {
        constructor() { super() }
    }
    export class NoApplIDs extends Group {
        constructor() { super() }
    }
    export class NoSettlPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoLegAllocs extends Group {
        constructor() { super() }
    }
    export class NoAllocs extends Group {
        constructor() { super() }
    }
    export class NoLinesOfText extends Group {
        constructor() { super() }
    }
    export class NoBidDescriptors extends Group {
        constructor() { super() }
    }
    export class NoMaturityRules extends Group {
        constructor() { super() }
    }
    export class NoStrikeRules extends Group {
        constructor() { super() }
    }
    export class NoQuoteQualifiers extends Group {
        constructor() { super() }
    }
    export class NoAltMDSource extends Group {
        constructor() { super() }
    }
    export class NoOfLegUnderlyings extends Group {
        constructor() { super() }
    }
    export class NoHops extends Group {
        constructor() { super() }
    }
    export class NoNested2PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoRootPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoTrades extends Group {
        constructor() { super() }
    }
    export class NoNested3PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoStrategyParameters extends Group {
        constructor() { super() }
    }
    export class NoNested4PartyIDs extends Group {
        constructor() { super() }
    }
    export class NoTrdRepIndicators extends Group {
        constructor() { super() }
    }
    export class NoDerivativeInstrumentParties extends Group {
        constructor() { super() }
    }
    export class NoMDFeedTypes extends Group {
        constructor() { super() }
    }
    export class NoTickRules extends Group {
        constructor() { super() }
    }
    export class NoRootPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoQuoteSets extends Group {
        constructor() { super() }
    }
    export class NoSettlPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoCapacities extends Group {
        constructor() { super() }
    }
    export class NoUnderlyings extends Group {
        constructor() { super() }
    }
    export class NoPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoTradingSessionRules extends Group {
        constructor() { super() }
    }
    export class NoUndlyInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoNestedPartyIDs extends Group {
        constructor() { super() }
    }
    export class NoAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoFills extends Group {
        constructor() { super() }
    }
    export class NoNotAffectedOrders extends Group {
        constructor() { super() }
    }
    export class NoDlvyInst extends Group {
        constructor() { super() }
    }
    export class NoStrikes extends Group {
        constructor() { super() }
    }
    export class NoContraBrokers extends Group {
        constructor() { super() }
    }
    export class NoCollInquiryQualifier extends Group {
        constructor() { super() }
    }
    export class NoRateSources extends Group {
        constructor() { super() }
    }
    export class NoCompIDs extends Group {
        constructor() { super() }
    }
    export class NoLegStipulations extends Group {
        constructor() { super() }
    }
    export class NoComplexEventTimes extends Group {
        constructor() { super() }
    }
    export class NoQuoteEntries extends Group {
        constructor() { super() }
    }
    export class NoContAmts extends Group {
        constructor() { super() }
    }
    export class NoMDEntries extends Group {
        constructor() { super() }
    }
    export class NoNested4PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingAmounts extends Group {
        constructor() { super() }
    }
    export class NoTrdRegTimestamps extends Group {
        constructor() { super() }
    }
    export class NoComplexEvents extends Group {
        constructor() { super() }
    }
    export class NoDerivativeInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoMarketSegments extends Group {
        constructor() { super() }
    }
    export class NoInstrumentParties extends Group {
        constructor() { super() }
    }
    export class NoDerivativeSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoSettlOblig extends Group {
        constructor() { super() }
    }
    export class NoExecs extends Group {
        constructor() { super() }
    }
    export class NoDates extends Group {
        constructor() { super() }
    }
    export class NoExecInstRules extends Group {
        constructor() { super() }
    }
    export class NoIOIQualifiers extends Group {
        constructor() { super() }
    }
    export class NoNestedPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoPositions extends Group {
        constructor() { super() }
    }
    export class NoNested2PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoSideTrdRegTS extends Group {
        constructor() { super() }
    }
    export class NoAsgnReqs extends Group {
        constructor() { super() }
    }
    export class NoMsgTypes extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingLegSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoRegistDtls extends Group {
        constructor() { super() }
    }
    export class NoNested3PartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoDerivativeEvents extends Group {
        constructor() { super() }
    }
    export class NoNestedInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoEvents extends Group {
        constructor() { super() }
    }
    export class NoOfSecSizes extends Group {
        constructor() { super() }
    }
    export class NoSecurityTypes extends Group {
        constructor() { super() }
    }
    export class NoInstrAttrib extends Group {
        constructor() { super() }
    }
    export class NoUnderlyingStips extends Group {
        constructor() { super() }
    }
    export class NoComplexEventDates extends Group {
        constructor() { super() }
    }
    export class NoMiscFees extends Group {
        constructor() { super() }
    }
    export class NoRoutingIDs extends Group {
        constructor() { super() }
    }
    export class NoDistribInsts extends Group {
        constructor() { super() }
    }
    export class NoOrders extends Group {
        constructor() { super() }
    }
    export class NoPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoClearingInstructions extends Group {
        constructor() { super() }
    }
    export class NoNewsRefIDs extends Group {
        constructor() { super() }
    }
    export class NoSettlDetails extends Group {
        constructor() { super() }
    }
    export class NoOrdTypeRules extends Group {
        constructor() { super() }
    }
    export class NoExpiration extends Group {
        constructor() { super() }
    }
    export class NoDerivativeInstrumentPartySubIDs extends Group {
        constructor() { super() }
    }
    export class NoLegSecurityAltID extends Group {
        constructor() { super() }
    }
    export class NoStatsIndicators extends Group {
        constructor() { super() }
    }
    export class NoUndlyInstrumentParties extends Group {
        constructor() { super() }
    }
}
namespace FIX40 {
    export class Heartbeat extends Message {
        public static MsgType: string = "0"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class TestRequest extends Message {
        public static MsgType: string = "1"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class ResendRequest extends Message {
        public static MsgType: string = "2"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get BeginSeqNo(): string { return "" }
        public set BeginSeqNo(value: string) {}
        public get EndSeqNo(): string { return "" }
        public set EndSeqNo(value: string) {}
    }
    export class Reject extends Message {
        public static MsgType: string = "3"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class SequenceReset extends Message {
        public static MsgType: string = "4"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get GapFillFlag(): string { return "" }
        public set GapFillFlag(value: string) {}
        public get NewSeqNo(): string { return "" }
        public set NewSeqNo(value: string) {}
    }
    export class Logout extends Message {
        public static MsgType: string = "5"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get IOIShares(): string { return "" }
        public set IOIShares(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOIOthSvc(): string { return "" }
        public set IOIOthSvc(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public get IOIQualifier(): string { return "" }
        public set IOIQualifier(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Shares(): string { return "" }
        public set Shares(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecTransType(): string { return "" }
        public set ExecTransType(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get LastShares(): string { return "" }
        public set LastShares(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public NoMiscFees: Groups.NoMiscFees[]
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class Logon extends Message {
        public static MsgType: string = "A"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get EncryptMethod(): string { return "" }
        public set EncryptMethod(value: string) {}
        public get HeartBtInt(): string { return "" }
        public set HeartBtInt(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get RelatdSym(): string { return "" }
        public set RelatdSym(value: string) {}
        public get LinesOfText(): string { return "" }
        public set LinesOfText(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get RelatdSym(): string { return "" }
        public set RelatdSym(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get LinesOfText(): string { return "" }
        public set LinesOfText(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get ListSeqNo(): string { return "" }
        public set ListSeqNo(value: string) {}
        public get ListNoOrds(): string { return "" }
        public set ListNoOrds(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CxlType(): string { return "" }
        public set CxlType(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class Allocation extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public NoOrders: Groups.NoOrders[]
        public NoExecs: Groups.NoExecs[]
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Shares(): string { return "" }
        public set Shares(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPrxPrecision(): string { return "" }
        public set AvgPrxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public NoMiscFees: Groups.NoMiscFees[]
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public NoOrders: Groups.NoOrders[]
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get LastShares(): string { return "" }
        public set LastShares(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
    }
}
namespace FIX41 {
    export class Heartbeat extends Message {
        public static MsgType: string = "0"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class TestRequest extends Message {
        public static MsgType: string = "1"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class ResendRequest extends Message {
        public static MsgType: string = "2"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get BeginSeqNo(): string { return "" }
        public set BeginSeqNo(value: string) {}
        public get EndSeqNo(): string { return "" }
        public set EndSeqNo(value: string) {}
    }
    export class Reject extends Message {
        public static MsgType: string = "3"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class SequenceReset extends Message {
        public static MsgType: string = "4"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get GapFillFlag(): string { return "" }
        public set GapFillFlag(value: string) {}
        public get NewSeqNo(): string { return "" }
        public set NewSeqNo(value: string) {}
    }
    export class Logout extends Message {
        public static MsgType: string = "5"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get IOIShares(): string { return "" }
        public set IOIShares(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOIOthSvc(): string { return "" }
        public set IOIOthSvc(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public NoIOIQualifiers: Groups.NoIOIQualifiers[]
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Shares(): string { return "" }
        public set Shares(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecTransType(): string { return "" }
        public set ExecTransType(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get LastShares(): string { return "" }
        public set LastShares(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class Logon extends Message {
        public static MsgType: string = "A"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get EncryptMethod(): string { return "" }
        public set EncryptMethod(value: string) {}
        public get HeartBtInt(): string { return "" }
        public set HeartBtInt(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
        public get ResetSeqNumFlag(): string { return "" }
        public set ResetSeqNumFlag(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
        public LinesOfText: Groups.LinesOfText[]
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public LinesOfText: Groups.LinesOfText[]
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get CustomerOrFirm(): string { return "" }
        public set CustomerOrFirm(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get ListSeqNo(): string { return "" }
        public set ListSeqNo(value: string) {}
        public get ListNoOrds(): string { return "" }
        public set ListNoOrds(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get CustomerOrFirm(): string { return "" }
        public set CustomerOrFirm(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get CustomerOrFirm(): string { return "" }
        public set CustomerOrFirm(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class Allocation extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public NoOrders: Groups.NoOrders[]
        public NoExecs: Groups.NoExecs[]
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Shares(): string { return "" }
        public set Shares(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPrxPrecision(): string { return "" }
        public set AvgPrxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get WaveNo(): string { return "" }
        public set WaveNo(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public NoOrders: Groups.NoOrders[]
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get LastShares(): string { return "" }
        public set LastShares(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstID(): string { return "" }
        public set SettlInstID(value: string) {}
        public get SettlInstTransType(): string { return "" }
        public set SettlInstTransType(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstSource(): string { return "" }
        public set SettlInstSource(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get SettlLocation(): string { return "" }
        public set SettlLocation(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
        public get SettlDeliveryType(): string { return "" }
        public set SettlDeliveryType(value: string) {}
        public get SettlDepositoryCode(): string { return "" }
        public set SettlDepositoryCode(value: string) {}
        public get SettlBrkrCode(): string { return "" }
        public set SettlBrkrCode(value: string) {}
        public get SettlInstCode(): string { return "" }
        public set SettlInstCode(value: string) {}
        public get SecuritySettlAgentName(): string { return "" }
        public set SecuritySettlAgentName(value: string) {}
        public get SecuritySettlAgentCode(): string { return "" }
        public set SecuritySettlAgentCode(value: string) {}
        public get SecuritySettlAgentAcctNum(): string { return "" }
        public set SecuritySettlAgentAcctNum(value: string) {}
        public get SecuritySettlAgentAcctName(): string { return "" }
        public set SecuritySettlAgentAcctName(value: string) {}
        public get SecuritySettlAgentContactName(): string { return "" }
        public set SecuritySettlAgentContactName(value: string) {}
        public get SecuritySettlAgentContactPhone(): string { return "" }
        public set SecuritySettlAgentContactPhone(value: string) {}
        public get CashSettlAgentName(): string { return "" }
        public set CashSettlAgentName(value: string) {}
        public get CashSettlAgentCode(): string { return "" }
        public set CashSettlAgentCode(value: string) {}
        public get CashSettlAgentAcctNum(): string { return "" }
        public set CashSettlAgentAcctNum(value: string) {}
        public get CashSettlAgentAcctName(): string { return "" }
        public set CashSettlAgentAcctName(value: string) {}
        public get CashSettlAgentContactName(): string { return "" }
        public set CashSettlAgentContactName(value: string) {}
        public get CashSettlAgentContactPhone(): string { return "" }
        public set CashSettlAgentContactPhone(value: string) {}
    }
}
namespace FIX42 {
    export class Heartbeat extends Message {
        public static MsgType: string = "0"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class TestRequest extends Message {
        public static MsgType: string = "1"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class ResendRequest extends Message {
        public static MsgType: string = "2"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get BeginSeqNo(): string { return "" }
        public set BeginSeqNo(value: string) {}
        public get EndSeqNo(): string { return "" }
        public set EndSeqNo(value: string) {}
    }
    export class Reject extends Message {
        public static MsgType: string = "3"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefTagID(): string { return "" }
        public set RefTagID(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get SessionRejectReason(): string { return "" }
        public set SessionRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SequenceReset extends Message {
        public static MsgType: string = "4"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get GapFillFlag(): string { return "" }
        public set GapFillFlag(value: string) {}
        public get NewSeqNo(): string { return "" }
        public set NewSeqNo(value: string) {}
    }
    export class Logout extends Message {
        public static MsgType: string = "5"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get IOIShares(): string { return "" }
        public set IOIShares(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public NoIOIQualifiers: Groups.NoIOIQualifiers[]
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public NoRoutingIDs: Groups.NoRoutingIDs[]
        public get SpreadToBenchmark(): string { return "" }
        public set SpreadToBenchmark(value: string) {}
        public get Benchmark(): string { return "" }
        public set Benchmark(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Shares(): string { return "" }
        public set Shares(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public NoContraBrokers: Groups.NoContraBrokers[]
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecTransType(): string { return "" }
        public set ExecTransType(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get LastShares(): string { return "" }
        public set LastShares(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get DayOrderQty(): string { return "" }
        public set DayOrderQty(value: string) {}
        public get DayCumQty(): string { return "" }
        public set DayCumQty(value: string) {}
        public get DayAvgPx(): string { return "" }
        public set DayAvgPx(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get ClearingFirm(): string { return "" }
        public set ClearingFirm(value: string) {}
        public get ClearingAccount(): string { return "" }
        public set ClearingAccount(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CxlRejResponseTo(): string { return "" }
        public set CxlRejResponseTo(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Logon extends Message {
        public static MsgType: string = "A"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get EncryptMethod(): string { return "" }
        public set EncryptMethod(value: string) {}
        public get HeartBtInt(): string { return "" }
        public set HeartBtInt(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
        public get ResetSeqNumFlag(): string { return "" }
        public set ResetSeqNumFlag(value: string) {}
        public get MaxMessageSize(): string { return "" }
        public set MaxMessageSize(value: string) {}
        public NoMsgTypes: Groups.NoMsgTypes[]
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public get EncodedHeadlineLen(): string { return "" }
        public set EncodedHeadlineLen(value: string) {}
        public get EncodedHeadline(): string { return "" }
        public set EncodedHeadline(value: string) {}
        public NoRoutingIDs: Groups.NoRoutingIDs[]
        public NoRelatedSym: Groups.NoRelatedSym[]
        public LinesOfText: Groups.LinesOfText[]
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public get EncodedSubjectLen(): string { return "" }
        public set EncodedSubjectLen(value: string) {}
        public get EncodedSubject(): string { return "" }
        public set EncodedSubject(value: string) {}
        public NoRoutingIDs: Groups.NoRoutingIDs[]
        public NoRelatedSym: Groups.NoRelatedSym[]
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public LinesOfText: Groups.LinesOfText[]
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get CustomerOrFirm(): string { return "" }
        public set CustomerOrFirm(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get ClearingFirm(): string { return "" }
        public set ClearingFirm(value: string) {}
        public get ClearingAccount(): string { return "" }
        public set ClearingAccount(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get ListExecInstType(): string { return "" }
        public set ListExecInstType(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get EncodedListExecInstLen(): string { return "" }
        public set EncodedListExecInstLen(value: string) {}
        public get EncodedListExecInst(): string { return "" }
        public set EncodedListExecInst(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public NoOrders: Groups.NoOrders[]
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get CustomerOrFirm(): string { return "" }
        public set CustomerOrFirm(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get ClearingFirm(): string { return "" }
        public set ClearingFirm(value: string) {}
        public get ClearingAccount(): string { return "" }
        public set ClearingAccount(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class Allocation extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public NoOrders: Groups.NoOrders[]
        public NoExecs: Groups.NoExecs[]
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Shares(): string { return "" }
        public set Shares(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPrxPrecision(): string { return "" }
        public set AvgPrxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get OpenClose(): string { return "" }
        public set OpenClose(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ListStatusType(): string { return "" }
        public set ListStatusType(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get ListOrderStatus(): string { return "" }
        public set ListOrderStatus(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public get ListStatusText(): string { return "" }
        public set ListStatusText(value: string) {}
        public get EncodedListStatusTextLen(): string { return "" }
        public set EncodedListStatusTextLen(value: string) {}
        public get EncodedListStatusText(): string { return "" }
        public set EncodedListStatusText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public NoOrders: Groups.NoOrders[]
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get OrderQty(): string { return "" }
        public set OrderQty(value: string) {}
        public get CashOrderQty(): string { return "" }
        public set CashOrderQty(value: string) {}
        public get LastShares(): string { return "" }
        public set LastShares(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstID(): string { return "" }
        public set SettlInstID(value: string) {}
        public get SettlInstTransType(): string { return "" }
        public set SettlInstTransType(value: string) {}
        public get SettlInstRefID(): string { return "" }
        public set SettlInstRefID(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstSource(): string { return "" }
        public set SettlInstSource(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get SettlLocation(): string { return "" }
        public set SettlLocation(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ClientID(): string { return "" }
        public set ClientID(value: string) {}
        public get ExecBroker(): string { return "" }
        public set ExecBroker(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
        public get SettlDeliveryType(): string { return "" }
        public set SettlDeliveryType(value: string) {}
        public get SettlDepositoryCode(): string { return "" }
        public set SettlDepositoryCode(value: string) {}
        public get SettlBrkrCode(): string { return "" }
        public set SettlBrkrCode(value: string) {}
        public get SettlInstCode(): string { return "" }
        public set SettlInstCode(value: string) {}
        public get SecuritySettlAgentName(): string { return "" }
        public set SecuritySettlAgentName(value: string) {}
        public get SecuritySettlAgentCode(): string { return "" }
        public set SecuritySettlAgentCode(value: string) {}
        public get SecuritySettlAgentAcctNum(): string { return "" }
        public set SecuritySettlAgentAcctNum(value: string) {}
        public get SecuritySettlAgentAcctName(): string { return "" }
        public set SecuritySettlAgentAcctName(value: string) {}
        public get SecuritySettlAgentContactName(): string { return "" }
        public set SecuritySettlAgentContactName(value: string) {}
        public get SecuritySettlAgentContactPhone(): string { return "" }
        public set SecuritySettlAgentContactPhone(value: string) {}
        public get CashSettlAgentName(): string { return "" }
        public set CashSettlAgentName(value: string) {}
        public get CashSettlAgentCode(): string { return "" }
        public set CashSettlAgentCode(value: string) {}
        public get CashSettlAgentAcctNum(): string { return "" }
        public set CashSettlAgentAcctNum(value: string) {}
        public get CashSettlAgentAcctName(): string { return "" }
        public set CashSettlAgentAcctName(value: string) {}
        public get CashSettlAgentContactName(): string { return "" }
        public set CashSettlAgentContactName(value: string) {}
        public get CashSettlAgentContactPhone(): string { return "" }
        public set CashSettlAgentContactPhone(value: string) {}
    }
    export class MarketDataRequest extends Message {
        public static MsgType: string = "V"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDUpdateType(): string { return "" }
        public set MDUpdateType(value: string) {}
        public get AggregatedBook(): string { return "" }
        public set AggregatedBook(value: string) {}
        public NoMDEntryTypes: Groups.NoMDEntryTypes[]
        public NoRelatedSym: Groups.NoRelatedSym[]
    }
    export class MarketDataSnapshotFullRefresh extends Message {
        public static MsgType: string = "W"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public NoMDEntries: Groups.NoMDEntries[]
    }
    export class MarketDataIncrementalRefresh extends Message {
        public static MsgType: string = "X"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public NoMDEntries: Groups.NoMDEntries[]
    }
    export class MarketDataRequestReject extends Message {
        public static MsgType: string = "Y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get MDReqRejReason(): string { return "" }
        public set MDReqRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteCancel extends Message {
        public static MsgType: string = "Z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public NoQuoteEntries: Groups.NoQuoteEntries[]
    }
    export class QuoteStatusRequest extends Message {
        public static MsgType: string = "a"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
    }
    export class QuoteAcknowledgement extends Message {
        public static MsgType: string = "b"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteAckStatus(): string { return "" }
        public set QuoteAckStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public NoQuoteSets: Groups.NoQuoteSets[]
    }
    export class SecurityDefinitionRequest extends Message {
        public static MsgType: string = "c"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityRequestType(): string { return "" }
        public set SecurityRequestType(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
    }
    export class SecurityDefinition extends Message {
        public static MsgType: string = "d"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get TotalNumSecurities(): string { return "" }
        public set TotalNumSecurities(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
    }
    export class SecurityStatusRequest extends Message {
        public static MsgType: string = "e"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
    }
    export class SecurityStatus extends Message {
        public static MsgType: string = "f"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Symbol(): string { return "" }
        public set Symbol(value: string) {}
        public get SymbolSfx(): string { return "" }
        public set SymbolSfx(value: string) {}
        public get SecurityID(): string { return "" }
        public set SecurityID(value: string) {}
        public get IDSource(): string { return "" }
        public set IDSource(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get MaturityMonthYear(): string { return "" }
        public set MaturityMonthYear(value: string) {}
        public get MaturityDay(): string { return "" }
        public set MaturityDay(value: string) {}
        public get PutOrCall(): string { return "" }
        public set PutOrCall(value: string) {}
        public get StrikePrice(): string { return "" }
        public set StrikePrice(value: string) {}
        public get OptAttribute(): string { return "" }
        public set OptAttribute(value: string) {}
        public get ContractMultiplier(): string { return "" }
        public set ContractMultiplier(value: string) {}
        public get CouponRate(): string { return "" }
        public set CouponRate(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get Issuer(): string { return "" }
        public set Issuer(value: string) {}
        public get EncodedIssuerLen(): string { return "" }
        public set EncodedIssuerLen(value: string) {}
        public get EncodedIssuer(): string { return "" }
        public set EncodedIssuer(value: string) {}
        public get SecurityDesc(): string { return "" }
        public set SecurityDesc(value: string) {}
        public get EncodedSecurityDescLen(): string { return "" }
        public set EncodedSecurityDescLen(value: string) {}
        public get EncodedSecurityDesc(): string { return "" }
        public set EncodedSecurityDesc(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SecurityTradingStatus(): string { return "" }
        public set SecurityTradingStatus(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get HaltReasonChar(): string { return "" }
        public set HaltReasonChar(value: string) {}
        public get InViewOfCommon(): string { return "" }
        public set InViewOfCommon(value: string) {}
        public get DueToRelated(): string { return "" }
        public set DueToRelated(value: string) {}
        public get BuyVolume(): string { return "" }
        public set BuyVolume(value: string) {}
        public get SellVolume(): string { return "" }
        public set SellVolume(value: string) {}
        public get HighPx(): string { return "" }
        public set HighPx(value: string) {}
        public get LowPx(): string { return "" }
        public set LowPx(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Adjustment(): string { return "" }
        public set Adjustment(value: string) {}
    }
    export class TradingSessionStatusRequest extends Message {
        public static MsgType: string = "g"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class TradingSessionStatus extends Message {
        public static MsgType: string = "h"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get TradSesStatus(): string { return "" }
        public set TradSesStatus(value: string) {}
        public get TradSesStartTime(): string { return "" }
        public set TradSesStartTime(value: string) {}
        public get TradSesOpenTime(): string { return "" }
        public set TradSesOpenTime(value: string) {}
        public get TradSesPreCloseTime(): string { return "" }
        public set TradSesPreCloseTime(value: string) {}
        public get TradSesCloseTime(): string { return "" }
        public set TradSesCloseTime(value: string) {}
        public get TradSesEndTime(): string { return "" }
        public set TradSesEndTime(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MassQuote extends Message {
        public static MsgType: string = "i"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get DefBidSize(): string { return "" }
        public set DefBidSize(value: string) {}
        public get DefOfferSize(): string { return "" }
        public set DefOfferSize(value: string) {}
        public NoQuoteSets: Groups.NoQuoteSets[]
    }
    export class BusinessMessageReject extends Message {
        public static MsgType: string = "j"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get BusinessRejectRefID(): string { return "" }
        public set BusinessRejectRefID(value: string) {}
        public get BusinessRejectReason(): string { return "" }
        public set BusinessRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidRequest extends Message {
        public static MsgType: string = "k"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidRequestTransType(): string { return "" }
        public set BidRequestTransType(value: string) {}
        public get ListName(): string { return "" }
        public set ListName(value: string) {}
        public get TotalNumSecurities(): string { return "" }
        public set TotalNumSecurities(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get NumTickets(): string { return "" }
        public set NumTickets(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SideValue1(): string { return "" }
        public set SideValue1(value: string) {}
        public get SideValue2(): string { return "" }
        public set SideValue2(value: string) {}
        public NoBidDescriptors: Groups.NoBidDescriptors[]
        public NoBidComponents: Groups.NoBidComponents[]
        public get LiquidityIndType(): string { return "" }
        public set LiquidityIndType(value: string) {}
        public get WtAverageLiquidity(): string { return "" }
        public set WtAverageLiquidity(value: string) {}
        public get ExchangeForPhysical(): string { return "" }
        public set ExchangeForPhysical(value: string) {}
        public get OutMainCntryUIndex(): string { return "" }
        public set OutMainCntryUIndex(value: string) {}
        public get CrossPercent(): string { return "" }
        public set CrossPercent(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get IncTaxInd(): string { return "" }
        public set IncTaxInd(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get NumBidders(): string { return "" }
        public set NumBidders(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TradeType(): string { return "" }
        public set TradeType(value: string) {}
        public get BasisPxType(): string { return "" }
        public set BasisPxType(value: string) {}
        public get StrikeTime(): string { return "" }
        public set StrikeTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidResponse extends Message {
        public static MsgType: string = "l"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public NoBidComponents: Groups.NoBidComponents[]
    }
    export class ListStrikePrice extends Message {
        public static MsgType: string = "m"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TotNoStrikes(): string { return "" }
        public set TotNoStrikes(value: string) {}
        public NoStrikes: Groups.NoStrikes[]
    }
}
namespace FIX43 {
    export class Heartbeat extends Message {
        public static MsgType: string = "0"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class TestRequest extends Message {
        public static MsgType: string = "1"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class ResendRequest extends Message {
        public static MsgType: string = "2"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get BeginSeqNo(): string { return "" }
        public set BeginSeqNo(value: string) {}
        public get EndSeqNo(): string { return "" }
        public set EndSeqNo(value: string) {}
    }
    export class Reject extends Message {
        public static MsgType: string = "3"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefTagID(): string { return "" }
        public set RefTagID(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get SessionRejectReason(): string { return "" }
        public set SessionRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SequenceReset extends Message {
        public static MsgType: string = "4"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get GapFillFlag(): string { return "" }
        public set GapFillFlag(value: string) {}
        public get NewSeqNo(): string { return "" }
        public set NewSeqNo(value: string) {}
    }
    export class Logout extends Message {
        public static MsgType: string = "5"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QuantityType(): string { return "" }
        public set QuantityType(value: string) {}
        public get IOIQty(): string { return "" }
        public set IOIQty(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public NoIOIQualifiers: Groups.NoIOIQualifiers[]
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public NoRoutingIDs: Groups.NoRoutingIDs[]
        public get Benchmark(): string { return "" }
        public set Benchmark(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public NoContraBrokers: Groups.NoContraBrokers[]
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QuantityType(): string { return "" }
        public set QuantityType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get UnderlyingLastQty(): string { return "" }
        public set UnderlyingLastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get UnderlyingLastPx(): string { return "" }
        public set UnderlyingLastPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get DayOrderQty(): string { return "" }
        public set DayOrderQty(value: string) {}
        public get DayCumQty(): string { return "" }
        public set DayCumQty(value: string) {}
        public get DayAvgPx(): string { return "" }
        public set DayAvgPx(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TradedFlatSwitch(): string { return "" }
        public set TradedFlatSwitch(value: string) {}
        public get BasisFeatureDate(): string { return "" }
        public set BasisFeatureDate(value: string) {}
        public get BasisFeaturePrice(): string { return "" }
        public set BasisFeaturePrice(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get LastForwardPoints2(): string { return "" }
        public set LastForwardPoints2(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get ExecValuationPoint(): string { return "" }
        public set ExecValuationPoint(value: string) {}
        public get ExecPriceType(): string { return "" }
        public set ExecPriceType(value: string) {}
        public get ExecPriceAdjustment(): string { return "" }
        public set ExecPriceAdjustment(value: string) {}
        public get PriorityIndicator(): string { return "" }
        public set PriorityIndicator(value: string) {}
        public get PriceImprovement(): string { return "" }
        public set PriceImprovement(value: string) {}
        public NoContAmts: Groups.NoContAmts[]
        public NoLegs: Groups.NoLegs[]
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CxlRejResponseTo(): string { return "" }
        public set CxlRejResponseTo(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Logon extends Message {
        public static MsgType: string = "A"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get EncryptMethod(): string { return "" }
        public set EncryptMethod(value: string) {}
        public get HeartBtInt(): string { return "" }
        public set HeartBtInt(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
        public get ResetSeqNumFlag(): string { return "" }
        public set ResetSeqNumFlag(value: string) {}
        public get MaxMessageSize(): string { return "" }
        public set MaxMessageSize(value: string) {}
        public NoMsgTypes: Groups.NoMsgTypes[]
        public get TestMessageIndicator(): string { return "" }
        public set TestMessageIndicator(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get Password(): string { return "" }
        public set Password(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public get EncodedHeadlineLen(): string { return "" }
        public set EncodedHeadlineLen(value: string) {}
        public get EncodedHeadline(): string { return "" }
        public set EncodedHeadline(value: string) {}
        public NoRoutingIDs: Groups.NoRoutingIDs[]
        public NoRelatedSym: Groups.NoRelatedSym[]
        public LinesOfText: Groups.LinesOfText[]
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public get EncodedSubjectLen(): string { return "" }
        public set EncodedSubjectLen(value: string) {}
        public get EncodedSubject(): string { return "" }
        public set EncodedSubject(value: string) {}
        public NoRoutingIDs: Groups.NoRoutingIDs[]
        public NoRelatedSym: Groups.NoRelatedSym[]
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public LinesOfText: Groups.LinesOfText[]
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QuantityType(): string { return "" }
        public set QuantityType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get ListExecInstType(): string { return "" }
        public set ListExecInstType(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get EncodedListExecInstLen(): string { return "" }
        public set EncodedListExecInstLen(value: string) {}
        public get EncodedListExecInst(): string { return "" }
        public set EncodedListExecInst(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public NoOrders: Groups.NoOrders[]
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QuantityType(): string { return "" }
        public set QuantityType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get Rule80A(): string { return "" }
        public set Rule80A(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class Allocation extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public NoOrders: Groups.NoOrders[]
        public NoExecs: Groups.NoExecs[]
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPrxPrecision(): string { return "" }
        public set AvgPrxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ListStatusType(): string { return "" }
        public set ListStatusType(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get ListOrderStatus(): string { return "" }
        public set ListOrderStatus(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public get ListStatusText(): string { return "" }
        public set ListStatusText(value: string) {}
        public get EncodedListStatusTextLen(): string { return "" }
        public set EncodedListStatusTextLen(value: string) {}
        public get EncodedListStatusText(): string { return "" }
        public set EncodedListStatusText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public NoOrders: Groups.NoOrders[]
    }
    export class AllocationAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstID(): string { return "" }
        public set SettlInstID(value: string) {}
        public get SettlInstTransType(): string { return "" }
        public set SettlInstTransType(value: string) {}
        public get SettlInstRefID(): string { return "" }
        public set SettlInstRefID(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstSource(): string { return "" }
        public set SettlInstSource(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
        public get SettlDeliveryType(): string { return "" }
        public set SettlDeliveryType(value: string) {}
        public get SettlDepositoryCode(): string { return "" }
        public set SettlDepositoryCode(value: string) {}
        public get SettlBrkrCode(): string { return "" }
        public set SettlBrkrCode(value: string) {}
        public get SettlInstCode(): string { return "" }
        public set SettlInstCode(value: string) {}
        public get SecuritySettlAgentName(): string { return "" }
        public set SecuritySettlAgentName(value: string) {}
        public get SecuritySettlAgentCode(): string { return "" }
        public set SecuritySettlAgentCode(value: string) {}
        public get SecuritySettlAgentAcctNum(): string { return "" }
        public set SecuritySettlAgentAcctNum(value: string) {}
        public get SecuritySettlAgentAcctName(): string { return "" }
        public set SecuritySettlAgentAcctName(value: string) {}
        public get SecuritySettlAgentContactName(): string { return "" }
        public set SecuritySettlAgentContactName(value: string) {}
        public get SecuritySettlAgentContactPhone(): string { return "" }
        public set SecuritySettlAgentContactPhone(value: string) {}
        public get CashSettlAgentName(): string { return "" }
        public set CashSettlAgentName(value: string) {}
        public get CashSettlAgentCode(): string { return "" }
        public set CashSettlAgentCode(value: string) {}
        public get CashSettlAgentAcctNum(): string { return "" }
        public set CashSettlAgentAcctNum(value: string) {}
        public get CashSettlAgentAcctName(): string { return "" }
        public set CashSettlAgentAcctName(value: string) {}
        public get CashSettlAgentContactName(): string { return "" }
        public set CashSettlAgentContactName(value: string) {}
        public get CashSettlAgentContactPhone(): string { return "" }
        public set CashSettlAgentContactPhone(value: string) {}
        public get PaymentMethod(): string { return "" }
        public set PaymentMethod(value: string) {}
        public get PaymentRef(): string { return "" }
        public set PaymentRef(value: string) {}
        public get CardHolderName(): string { return "" }
        public set CardHolderName(value: string) {}
        public get CardNumber(): string { return "" }
        public set CardNumber(value: string) {}
        public get CardStartDate(): string { return "" }
        public set CardStartDate(value: string) {}
        public get CardExpDate(): string { return "" }
        public set CardExpDate(value: string) {}
        public get CardIssNo(): string { return "" }
        public set CardIssNo(value: string) {}
        public get PaymentDate(): string { return "" }
        public set PaymentDate(value: string) {}
        public get PaymentRemitterID(): string { return "" }
        public set PaymentRemitterID(value: string) {}
    }
    export class MarketDataRequest extends Message {
        public static MsgType: string = "V"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDUpdateType(): string { return "" }
        public set MDUpdateType(value: string) {}
        public get AggregatedBook(): string { return "" }
        public set AggregatedBook(value: string) {}
        public get OpenCloseSettleFlag(): string { return "" }
        public set OpenCloseSettleFlag(value: string) {}
        public get Scope(): string { return "" }
        public set Scope(value: string) {}
        public get MDImplicitDelete(): string { return "" }
        public set MDImplicitDelete(value: string) {}
        public NoMDEntryTypes: Groups.NoMDEntryTypes[]
        public NoRelatedSym: Groups.NoRelatedSym[]
        public NoTradingSessions: Groups.NoTradingSessions[]
    }
    export class MarketDataSnapshotFullRefresh extends Message {
        public static MsgType: string = "W"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get TotalVolumeTradedDate(): string { return "" }
        public set TotalVolumeTradedDate(value: string) {}
        public get TotalVolumeTradedTime(): string { return "" }
        public set TotalVolumeTradedTime(value: string) {}
        public get NetChgPrevDay(): string { return "" }
        public set NetChgPrevDay(value: string) {}
        public NoMDEntries: Groups.NoMDEntries[]
    }
    export class MarketDataIncrementalRefresh extends Message {
        public static MsgType: string = "X"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public NoMDEntries: Groups.NoMDEntries[]
    }
    export class MarketDataRequestReject extends Message {
        public static MsgType: string = "Y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get MDReqRejReason(): string { return "" }
        public set MDReqRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteCancel extends Message {
        public static MsgType: string = "Z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public NoQuoteEntries: Groups.NoQuoteEntries[]
    }
    export class QuoteStatusRequest extends Message {
        public static MsgType: string = "a"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class MassQuoteAcknowledgement extends Message {
        public static MsgType: string = "b"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public NoQuoteSets: Groups.NoQuoteSets[]
    }
    export class SecurityDefinitionRequest extends Message {
        public static MsgType: string = "c"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityRequestType(): string { return "" }
        public set SecurityRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public NoLegs: Groups.NoLegs[]
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityDefinition extends Message {
        public static MsgType: string = "d"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public NoLegs: Groups.NoLegs[]
        public get RoundLot(): string { return "" }
        public set RoundLot(value: string) {}
        public get MinTradeVol(): string { return "" }
        public set MinTradeVol(value: string) {}
    }
    export class SecurityStatusRequest extends Message {
        public static MsgType: string = "e"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class SecurityStatus extends Message {
        public static MsgType: string = "f"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SecurityTradingStatus(): string { return "" }
        public set SecurityTradingStatus(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get HaltReasonChar(): string { return "" }
        public set HaltReasonChar(value: string) {}
        public get InViewOfCommon(): string { return "" }
        public set InViewOfCommon(value: string) {}
        public get DueToRelated(): string { return "" }
        public set DueToRelated(value: string) {}
        public get BuyVolume(): string { return "" }
        public set BuyVolume(value: string) {}
        public get SellVolume(): string { return "" }
        public set SellVolume(value: string) {}
        public get HighPx(): string { return "" }
        public set HighPx(value: string) {}
        public get LowPx(): string { return "" }
        public set LowPx(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Adjustment(): string { return "" }
        public set Adjustment(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionStatusRequest extends Message {
        public static MsgType: string = "g"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class TradingSessionStatus extends Message {
        public static MsgType: string = "h"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get TradSesStatus(): string { return "" }
        public set TradSesStatus(value: string) {}
        public get TradSesStatusRejReason(): string { return "" }
        public set TradSesStatusRejReason(value: string) {}
        public get TradSesStartTime(): string { return "" }
        public set TradSesStartTime(value: string) {}
        public get TradSesOpenTime(): string { return "" }
        public set TradSesOpenTime(value: string) {}
        public get TradSesPreCloseTime(): string { return "" }
        public set TradSesPreCloseTime(value: string) {}
        public get TradSesCloseTime(): string { return "" }
        public set TradSesCloseTime(value: string) {}
        public get TradSesEndTime(): string { return "" }
        public set TradSesEndTime(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MassQuote extends Message {
        public static MsgType: string = "i"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DefBidSize(): string { return "" }
        public set DefBidSize(value: string) {}
        public get DefOfferSize(): string { return "" }
        public set DefOfferSize(value: string) {}
        public NoQuoteSets: Groups.NoQuoteSets[]
    }
    export class BusinessMessageReject extends Message {
        public static MsgType: string = "j"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get BusinessRejectRefID(): string { return "" }
        public set BusinessRejectRefID(value: string) {}
        public get BusinessRejectReason(): string { return "" }
        public set BusinessRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidRequest extends Message {
        public static MsgType: string = "k"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidRequestTransType(): string { return "" }
        public set BidRequestTransType(value: string) {}
        public get ListName(): string { return "" }
        public set ListName(value: string) {}
        public get TotalNumSecurities(): string { return "" }
        public set TotalNumSecurities(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get NumTickets(): string { return "" }
        public set NumTickets(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SideValue1(): string { return "" }
        public set SideValue1(value: string) {}
        public get SideValue2(): string { return "" }
        public set SideValue2(value: string) {}
        public NoBidDescriptors: Groups.NoBidDescriptors[]
        public NoBidComponents: Groups.NoBidComponents[]
        public get LiquidityIndType(): string { return "" }
        public set LiquidityIndType(value: string) {}
        public get WtAverageLiquidity(): string { return "" }
        public set WtAverageLiquidity(value: string) {}
        public get ExchangeForPhysical(): string { return "" }
        public set ExchangeForPhysical(value: string) {}
        public get OutMainCntryUIndex(): string { return "" }
        public set OutMainCntryUIndex(value: string) {}
        public get CrossPercent(): string { return "" }
        public set CrossPercent(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get IncTaxInd(): string { return "" }
        public set IncTaxInd(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get NumBidders(): string { return "" }
        public set NumBidders(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TradeType(): string { return "" }
        public set TradeType(value: string) {}
        public get BasisPxType(): string { return "" }
        public set BasisPxType(value: string) {}
        public get StrikeTime(): string { return "" }
        public set StrikeTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidResponse extends Message {
        public static MsgType: string = "l"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public NoBidComponents: Groups.NoBidComponents[]
    }
    export class ListStrikePrice extends Message {
        public static MsgType: string = "m"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TotNoStrikes(): string { return "" }
        public set TotNoStrikes(value: string) {}
        public NoStrikes: Groups.NoStrikes[]
    }
    export class XMLnonFIX extends Message {
        public static MsgType: string = "n"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
    }
    export class RegistrationInstructions extends Message {
        public static MsgType: string = "o"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get RegistAcctType(): string { return "" }
        public set RegistAcctType(value: string) {}
        public get TaxAdvantageType(): string { return "" }
        public set TaxAdvantageType(value: string) {}
        public get OwnershipType(): string { return "" }
        public set OwnershipType(value: string) {}
        public NoRegistDtls: Groups.NoRegistDtls[]
        public NoDistribInsts: Groups.NoDistribInsts[]
    }
    export class RegistrationInstructionsResponse extends Message {
        public static MsgType: string = "p"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get RegistRejReasonCode(): string { return "" }
        public set RegistRejReasonCode(value: string) {}
        public get RegistRejReasonText(): string { return "" }
        public set RegistRejReasonText(value: string) {}
    }
    export class OrderMassCancelRequest extends Message {
        public static MsgType: string = "q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassCancelReport extends Message {
        public static MsgType: string = "r"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get MassCancelResponse(): string { return "" }
        public set MassCancelResponse(value: string) {}
        public get MassCancelRejectReason(): string { return "" }
        public set MassCancelRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public NoAffectedOrders: Groups.NoAffectedOrders[]
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NewOrderCross extends Message {
        public static MsgType: string = "s"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public NoSides: Groups.NoSides[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
    }
    export class CrossOrderCancelRequest extends Message {
        public static MsgType: string = "u"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public NoSides: Groups.NoSides[]
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class CrossOrderCancelReplaceRequest extends Message {
        public static MsgType: string = "t"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public NoSides: Groups.NoSides[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
    }
    export class SecurityTypeRequest extends Message {
        public static MsgType: string = "v"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class SecurityTypes extends Message {
        public static MsgType: string = "w"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get TotalNumSecurityTypes(): string { return "" }
        public set TotalNumSecurityTypes(value: string) {}
        public NoSecurityTypes: Groups.NoSecurityTypes[]
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityListRequest extends Message {
        public static MsgType: string = "x"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityList extends Message {
        public static MsgType: string = "y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotalNumSecurities(): string { return "" }
        public set TotalNumSecurities(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
    }
    export class DerivativeSecurityListRequest extends Message {
        public static MsgType: string = "z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class DerivativeSecurityList extends Message {
        public static MsgType: string = "AA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotalNumSecurities(): string { return "" }
        public set TotalNumSecurities(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
    }
    export class NewOrderMultileg extends Message {
        public static MsgType: string = "AB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public NoLegs: Groups.NoLegs[]
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QuantityType(): string { return "" }
        public set QuantityType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
    }
    export class MultilegOrderCancelReplaceRequest extends Message {
        public static MsgType: string = "AC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public NoAllocs: Groups.NoAllocs[]
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public NoTradingSessions: Groups.NoTradingSessions[]
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public NoLegs: Groups.NoLegs[]
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QuantityType(): string { return "" }
        public set QuantityType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIid(): string { return "" }
        public set IOIid(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get PegDifference(): string { return "" }
        public set PegDifference(value: string) {}
        public get DiscretionInst(): string { return "" }
        public set DiscretionInst(value: string) {}
        public get DiscretionOffset(): string { return "" }
        public set DiscretionOffset(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
    }
    export class TradeCaptureReportRequest extends Message {
        public static MsgType: string = "AD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public NoDates: Groups.NoDates[]
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
    }
    export class TradeCaptureReport extends Message {
        public static MsgType: string = "AE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlmntTyp(): string { return "" }
        public set SettlmntTyp(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public NoSides: Groups.NoSides[]
    }
    export class OrderMassStatusRequest extends Message {
        public static MsgType: string = "AF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get MassStatusReqType(): string { return "" }
        public set MassStatusReqType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class QuoteRequestReject extends Message {
        public static MsgType: string = "AG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get QuoteRequestRejectReason(): string { return "" }
        public set QuoteRequestRejectReason(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RFQRequest extends Message {
        public static MsgType: string = "AH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public NoRelatedSym: Groups.NoRelatedSym[]
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class QuoteStatusReport extends Message {
        public static MsgType: string = "AI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get FutSettDate(): string { return "" }
        public set FutSettDate(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get FutSettDate2(): string { return "" }
        public set FutSettDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
    }
}
namespace FIX44 {
    export class Heartbeat extends Message {
        public static MsgType: string = "0"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class TestRequest extends Message {
        public static MsgType: string = "1"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get TestReqID(): string { return "" }
        public set TestReqID(value: string) {}
    }
    export class ResendRequest extends Message {
        public static MsgType: string = "2"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get BeginSeqNo(): string { return "" }
        public set BeginSeqNo(value: string) {}
        public get EndSeqNo(): string { return "" }
        public set EndSeqNo(value: string) {}
    }
    export class Reject extends Message {
        public static MsgType: string = "3"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefTagID(): string { return "" }
        public set RefTagID(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get SessionRejectReason(): string { return "" }
        public set SessionRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SequenceReset extends Message {
        public static MsgType: string = "4"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get GapFillFlag(): string { return "" }
        public set GapFillFlag(value: string) {}
        public get NewSeqNo(): string { return "" }
        public set NewSeqNo(value: string) {}
    }
    export class Logout extends Message {
        public static MsgType: string = "5"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get IOIQty(): string { return "" }
        public set IOIQty(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PeggedPrice(): string { return "" }
        public set PeggedPrice(value: string) {}
        public get DiscretionPrice(): string { return "" }
        public set DiscretionPrice(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get TargetStrategyPerformance(): string { return "" }
        public set TargetStrategyPerformance(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get UnderlyingLastQty(): string { return "" }
        public set UnderlyingLastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get UnderlyingLastPx(): string { return "" }
        public set UnderlyingLastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get DayOrderQty(): string { return "" }
        public set DayOrderQty(value: string) {}
        public get DayCumQty(): string { return "" }
        public set DayCumQty(value: string) {}
        public get DayAvgPx(): string { return "" }
        public set DayAvgPx(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradedFlatSwitch(): string { return "" }
        public set TradedFlatSwitch(value: string) {}
        public get BasisFeatureDate(): string { return "" }
        public set BasisFeatureDate(value: string) {}
        public get BasisFeaturePrice(): string { return "" }
        public set BasisFeaturePrice(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get LastForwardPoints2(): string { return "" }
        public set LastForwardPoints2(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get ExecValuationPoint(): string { return "" }
        public set ExecValuationPoint(value: string) {}
        public get ExecPriceType(): string { return "" }
        public set ExecPriceType(value: string) {}
        public get ExecPriceAdjustment(): string { return "" }
        public set ExecPriceAdjustment(value: string) {}
        public get PriorityIndicator(): string { return "" }
        public set PriorityIndicator(value: string) {}
        public get PriceImprovement(): string { return "" }
        public set PriceImprovement(value: string) {}
        public get LastLiquidityInd(): string { return "" }
        public set LastLiquidityInd(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CxlRejResponseTo(): string { return "" }
        public set CxlRejResponseTo(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Logon extends Message {
        public static MsgType: string = "A"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
        public get EncryptMethod(): string { return "" }
        public set EncryptMethod(value: string) {}
        public get HeartBtInt(): string { return "" }
        public set HeartBtInt(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
        public get ResetSeqNumFlag(): string { return "" }
        public set ResetSeqNumFlag(value: string) {}
        public get NextExpectedMsgSeqNum(): string { return "" }
        public set NextExpectedMsgSeqNum(value: string) {}
        public get MaxMessageSize(): string { return "" }
        public set MaxMessageSize(value: string) {}
        public NoMsgTypes: Groups.NoMsgTypes[]
        public get TestMessageIndicator(): string { return "" }
        public set TestMessageIndicator(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get Password(): string { return "" }
        public set Password(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public get EncodedHeadlineLen(): string { return "" }
        public set EncodedHeadlineLen(value: string) {}
        public get EncodedHeadline(): string { return "" }
        public set EncodedHeadline(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public get EncodedSubjectLen(): string { return "" }
        public set EncodedSubjectLen(value: string) {}
        public get EncodedSubject(): string { return "" }
        public set EncodedSubject(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get ListExecInstType(): string { return "" }
        public set ListExecInstType(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get EncodedListExecInstLen(): string { return "" }
        public set EncodedListExecInstLen(value: string) {}
        public get EncodedListExecInst(): string { return "" }
        public set EncodedListExecInst(value: string) {}
        public get AllowableOneSidednessPct(): string { return "" }
        public set AllowableOneSidednessPct(value: string) {}
        public get AllowableOneSidednessValue(): string { return "" }
        public set AllowableOneSidednessValue(value: string) {}
        public get AllowableOneSidednessCurr(): string { return "" }
        public set AllowableOneSidednessCurr(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class AllocationInstruction extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ListStatusType(): string { return "" }
        public set ListStatusType(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get ListOrderStatus(): string { return "" }
        public set ListOrderStatus(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public get ListStatusText(): string { return "" }
        public set ListStatusText(value: string) {}
        public get EncodedListStatusTextLen(): string { return "" }
        public set EncodedListStatusTextLen(value: string) {}
        public get EncodedListStatusText(): string { return "" }
        public set EncodedListStatusText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstMsgID(): string { return "" }
        public set SettlInstMsgID(value: string) {}
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstReqRejCode(): string { return "" }
        public set SettlInstReqRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class MarketDataRequest extends Message {
        public static MsgType: string = "V"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDUpdateType(): string { return "" }
        public set MDUpdateType(value: string) {}
        public get AggregatedBook(): string { return "" }
        public set AggregatedBook(value: string) {}
        public get OpenCloseSettlFlag(): string { return "" }
        public set OpenCloseSettlFlag(value: string) {}
        public get Scope(): string { return "" }
        public set Scope(value: string) {}
        public get MDImplicitDelete(): string { return "" }
        public set MDImplicitDelete(value: string) {}
        public get ApplQueueAction(): string { return "" }
        public set ApplQueueAction(value: string) {}
        public get ApplQueueMax(): string { return "" }
        public set ApplQueueMax(value: string) {}
    }
    export class MarketDataSnapshotFullRefresh extends Message {
        public static MsgType: string = "W"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get NetChgPrevDay(): string { return "" }
        public set NetChgPrevDay(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataIncrementalRefresh extends Message {
        public static MsgType: string = "X"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataRequestReject extends Message {
        public static MsgType: string = "Y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get MDReqRejReason(): string { return "" }
        public set MDReqRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteCancel extends Message {
        public static MsgType: string = "Z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class QuoteStatusRequest extends Message {
        public static MsgType: string = "a"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class MassQuoteAcknowledgement extends Message {
        public static MsgType: string = "b"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionRequest extends Message {
        public static MsgType: string = "c"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityRequestType(): string { return "" }
        public set SecurityRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityDefinition extends Message {
        public static MsgType: string = "d"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get RoundLot(): string { return "" }
        public set RoundLot(value: string) {}
        public get MinTradeVol(): string { return "" }
        public set MinTradeVol(value: string) {}
    }
    export class SecurityStatusRequest extends Message {
        public static MsgType: string = "e"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class SecurityStatus extends Message {
        public static MsgType: string = "f"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SecurityTradingStatus(): string { return "" }
        public set SecurityTradingStatus(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get HaltReasonChar(): string { return "" }
        public set HaltReasonChar(value: string) {}
        public get InViewOfCommon(): string { return "" }
        public set InViewOfCommon(value: string) {}
        public get DueToRelated(): string { return "" }
        public set DueToRelated(value: string) {}
        public get BuyVolume(): string { return "" }
        public set BuyVolume(value: string) {}
        public get SellVolume(): string { return "" }
        public set SellVolume(value: string) {}
        public get HighPx(): string { return "" }
        public set HighPx(value: string) {}
        public get LowPx(): string { return "" }
        public set LowPx(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Adjustment(): string { return "" }
        public set Adjustment(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionStatusRequest extends Message {
        public static MsgType: string = "g"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class TradingSessionStatus extends Message {
        public static MsgType: string = "h"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get TradSesStatus(): string { return "" }
        public set TradSesStatus(value: string) {}
        public get TradSesStatusRejReason(): string { return "" }
        public set TradSesStatusRejReason(value: string) {}
        public get TradSesStartTime(): string { return "" }
        public set TradSesStartTime(value: string) {}
        public get TradSesOpenTime(): string { return "" }
        public set TradSesOpenTime(value: string) {}
        public get TradSesPreCloseTime(): string { return "" }
        public set TradSesPreCloseTime(value: string) {}
        public get TradSesCloseTime(): string { return "" }
        public set TradSesCloseTime(value: string) {}
        public get TradSesEndTime(): string { return "" }
        public set TradSesEndTime(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MassQuote extends Message {
        public static MsgType: string = "i"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DefBidSize(): string { return "" }
        public set DefBidSize(value: string) {}
        public get DefOfferSize(): string { return "" }
        public set DefOfferSize(value: string) {}
    }
    export class BusinessMessageReject extends Message {
        public static MsgType: string = "j"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get BusinessRejectRefID(): string { return "" }
        public set BusinessRejectRefID(value: string) {}
        public get BusinessRejectReason(): string { return "" }
        public set BusinessRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidRequest extends Message {
        public static MsgType: string = "k"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidRequestTransType(): string { return "" }
        public set BidRequestTransType(value: string) {}
        public get ListName(): string { return "" }
        public set ListName(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get NumTickets(): string { return "" }
        public set NumTickets(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SideValue1(): string { return "" }
        public set SideValue1(value: string) {}
        public get SideValue2(): string { return "" }
        public set SideValue2(value: string) {}
        public get LiquidityIndType(): string { return "" }
        public set LiquidityIndType(value: string) {}
        public get WtAverageLiquidity(): string { return "" }
        public set WtAverageLiquidity(value: string) {}
        public get ExchangeForPhysical(): string { return "" }
        public set ExchangeForPhysical(value: string) {}
        public get OutMainCntryUIndex(): string { return "" }
        public set OutMainCntryUIndex(value: string) {}
        public get CrossPercent(): string { return "" }
        public set CrossPercent(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get IncTaxInd(): string { return "" }
        public set IncTaxInd(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get NumBidders(): string { return "" }
        public set NumBidders(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get BidTradeType(): string { return "" }
        public set BidTradeType(value: string) {}
        public get BasisPxType(): string { return "" }
        public set BasisPxType(value: string) {}
        public get StrikeTime(): string { return "" }
        public set StrikeTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidResponse extends Message {
        public static MsgType: string = "l"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
    }
    export class ListStrikePrice extends Message {
        public static MsgType: string = "m"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TotNoStrikes(): string { return "" }
        public set TotNoStrikes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class XMLnonFIX extends Message {
        public static MsgType: string = "n"
        public static MsgCat = MsgCat.Admin
        constructor() { super() }
    }
    export class RegistrationInstructions extends Message {
        public static MsgType: string = "o"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistAcctType(): string { return "" }
        public set RegistAcctType(value: string) {}
        public get TaxAdvantageType(): string { return "" }
        public set TaxAdvantageType(value: string) {}
        public get OwnershipType(): string { return "" }
        public set OwnershipType(value: string) {}
    }
    export class RegistrationInstructionsResponse extends Message {
        public static MsgType: string = "p"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get RegistRejReasonCode(): string { return "" }
        public set RegistRejReasonCode(value: string) {}
        public get RegistRejReasonText(): string { return "" }
        public set RegistRejReasonText(value: string) {}
    }
    export class OrderMassCancelRequest extends Message {
        public static MsgType: string = "q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassCancelReport extends Message {
        public static MsgType: string = "r"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get MassCancelResponse(): string { return "" }
        public set MassCancelResponse(value: string) {}
        public get MassCancelRejectReason(): string { return "" }
        public set MassCancelRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NewOrderCross extends Message {
        public static MsgType: string = "s"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelReplaceRequest extends Message {
        public static MsgType: string = "t"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelRequest extends Message {
        public static MsgType: string = "u"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class SecurityTypeRequest extends Message {
        public static MsgType: string = "v"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
    }
    export class SecurityTypes extends Message {
        public static MsgType: string = "w"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get TotNoSecurityTypes(): string { return "" }
        public set TotNoSecurityTypes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityListRequest extends Message {
        public static MsgType: string = "x"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityList extends Message {
        public static MsgType: string = "y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class DerivativeSecurityListRequest extends Message {
        public static MsgType: string = "z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class DerivativeSecurityList extends Message {
        public static MsgType: string = "AA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class NewOrderMultileg extends Message {
        public static MsgType: string = "AB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class MultilegOrderCancelReplace extends Message {
        public static MsgType: string = "AC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class TradeCaptureReportRequest extends Message {
        public static MsgType: string = "AD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradeCaptureReport extends Message {
        public static MsgType: string = "AE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
    }
    export class OrderMassStatusRequest extends Message {
        public static MsgType: string = "AF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get MassStatusReqType(): string { return "" }
        public set MassStatusReqType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class QuoteRequestReject extends Message {
        public static MsgType: string = "AG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get QuoteRequestRejectReason(): string { return "" }
        public set QuoteRequestRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RFQRequest extends Message {
        public static MsgType: string = "AH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class QuoteStatusReport extends Message {
        public static MsgType: string = "AI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteResponse extends Message {
        public static MsgType: string = "AJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteRespType(): string { return "" }
        public set QuoteRespType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
    }
    export class Confirmation extends Message {
        public static MsgType: string = "AK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get ConfirmRefID(): string { return "" }
        public set ConfirmRefID(value: string) {}
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmTransType(): string { return "" }
        public set ConfirmTransType(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get ConfirmStatus(): string { return "" }
        public set ConfirmStatus(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocQty(): string { return "" }
        public set AllocQty(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get ReportedPx(): string { return "" }
        public set ReportedPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get MaturityNetMoney(): string { return "" }
        public set MaturityNetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SharedCommission(): string { return "" }
        public set SharedCommission(value: string) {}
    }
    export class PositionMaintenanceRequest extends Message {
        public static MsgType: string = "AL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class PositionMaintenanceReport extends Message {
        public static MsgType: string = "AM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintStatus(): string { return "" }
        public set PosMaintStatus(value: string) {}
        public get PosMaintResult(): string { return "" }
        public set PosMaintResult(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositions extends Message {
        public static MsgType: string = "AN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositionsAck extends Message {
        public static MsgType: string = "AO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get PosReqStatus(): string { return "" }
        public set PosReqStatus(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class PositionReport extends Message {
        public static MsgType: string = "AP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get DeliveryDate(): string { return "" }
        public set DeliveryDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradeCaptureReportRequestAck extends Message {
        public static MsgType: string = "AQ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get TradeRequestResult(): string { return "" }
        public set TradeRequestResult(value: string) {}
        public get TradeRequestStatus(): string { return "" }
        public set TradeRequestStatus(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradeCaptureReportAck extends Message {
        public static MsgType: string = "AR"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeReportRejectReason(): string { return "" }
        public set TradeReportRejectReason(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
    }
    export class AllocationReport extends Message {
        public static MsgType: string = "AS"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocReportRefID(): string { return "" }
        public set AllocReportRefID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationReportAck extends Message {
        public static MsgType: string = "AT"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationAck extends Message {
        public static MsgType: string = "AU"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AffirmStatus(): string { return "" }
        public set AffirmStatus(value: string) {}
        public get ConfirmRejReason(): string { return "" }
        public set ConfirmRejReason(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructionRequest extends Message {
        public static MsgType: string = "AV"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get CFICode(): string { return "" }
        public set CFICode(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
    }
    export class AssignmentReport extends Message {
        public static MsgType: string = "AW"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AsgnRptID(): string { return "" }
        public set AsgnRptID(value: string) {}
        public get TotNumAssignmentReports(): string { return "" }
        public set TotNumAssignmentReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get UnderlyingSettlPrice(): string { return "" }
        public set UnderlyingSettlPrice(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get AssignmentMethod(): string { return "" }
        public set AssignmentMethod(value: string) {}
        public get AssignmentUnit(): string { return "" }
        public set AssignmentUnit(value: string) {}
        public get OpenInterest(): string { return "" }
        public set OpenInterest(value: string) {}
        public get ExerciseMethod(): string { return "" }
        public set ExerciseMethod(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralRequest extends Message {
        public static MsgType: string = "AX"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralAssignment extends Message {
        public static MsgType: string = "AY"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRefID(): string { return "" }
        public set CollAsgnRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralResponse extends Message {
        public static MsgType: string = "AZ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRespID(): string { return "" }
        public set CollRespID(value: string) {}
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRespType(): string { return "" }
        public set CollAsgnRespType(value: string) {}
        public get CollAsgnRejectReason(): string { return "" }
        public set CollAsgnRejectReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralReport extends Message {
        public static MsgType: string = "BA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRptID(): string { return "" }
        public set CollRptID(value: string) {}
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get CollStatus(): string { return "" }
        public set CollStatus(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralInquiry extends Message {
        public static MsgType: string = "BB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NetworkCounterpartySystemStatusRequest extends Message {
        public static MsgType: string = "BC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkRequestType(): string { return "" }
        public set NetworkRequestType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
    }
    export class NetworkCounterpartySystemStatusResponse extends Message {
        public static MsgType: string = "BD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkStatusResponseType(): string { return "" }
        public set NetworkStatusResponseType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
        public get NetworkResponseID(): string { return "" }
        public set NetworkResponseID(value: string) {}
        public get LastNetworkResponseID(): string { return "" }
        public set LastNetworkResponseID(value: string) {}
    }
    export class UserRequest extends Message {
        public static MsgType: string = "BE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get UserRequestType(): string { return "" }
        public set UserRequestType(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get Password(): string { return "" }
        public set Password(value: string) {}
        public get NewPassword(): string { return "" }
        public set NewPassword(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class UserResponse extends Message {
        public static MsgType: string = "BF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get UserStatus(): string { return "" }
        public set UserStatus(value: string) {}
        public get UserStatusText(): string { return "" }
        public set UserStatusText(value: string) {}
    }
    export class CollateralInquiryAck extends Message {
        public static MsgType: string = "BG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get CollInquiryStatus(): string { return "" }
        public set CollInquiryStatus(value: string) {}
        public get CollInquiryResult(): string { return "" }
        public set CollInquiryResult(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationRequest extends Message {
        public static MsgType: string = "BH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
}
namespace FIX50 {
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get IOIQty(): string { return "" }
        public set IOIQty(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get OrderCategory(): string { return "" }
        public set OrderCategory(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LotType(): string { return "" }
        public set LotType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PeggedPrice(): string { return "" }
        public set PeggedPrice(value: string) {}
        public get PeggedRefPrice(): string { return "" }
        public set PeggedRefPrice(value: string) {}
        public get DiscretionPrice(): string { return "" }
        public set DiscretionPrice(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get TargetStrategyPerformance(): string { return "" }
        public set TargetStrategyPerformance(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get AggressorIndicator(): string { return "" }
        public set AggressorIndicator(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get UnderlyingLastQty(): string { return "" }
        public set UnderlyingLastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get UnderlyingLastPx(): string { return "" }
        public set UnderlyingLastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get DayOrderQty(): string { return "" }
        public set DayOrderQty(value: string) {}
        public get DayCumQty(): string { return "" }
        public set DayCumQty(value: string) {}
        public get DayAvgPx(): string { return "" }
        public set DayAvgPx(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradedFlatSwitch(): string { return "" }
        public set TradedFlatSwitch(value: string) {}
        public get BasisFeatureDate(): string { return "" }
        public set BasisFeatureDate(value: string) {}
        public get BasisFeaturePrice(): string { return "" }
        public set BasisFeaturePrice(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get LastForwardPoints2(): string { return "" }
        public set LastForwardPoints2(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get ExecValuationPoint(): string { return "" }
        public set ExecValuationPoint(value: string) {}
        public get ExecPriceType(): string { return "" }
        public set ExecPriceType(value: string) {}
        public get ExecPriceAdjustment(): string { return "" }
        public set ExecPriceAdjustment(value: string) {}
        public get PriorityIndicator(): string { return "" }
        public set PriorityIndicator(value: string) {}
        public get PriceImprovement(): string { return "" }
        public set PriceImprovement(value: string) {}
        public get LastLiquidityInd(): string { return "" }
        public set LastLiquidityInd(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CxlRejResponseTo(): string { return "" }
        public set CxlRejResponseTo(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public get EncodedHeadlineLen(): string { return "" }
        public set EncodedHeadlineLen(value: string) {}
        public get EncodedHeadline(): string { return "" }
        public set EncodedHeadline(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public get EncodedSubjectLen(): string { return "" }
        public set EncodedSubjectLen(value: string) {}
        public get EncodedSubject(): string { return "" }
        public set EncodedSubject(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
        public get RefOrderID(): string { return "" }
        public set RefOrderID(value: string) {}
        public get RefOrderIDSource(): string { return "" }
        public set RefOrderIDSource(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get ListExecInstType(): string { return "" }
        public set ListExecInstType(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get EncodedListExecInstLen(): string { return "" }
        public set EncodedListExecInstLen(value: string) {}
        public get EncodedListExecInst(): string { return "" }
        public set EncodedListExecInst(value: string) {}
        public get AllowableOneSidednessPct(): string { return "" }
        public set AllowableOneSidednessPct(value: string) {}
        public get AllowableOneSidednessValue(): string { return "" }
        public set AllowableOneSidednessValue(value: string) {}
        public get AllowableOneSidednessCurr(): string { return "" }
        public set AllowableOneSidednessCurr(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class AllocationInstruction extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ListStatusType(): string { return "" }
        public set ListStatusType(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get ListOrderStatus(): string { return "" }
        public set ListOrderStatus(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public get ListStatusText(): string { return "" }
        public set ListStatusText(value: string) {}
        public get EncodedListStatusTextLen(): string { return "" }
        public set EncodedListStatusTextLen(value: string) {}
        public get EncodedListStatusText(): string { return "" }
        public set EncodedListStatusText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get BidSwapPoints(): string { return "" }
        public set BidSwapPoints(value: string) {}
        public get OfferSwapPoints(): string { return "" }
        public set OfferSwapPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstMsgID(): string { return "" }
        public set SettlInstMsgID(value: string) {}
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstReqRejCode(): string { return "" }
        public set SettlInstReqRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class MarketDataRequest extends Message {
        public static MsgType: string = "V"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDUpdateType(): string { return "" }
        public set MDUpdateType(value: string) {}
        public get AggregatedBook(): string { return "" }
        public set AggregatedBook(value: string) {}
        public get OpenCloseSettlFlag(): string { return "" }
        public set OpenCloseSettlFlag(value: string) {}
        public get Scope(): string { return "" }
        public set Scope(value: string) {}
        public get MDImplicitDelete(): string { return "" }
        public set MDImplicitDelete(value: string) {}
        public get ApplQueueAction(): string { return "" }
        public set ApplQueueAction(value: string) {}
        public get ApplQueueMax(): string { return "" }
        public set ApplQueueMax(value: string) {}
        public get MDQuoteType(): string { return "" }
        public set MDQuoteType(value: string) {}
    }
    export class MarketDataSnapshotFullRefresh extends Message {
        public static MsgType: string = "W"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReportID(): string { return "" }
        public set MDReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MDFeedType(): string { return "" }
        public set MDFeedType(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get NetChgPrevDay(): string { return "" }
        public set NetChgPrevDay(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataIncrementalRefresh extends Message {
        public static MsgType: string = "X"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MDFeedType(): string { return "" }
        public set MDFeedType(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataRequestReject extends Message {
        public static MsgType: string = "Y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get MDReqRejReason(): string { return "" }
        public set MDReqRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteCancel extends Message {
        public static MsgType: string = "Z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class QuoteStatusRequest extends Message {
        public static MsgType: string = "a"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class MassQuoteAcknowledgement extends Message {
        public static MsgType: string = "b"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionRequest extends Message {
        public static MsgType: string = "c"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityRequestType(): string { return "" }
        public set SecurityRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityDefinition extends Message {
        public static MsgType: string = "d"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get RoundLot(): string { return "" }
        public set RoundLot(value: string) {}
        public get MinTradeVol(): string { return "" }
        public set MinTradeVol(value: string) {}
    }
    export class SecurityStatusRequest extends Message {
        public static MsgType: string = "e"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class SecurityStatus extends Message {
        public static MsgType: string = "f"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SecurityTradingStatus(): string { return "" }
        public set SecurityTradingStatus(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get HaltReasonChar(): string { return "" }
        public set HaltReasonChar(value: string) {}
        public get InViewOfCommon(): string { return "" }
        public set InViewOfCommon(value: string) {}
        public get DueToRelated(): string { return "" }
        public set DueToRelated(value: string) {}
        public get BuyVolume(): string { return "" }
        public set BuyVolume(value: string) {}
        public get SellVolume(): string { return "" }
        public set SellVolume(value: string) {}
        public get HighPx(): string { return "" }
        public set HighPx(value: string) {}
        public get LowPx(): string { return "" }
        public set LowPx(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Adjustment(): string { return "" }
        public set Adjustment(value: string) {}
        public get FirstPx(): string { return "" }
        public set FirstPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionStatusRequest extends Message {
        public static MsgType: string = "g"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
    }
    export class TradingSessionStatus extends Message {
        public static MsgType: string = "h"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get TradSesStatus(): string { return "" }
        public set TradSesStatus(value: string) {}
        public get TradSesStatusRejReason(): string { return "" }
        public set TradSesStatusRejReason(value: string) {}
        public get TradSesStartTime(): string { return "" }
        public set TradSesStartTime(value: string) {}
        public get TradSesOpenTime(): string { return "" }
        public set TradSesOpenTime(value: string) {}
        public get TradSesPreCloseTime(): string { return "" }
        public set TradSesPreCloseTime(value: string) {}
        public get TradSesCloseTime(): string { return "" }
        public set TradSesCloseTime(value: string) {}
        public get TradSesEndTime(): string { return "" }
        public set TradSesEndTime(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MassQuote extends Message {
        public static MsgType: string = "i"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DefBidSize(): string { return "" }
        public set DefBidSize(value: string) {}
        public get DefOfferSize(): string { return "" }
        public set DefOfferSize(value: string) {}
    }
    export class BusinessMessageReject extends Message {
        public static MsgType: string = "j"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get BusinessRejectRefID(): string { return "" }
        public set BusinessRejectRefID(value: string) {}
        public get BusinessRejectReason(): string { return "" }
        public set BusinessRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidRequest extends Message {
        public static MsgType: string = "k"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidRequestTransType(): string { return "" }
        public set BidRequestTransType(value: string) {}
        public get ListName(): string { return "" }
        public set ListName(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get NumTickets(): string { return "" }
        public set NumTickets(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SideValue1(): string { return "" }
        public set SideValue1(value: string) {}
        public get SideValue2(): string { return "" }
        public set SideValue2(value: string) {}
        public get LiquidityIndType(): string { return "" }
        public set LiquidityIndType(value: string) {}
        public get WtAverageLiquidity(): string { return "" }
        public set WtAverageLiquidity(value: string) {}
        public get ExchangeForPhysical(): string { return "" }
        public set ExchangeForPhysical(value: string) {}
        public get OutMainCntryUIndex(): string { return "" }
        public set OutMainCntryUIndex(value: string) {}
        public get CrossPercent(): string { return "" }
        public set CrossPercent(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get IncTaxInd(): string { return "" }
        public set IncTaxInd(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get NumBidders(): string { return "" }
        public set NumBidders(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get BidTradeType(): string { return "" }
        public set BidTradeType(value: string) {}
        public get BasisPxType(): string { return "" }
        public set BasisPxType(value: string) {}
        public get StrikeTime(): string { return "" }
        public set StrikeTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidResponse extends Message {
        public static MsgType: string = "l"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
    }
    export class ListStrikePrice extends Message {
        public static MsgType: string = "m"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TotNoStrikes(): string { return "" }
        public set TotNoStrikes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class RegistrationInstructions extends Message {
        public static MsgType: string = "o"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistAcctType(): string { return "" }
        public set RegistAcctType(value: string) {}
        public get TaxAdvantageType(): string { return "" }
        public set TaxAdvantageType(value: string) {}
        public get OwnershipType(): string { return "" }
        public set OwnershipType(value: string) {}
    }
    export class RegistrationInstructionsResponse extends Message {
        public static MsgType: string = "p"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get RegistRejReasonCode(): string { return "" }
        public set RegistRejReasonCode(value: string) {}
        public get RegistRejReasonText(): string { return "" }
        public set RegistRejReasonText(value: string) {}
    }
    export class OrderMassCancelRequest extends Message {
        public static MsgType: string = "q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassCancelReport extends Message {
        public static MsgType: string = "r"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get MassCancelResponse(): string { return "" }
        public set MassCancelResponse(value: string) {}
        public get MassCancelRejectReason(): string { return "" }
        public set MassCancelRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NewOrderCross extends Message {
        public static MsgType: string = "s"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelReplaceRequest extends Message {
        public static MsgType: string = "t"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelRequest extends Message {
        public static MsgType: string = "u"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class SecurityTypeRequest extends Message {
        public static MsgType: string = "v"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
    }
    export class SecurityTypes extends Message {
        public static MsgType: string = "w"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get TotNoSecurityTypes(): string { return "" }
        public set TotNoSecurityTypes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityListRequest extends Message {
        public static MsgType: string = "x"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityList extends Message {
        public static MsgType: string = "y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class DerivativeSecurityListRequest extends Message {
        public static MsgType: string = "z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class DerivativeSecurityList extends Message {
        public static MsgType: string = "AA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class NewOrderMultileg extends Message {
        public static MsgType: string = "AB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get SwapPoints(): string { return "" }
        public set SwapPoints(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get RefOrderID(): string { return "" }
        public set RefOrderID(value: string) {}
        public get RefOrderIDSource(): string { return "" }
        public set RefOrderIDSource(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class MultilegOrderCancelReplace extends Message {
        public static MsgType: string = "AC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get SwapPoints(): string { return "" }
        public set SwapPoints(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class TradeCaptureReportRequest extends Message {
        public static MsgType: string = "AD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
    }
    export class TradeCaptureReport extends Message {
        public static MsgType: string = "AE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get OrigTradeHandlingInstr(): string { return "" }
        public set OrigTradeHandlingInstr(value: string) {}
        public get OrigTradeDate(): string { return "" }
        public set OrigTradeDate(value: string) {}
        public get OrigTradeID(): string { return "" }
        public set OrigTradeID(value: string) {}
        public get OrigSecondaryTradeID(): string { return "" }
        public set OrigSecondaryTradeID(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AsOfIndicator(): string { return "" }
        public set AsOfIndicator(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get UnderlyingSettlementDate(): string { return "" }
        public set UnderlyingSettlementDate(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get OrderCategory(): string { return "" }
        public set OrderCategory(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
        public get TierCode(): string { return "" }
        public set TierCode(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get TZTransactTime(): string { return "" }
        public set TZTransactTime(value: string) {}
        public get ReportedPxDiff(): string { return "" }
        public set ReportedPxDiff(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
    }
    export class OrderMassStatusRequest extends Message {
        public static MsgType: string = "AF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get MassStatusReqType(): string { return "" }
        public set MassStatusReqType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class QuoteRequestReject extends Message {
        public static MsgType: string = "AG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get QuoteRequestRejectReason(): string { return "" }
        public set QuoteRequestRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RFQRequest extends Message {
        public static MsgType: string = "AH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class QuoteStatusReport extends Message {
        public static MsgType: string = "AI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteResponse extends Message {
        public static MsgType: string = "AJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteRespType(): string { return "" }
        public set QuoteRespType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
    }
    export class Confirmation extends Message {
        public static MsgType: string = "AK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get ConfirmRefID(): string { return "" }
        public set ConfirmRefID(value: string) {}
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmTransType(): string { return "" }
        public set ConfirmTransType(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get ConfirmStatus(): string { return "" }
        public set ConfirmStatus(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocQty(): string { return "" }
        public set AllocQty(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get ReportedPx(): string { return "" }
        public set ReportedPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get MaturityNetMoney(): string { return "" }
        public set MaturityNetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SharedCommission(): string { return "" }
        public set SharedCommission(value: string) {}
    }
    export class PositionMaintenanceRequest extends Message {
        public static MsgType: string = "AL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
    }
    export class PositionMaintenanceReport extends Message {
        public static MsgType: string = "AM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintStatus(): string { return "" }
        public set PosMaintStatus(value: string) {}
        public get PosMaintResult(): string { return "" }
        public set PosMaintResult(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositions extends Message {
        public static MsgType: string = "AN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositionsAck extends Message {
        public static MsgType: string = "AO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get PosReqStatus(): string { return "" }
        public set PosReqStatus(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class PositionReport extends Message {
        public static MsgType: string = "AP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get DeliveryDate(): string { return "" }
        public set DeliveryDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradeCaptureReportRequestAck extends Message {
        public static MsgType: string = "AQ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get TradeRequestResult(): string { return "" }
        public set TradeRequestResult(value: string) {}
        public get TradeRequestStatus(): string { return "" }
        public set TradeRequestStatus(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
    }
    export class TradeCaptureReportAck extends Message {
        public static MsgType: string = "AR"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get OrigTradeHandlingInstr(): string { return "" }
        public set OrigTradeHandlingInstr(value: string) {}
        public get OrigTradeDate(): string { return "" }
        public set OrigTradeDate(value: string) {}
        public get OrigTradeID(): string { return "" }
        public set OrigTradeID(value: string) {}
        public get OrigSecondaryTradeID(): string { return "" }
        public set OrigSecondaryTradeID(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeReportRejectReason(): string { return "" }
        public set TradeReportRejectReason(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get AsOfIndicator(): string { return "" }
        public set AsOfIndicator(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get TierCode(): string { return "" }
        public set TierCode(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get RptSys(): string { return "" }
        public set RptSys(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
    }
    export class AllocationReport extends Message {
        public static MsgType: string = "AS"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocReportRefID(): string { return "" }
        public set AllocReportRefID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationReportAck extends Message {
        public static MsgType: string = "AT"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationAck extends Message {
        public static MsgType: string = "AU"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AffirmStatus(): string { return "" }
        public set AffirmStatus(value: string) {}
        public get ConfirmRejReason(): string { return "" }
        public set ConfirmRejReason(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructionRequest extends Message {
        public static MsgType: string = "AV"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get CFICode(): string { return "" }
        public set CFICode(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
    }
    export class AssignmentReport extends Message {
        public static MsgType: string = "AW"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AsgnRptID(): string { return "" }
        public set AsgnRptID(value: string) {}
        public get TotNumAssignmentReports(): string { return "" }
        public set TotNumAssignmentReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get UnderlyingSettlPrice(): string { return "" }
        public set UnderlyingSettlPrice(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get AssignmentMethod(): string { return "" }
        public set AssignmentMethod(value: string) {}
        public get AssignmentUnit(): string { return "" }
        public set AssignmentUnit(value: string) {}
        public get OpenInterest(): string { return "" }
        public set OpenInterest(value: string) {}
        public get ExerciseMethod(): string { return "" }
        public set ExerciseMethod(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralRequest extends Message {
        public static MsgType: string = "AX"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralAssignment extends Message {
        public static MsgType: string = "AY"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRefID(): string { return "" }
        public set CollAsgnRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralResponse extends Message {
        public static MsgType: string = "AZ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRespID(): string { return "" }
        public set CollRespID(value: string) {}
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRespType(): string { return "" }
        public set CollAsgnRespType(value: string) {}
        public get CollAsgnRejectReason(): string { return "" }
        public set CollAsgnRejectReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CollApplType(): string { return "" }
        public set CollApplType(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralReport extends Message {
        public static MsgType: string = "BA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRptID(): string { return "" }
        public set CollRptID(value: string) {}
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CollApplType(): string { return "" }
        public set CollApplType(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CollStatus(): string { return "" }
        public set CollStatus(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralInquiry extends Message {
        public static MsgType: string = "BB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NetworkCounterpartySystemStatusRequest extends Message {
        public static MsgType: string = "BC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkRequestType(): string { return "" }
        public set NetworkRequestType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
    }
    export class NetworkCounterpartySystemStatusResponse extends Message {
        public static MsgType: string = "BD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkStatusResponseType(): string { return "" }
        public set NetworkStatusResponseType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
        public get NetworkResponseID(): string { return "" }
        public set NetworkResponseID(value: string) {}
        public get LastNetworkResponseID(): string { return "" }
        public set LastNetworkResponseID(value: string) {}
    }
    export class UserRequest extends Message {
        public static MsgType: string = "BE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get UserRequestType(): string { return "" }
        public set UserRequestType(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get Password(): string { return "" }
        public set Password(value: string) {}
        public get NewPassword(): string { return "" }
        public set NewPassword(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class UserResponse extends Message {
        public static MsgType: string = "BF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get UserStatus(): string { return "" }
        public set UserStatus(value: string) {}
        public get UserStatusText(): string { return "" }
        public set UserStatusText(value: string) {}
    }
    export class CollateralInquiryAck extends Message {
        public static MsgType: string = "BG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get CollInquiryStatus(): string { return "" }
        public set CollInquiryStatus(value: string) {}
        public get CollInquiryResult(): string { return "" }
        public set CollInquiryResult(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationRequest extends Message {
        public static MsgType: string = "BH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ContraryIntentionReport extends Message {
        public static MsgType: string = "BO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ContIntRptID(): string { return "" }
        public set ContIntRptID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get LateIndicator(): string { return "" }
        public set LateIndicator(value: string) {}
        public get InputSource(): string { return "" }
        public set InputSource(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionUpdateReport extends Message {
        public static MsgType: string = "BP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get RoundLot(): string { return "" }
        public set RoundLot(value: string) {}
        public get MinTradeVol(): string { return "" }
        public set MinTradeVol(value: string) {}
    }
    export class SecurityListUpdateReport extends Message {
        public static MsgType: string = "BK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AdjustedPositionReport extends Message {
        public static MsgType: string = "BL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
    }
    export class AllocationInstructionAlert extends Message {
        public static MsgType: string = "BM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
    }
    export class ExecutionAcknowledgement extends Message {
        public static MsgType: string = "BN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ExecAckStatus(): string { return "" }
        public set ExecAckStatus(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionList extends Message {
        public static MsgType: string = "BJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
    }
    export class TradingSessionListRequest extends Message {
        public static MsgType: string = "BI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
}
namespace FIX50SP1 {
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get IOIQty(): string { return "" }
        public set IOIQty(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get OrderCategory(): string { return "" }
        public set OrderCategory(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LotType(): string { return "" }
        public set LotType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PeggedPrice(): string { return "" }
        public set PeggedPrice(value: string) {}
        public get PeggedRefPrice(): string { return "" }
        public set PeggedRefPrice(value: string) {}
        public get DiscretionPrice(): string { return "" }
        public set DiscretionPrice(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get TargetStrategyPerformance(): string { return "" }
        public set TargetStrategyPerformance(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get AggressorIndicator(): string { return "" }
        public set AggressorIndicator(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get UnderlyingLastQty(): string { return "" }
        public set UnderlyingLastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get UnderlyingLastPx(): string { return "" }
        public set UnderlyingLastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get DayOrderQty(): string { return "" }
        public set DayOrderQty(value: string) {}
        public get DayCumQty(): string { return "" }
        public set DayCumQty(value: string) {}
        public get DayAvgPx(): string { return "" }
        public set DayAvgPx(value: string) {}
        public get TotNoFills(): string { return "" }
        public set TotNoFills(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradedFlatSwitch(): string { return "" }
        public set TradedFlatSwitch(value: string) {}
        public get BasisFeatureDate(): string { return "" }
        public set BasisFeatureDate(value: string) {}
        public get BasisFeaturePrice(): string { return "" }
        public set BasisFeaturePrice(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get LastForwardPoints2(): string { return "" }
        public set LastForwardPoints2(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get ExecValuationPoint(): string { return "" }
        public set ExecValuationPoint(value: string) {}
        public get ExecPriceType(): string { return "" }
        public set ExecPriceType(value: string) {}
        public get ExecPriceAdjustment(): string { return "" }
        public set ExecPriceAdjustment(value: string) {}
        public get PriorityIndicator(): string { return "" }
        public set PriorityIndicator(value: string) {}
        public get PriceImprovement(): string { return "" }
        public set PriceImprovement(value: string) {}
        public get LastLiquidityInd(): string { return "" }
        public set LastLiquidityInd(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get DividendYield(): string { return "" }
        public set DividendYield(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
        public get Volatility(): string { return "" }
        public set Volatility(value: string) {}
        public get TimeToExpiration(): string { return "" }
        public set TimeToExpiration(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get PriceDelta(): string { return "" }
        public set PriceDelta(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CxlRejResponseTo(): string { return "" }
        public set CxlRejResponseTo(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public get EncodedHeadlineLen(): string { return "" }
        public set EncodedHeadlineLen(value: string) {}
        public get EncodedHeadline(): string { return "" }
        public set EncodedHeadline(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public get EncodedSubjectLen(): string { return "" }
        public set EncodedSubjectLen(value: string) {}
        public get EncodedSubject(): string { return "" }
        public set EncodedSubject(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
        public get RefOrderID(): string { return "" }
        public set RefOrderID(value: string) {}
        public get RefOrderIDSource(): string { return "" }
        public set RefOrderIDSource(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get ListExecInstType(): string { return "" }
        public set ListExecInstType(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get ContingencyType(): string { return "" }
        public set ContingencyType(value: string) {}
        public get EncodedListExecInstLen(): string { return "" }
        public set EncodedListExecInstLen(value: string) {}
        public get EncodedListExecInst(): string { return "" }
        public set EncodedListExecInst(value: string) {}
        public get AllowableOneSidednessPct(): string { return "" }
        public set AllowableOneSidednessPct(value: string) {}
        public get AllowableOneSidednessValue(): string { return "" }
        public set AllowableOneSidednessValue(value: string) {}
        public get AllowableOneSidednessCurr(): string { return "" }
        public set AllowableOneSidednessCurr(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class AllocationInstruction extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ListStatusType(): string { return "" }
        public set ListStatusType(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get ListOrderStatus(): string { return "" }
        public set ListOrderStatus(value: string) {}
        public get ContingencyType(): string { return "" }
        public set ContingencyType(value: string) {}
        public get ListRejectReason(): string { return "" }
        public set ListRejectReason(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public get ListStatusText(): string { return "" }
        public set ListStatusText(value: string) {}
        public get EncodedListStatusTextLen(): string { return "" }
        public set EncodedListStatusTextLen(value: string) {}
        public get EncodedListStatusText(): string { return "" }
        public set EncodedListStatusText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
        public get RespondentType(): string { return "" }
        public set RespondentType(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get BidSwapPoints(): string { return "" }
        public set BidSwapPoints(value: string) {}
        public get OfferSwapPoints(): string { return "" }
        public set OfferSwapPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstMsgID(): string { return "" }
        public set SettlInstMsgID(value: string) {}
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstReqRejCode(): string { return "" }
        public set SettlInstReqRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class MarketDataRequest extends Message {
        public static MsgType: string = "V"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDUpdateType(): string { return "" }
        public set MDUpdateType(value: string) {}
        public get AggregatedBook(): string { return "" }
        public set AggregatedBook(value: string) {}
        public get OpenCloseSettlFlag(): string { return "" }
        public set OpenCloseSettlFlag(value: string) {}
        public get Scope(): string { return "" }
        public set Scope(value: string) {}
        public get MDImplicitDelete(): string { return "" }
        public set MDImplicitDelete(value: string) {}
        public get ApplQueueAction(): string { return "" }
        public set ApplQueueAction(value: string) {}
        public get ApplQueueMax(): string { return "" }
        public set ApplQueueMax(value: string) {}
        public get MDQuoteType(): string { return "" }
        public set MDQuoteType(value: string) {}
    }
    export class MarketDataSnapshotFullRefresh extends Message {
        public static MsgType: string = "W"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get MDReportID(): string { return "" }
        public set MDReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MDSubBookType(): string { return "" }
        public set MDSubBookType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDFeedType(): string { return "" }
        public set MDFeedType(value: string) {}
        public get RefreshIndicator(): string { return "" }
        public set RefreshIndicator(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get NetChgPrevDay(): string { return "" }
        public set NetChgPrevDay(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataIncrementalRefresh extends Message {
        public static MsgType: string = "X"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MDFeedType(): string { return "" }
        public set MDFeedType(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataRequestReject extends Message {
        public static MsgType: string = "Y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get MDReqRejReason(): string { return "" }
        public set MDReqRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteCancel extends Message {
        public static MsgType: string = "Z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class QuoteStatusRequest extends Message {
        public static MsgType: string = "a"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class MassQuoteAcknowledgement extends Message {
        public static MsgType: string = "b"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionRequest extends Message {
        public static MsgType: string = "c"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityRequestType(): string { return "" }
        public set SecurityRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityDefinition extends Message {
        public static MsgType: string = "d"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityStatusRequest extends Message {
        public static MsgType: string = "e"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class SecurityStatus extends Message {
        public static MsgType: string = "f"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SecurityTradingStatus(): string { return "" }
        public set SecurityTradingStatus(value: string) {}
        public get SecurityTradingEvent(): string { return "" }
        public set SecurityTradingEvent(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get HaltReasonChar(): string { return "" }
        public set HaltReasonChar(value: string) {}
        public get InViewOfCommon(): string { return "" }
        public set InViewOfCommon(value: string) {}
        public get DueToRelated(): string { return "" }
        public set DueToRelated(value: string) {}
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get BuyVolume(): string { return "" }
        public set BuyVolume(value: string) {}
        public get SellVolume(): string { return "" }
        public set SellVolume(value: string) {}
        public get HighPx(): string { return "" }
        public set HighPx(value: string) {}
        public get LowPx(): string { return "" }
        public set LowPx(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Adjustment(): string { return "" }
        public set Adjustment(value: string) {}
        public get FirstPx(): string { return "" }
        public set FirstPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionStatusRequest extends Message {
        public static MsgType: string = "g"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
    }
    export class TradingSessionStatus extends Message {
        public static MsgType: string = "h"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get TradSesStatus(): string { return "" }
        public set TradSesStatus(value: string) {}
        public get TradSesEvent(): string { return "" }
        public set TradSesEvent(value: string) {}
        public get TradSesStatusRejReason(): string { return "" }
        public set TradSesStatusRejReason(value: string) {}
        public get TradSesStartTime(): string { return "" }
        public set TradSesStartTime(value: string) {}
        public get TradSesOpenTime(): string { return "" }
        public set TradSesOpenTime(value: string) {}
        public get TradSesPreCloseTime(): string { return "" }
        public set TradSesPreCloseTime(value: string) {}
        public get TradSesCloseTime(): string { return "" }
        public set TradSesCloseTime(value: string) {}
        public get TradSesEndTime(): string { return "" }
        public set TradSesEndTime(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MassQuote extends Message {
        public static MsgType: string = "i"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DefBidSize(): string { return "" }
        public set DefBidSize(value: string) {}
        public get DefOfferSize(): string { return "" }
        public set DefOfferSize(value: string) {}
    }
    export class BusinessMessageReject extends Message {
        public static MsgType: string = "j"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get RefApplVerID(): string { return "" }
        public set RefApplVerID(value: string) {}
        public get RefApplExtID(): string { return "" }
        public set RefApplExtID(value: string) {}
        public get RefCstmApplVerID(): string { return "" }
        public set RefCstmApplVerID(value: string) {}
        public get BusinessRejectRefID(): string { return "" }
        public set BusinessRejectRefID(value: string) {}
        public get BusinessRejectReason(): string { return "" }
        public set BusinessRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidRequest extends Message {
        public static MsgType: string = "k"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidRequestTransType(): string { return "" }
        public set BidRequestTransType(value: string) {}
        public get ListName(): string { return "" }
        public set ListName(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get NumTickets(): string { return "" }
        public set NumTickets(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SideValue1(): string { return "" }
        public set SideValue1(value: string) {}
        public get SideValue2(): string { return "" }
        public set SideValue2(value: string) {}
        public get LiquidityIndType(): string { return "" }
        public set LiquidityIndType(value: string) {}
        public get WtAverageLiquidity(): string { return "" }
        public set WtAverageLiquidity(value: string) {}
        public get ExchangeForPhysical(): string { return "" }
        public set ExchangeForPhysical(value: string) {}
        public get OutMainCntryUIndex(): string { return "" }
        public set OutMainCntryUIndex(value: string) {}
        public get CrossPercent(): string { return "" }
        public set CrossPercent(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get IncTaxInd(): string { return "" }
        public set IncTaxInd(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get NumBidders(): string { return "" }
        public set NumBidders(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get BidTradeType(): string { return "" }
        public set BidTradeType(value: string) {}
        public get BasisPxType(): string { return "" }
        public set BasisPxType(value: string) {}
        public get StrikeTime(): string { return "" }
        public set StrikeTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidResponse extends Message {
        public static MsgType: string = "l"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
    }
    export class ListStrikePrice extends Message {
        public static MsgType: string = "m"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TotNoStrikes(): string { return "" }
        public set TotNoStrikes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class RegistrationInstructions extends Message {
        public static MsgType: string = "o"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistAcctType(): string { return "" }
        public set RegistAcctType(value: string) {}
        public get TaxAdvantageType(): string { return "" }
        public set TaxAdvantageType(value: string) {}
        public get OwnershipType(): string { return "" }
        public set OwnershipType(value: string) {}
    }
    export class RegistrationInstructionsResponse extends Message {
        public static MsgType: string = "p"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get RegistRejReasonCode(): string { return "" }
        public set RegistRejReasonCode(value: string) {}
        public get RegistRejReasonText(): string { return "" }
        public set RegistRejReasonText(value: string) {}
    }
    export class OrderMassCancelRequest extends Message {
        public static MsgType: string = "q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassCancelReport extends Message {
        public static MsgType: string = "r"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get MassActionReportID(): string { return "" }
        public set MassActionReportID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get MassCancelResponse(): string { return "" }
        public set MassCancelResponse(value: string) {}
        public get MassCancelRejectReason(): string { return "" }
        public set MassCancelRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NewOrderCross extends Message {
        public static MsgType: string = "s"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelReplaceRequest extends Message {
        public static MsgType: string = "t"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelRequest extends Message {
        public static MsgType: string = "u"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class SecurityTypeRequest extends Message {
        public static MsgType: string = "v"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
    }
    export class SecurityTypes extends Message {
        public static MsgType: string = "w"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get TotNoSecurityTypes(): string { return "" }
        public set TotNoSecurityTypes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityListRequest extends Message {
        public static MsgType: string = "x"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityList extends Message {
        public static MsgType: string = "y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class DerivativeSecurityListRequest extends Message {
        public static MsgType: string = "z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class DerivativeSecurityList extends Message {
        public static MsgType: string = "AA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class NewOrderMultileg extends Message {
        public static MsgType: string = "AB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get SwapPoints(): string { return "" }
        public set SwapPoints(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get MultilegModel(): string { return "" }
        public set MultilegModel(value: string) {}
        public get MultilegPriceMethod(): string { return "" }
        public set MultilegPriceMethod(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get RefOrderID(): string { return "" }
        public set RefOrderID(value: string) {}
        public get RefOrderIDSource(): string { return "" }
        public set RefOrderIDSource(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class MultilegOrderCancelReplace extends Message {
        public static MsgType: string = "AC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get SwapPoints(): string { return "" }
        public set SwapPoints(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get MultilegModel(): string { return "" }
        public set MultilegModel(value: string) {}
        public get MultilegPriceMethod(): string { return "" }
        public set MultilegPriceMethod(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class TradeCaptureReportRequest extends Message {
        public static MsgType: string = "AD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
    }
    export class TradeCaptureReport extends Message {
        public static MsgType: string = "AE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get OrigTradeHandlingInstr(): string { return "" }
        public set OrigTradeHandlingInstr(value: string) {}
        public get OrigTradeDate(): string { return "" }
        public set OrigTradeDate(value: string) {}
        public get OrigTradeID(): string { return "" }
        public set OrigTradeID(value: string) {}
        public get OrigSecondaryTradeID(): string { return "" }
        public set OrigSecondaryTradeID(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AsOfIndicator(): string { return "" }
        public set AsOfIndicator(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get UnderlyingSettlementDate(): string { return "" }
        public set UnderlyingSettlementDate(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get OrderCategory(): string { return "" }
        public set OrderCategory(value: string) {}
        public get Volatility(): string { return "" }
        public set Volatility(value: string) {}
        public get DividendYield(): string { return "" }
        public set DividendYield(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get CurrencyRatio(): string { return "" }
        public set CurrencyRatio(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get TradePublishIndicator(): string { return "" }
        public set TradePublishIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
        public get TierCode(): string { return "" }
        public set TierCode(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get TZTransactTime(): string { return "" }
        public set TZTransactTime(value: string) {}
        public get ReportedPxDiff(): string { return "" }
        public set ReportedPxDiff(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get RejectText(): string { return "" }
        public set RejectText(value: string) {}
        public get FeeMultiplier(): string { return "" }
        public set FeeMultiplier(value: string) {}
    }
    export class OrderMassStatusRequest extends Message {
        public static MsgType: string = "AF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get MassStatusReqType(): string { return "" }
        public set MassStatusReqType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class QuoteRequestReject extends Message {
        public static MsgType: string = "AG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get QuoteRequestRejectReason(): string { return "" }
        public set QuoteRequestRejectReason(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
        public get RespondentType(): string { return "" }
        public set RespondentType(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RFQRequest extends Message {
        public static MsgType: string = "AH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
    }
    export class QuoteStatusReport extends Message {
        public static MsgType: string = "AI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteResponse extends Message {
        public static MsgType: string = "AJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteRespType(): string { return "" }
        public set QuoteRespType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
    }
    export class Confirmation extends Message {
        public static MsgType: string = "AK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get ConfirmRefID(): string { return "" }
        public set ConfirmRefID(value: string) {}
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmTransType(): string { return "" }
        public set ConfirmTransType(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get ConfirmStatus(): string { return "" }
        public set ConfirmStatus(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocQty(): string { return "" }
        public set AllocQty(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get ReportedPx(): string { return "" }
        public set ReportedPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get MaturityNetMoney(): string { return "" }
        public set MaturityNetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SharedCommission(): string { return "" }
        public set SharedCommission(value: string) {}
    }
    export class PositionMaintenanceRequest extends Message {
        public static MsgType: string = "AL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
    }
    export class PositionMaintenanceReport extends Message {
        public static MsgType: string = "AM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintStatus(): string { return "" }
        public set PosMaintStatus(value: string) {}
        public get PosMaintResult(): string { return "" }
        public set PosMaintResult(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositions extends Message {
        public static MsgType: string = "AN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositionsAck extends Message {
        public static MsgType: string = "AO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get PosReqStatus(): string { return "" }
        public set PosReqStatus(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class PositionReport extends Message {
        public static MsgType: string = "AP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get DeliveryDate(): string { return "" }
        public set DeliveryDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradeCaptureReportRequestAck extends Message {
        public static MsgType: string = "AQ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get TradeRequestResult(): string { return "" }
        public set TradeRequestResult(value: string) {}
        public get TradeRequestStatus(): string { return "" }
        public set TradeRequestStatus(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
    }
    export class TradeCaptureReportAck extends Message {
        public static MsgType: string = "AR"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get OrigTradeHandlingInstr(): string { return "" }
        public set OrigTradeHandlingInstr(value: string) {}
        public get OrigTradeDate(): string { return "" }
        public set OrigTradeDate(value: string) {}
        public get OrigTradeID(): string { return "" }
        public set OrigTradeID(value: string) {}
        public get OrigSecondaryTradeID(): string { return "" }
        public set OrigSecondaryTradeID(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeReportRejectReason(): string { return "" }
        public set TradeReportRejectReason(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get TradePublishIndicator(): string { return "" }
        public set TradePublishIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get AsOfIndicator(): string { return "" }
        public set AsOfIndicator(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get TierCode(): string { return "" }
        public set TierCode(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get RptSys(): string { return "" }
        public set RptSys(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get FeeMultiplier(): string { return "" }
        public set FeeMultiplier(value: string) {}
    }
    export class AllocationReport extends Message {
        public static MsgType: string = "AS"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocReportRefID(): string { return "" }
        public set AllocReportRefID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationReportAck extends Message {
        public static MsgType: string = "AT"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationAck extends Message {
        public static MsgType: string = "AU"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AffirmStatus(): string { return "" }
        public set AffirmStatus(value: string) {}
        public get ConfirmRejReason(): string { return "" }
        public set ConfirmRejReason(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructionRequest extends Message {
        public static MsgType: string = "AV"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get CFICode(): string { return "" }
        public set CFICode(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
    }
    export class AssignmentReport extends Message {
        public static MsgType: string = "AW"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AsgnRptID(): string { return "" }
        public set AsgnRptID(value: string) {}
        public get TotNumAssignmentReports(): string { return "" }
        public set TotNumAssignmentReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get UnderlyingSettlPrice(): string { return "" }
        public set UnderlyingSettlPrice(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get AssignmentMethod(): string { return "" }
        public set AssignmentMethod(value: string) {}
        public get AssignmentUnit(): string { return "" }
        public set AssignmentUnit(value: string) {}
        public get OpenInterest(): string { return "" }
        public set OpenInterest(value: string) {}
        public get ExerciseMethod(): string { return "" }
        public set ExerciseMethod(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralRequest extends Message {
        public static MsgType: string = "AX"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralAssignment extends Message {
        public static MsgType: string = "AY"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRefID(): string { return "" }
        public set CollAsgnRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralResponse extends Message {
        public static MsgType: string = "AZ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRespID(): string { return "" }
        public set CollRespID(value: string) {}
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRespType(): string { return "" }
        public set CollAsgnRespType(value: string) {}
        public get CollAsgnRejectReason(): string { return "" }
        public set CollAsgnRejectReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CollApplType(): string { return "" }
        public set CollApplType(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralReport extends Message {
        public static MsgType: string = "BA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRptID(): string { return "" }
        public set CollRptID(value: string) {}
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CollApplType(): string { return "" }
        public set CollApplType(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CollStatus(): string { return "" }
        public set CollStatus(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralInquiry extends Message {
        public static MsgType: string = "BB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NetworkCounterpartySystemStatusRequest extends Message {
        public static MsgType: string = "BC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkRequestType(): string { return "" }
        public set NetworkRequestType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
    }
    export class NetworkCounterpartySystemStatusResponse extends Message {
        public static MsgType: string = "BD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkStatusResponseType(): string { return "" }
        public set NetworkStatusResponseType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
        public get NetworkResponseID(): string { return "" }
        public set NetworkResponseID(value: string) {}
        public get LastNetworkResponseID(): string { return "" }
        public set LastNetworkResponseID(value: string) {}
    }
    export class UserRequest extends Message {
        public static MsgType: string = "BE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get UserRequestType(): string { return "" }
        public set UserRequestType(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get Password(): string { return "" }
        public set Password(value: string) {}
        public get NewPassword(): string { return "" }
        public set NewPassword(value: string) {}
        public get EncryptedPasswordMethod(): string { return "" }
        public set EncryptedPasswordMethod(value: string) {}
        public get EncryptedPasswordLen(): string { return "" }
        public set EncryptedPasswordLen(value: string) {}
        public get EncryptedPassword(): string { return "" }
        public set EncryptedPassword(value: string) {}
        public get EncryptedNewPasswordLen(): string { return "" }
        public set EncryptedNewPasswordLen(value: string) {}
        public get EncryptedNewPassword(): string { return "" }
        public set EncryptedNewPassword(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class UserResponse extends Message {
        public static MsgType: string = "BF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get UserStatus(): string { return "" }
        public set UserStatus(value: string) {}
        public get UserStatusText(): string { return "" }
        public set UserStatusText(value: string) {}
    }
    export class CollateralInquiryAck extends Message {
        public static MsgType: string = "BG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get CollInquiryStatus(): string { return "" }
        public set CollInquiryStatus(value: string) {}
        public get CollInquiryResult(): string { return "" }
        public set CollInquiryResult(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationRequest extends Message {
        public static MsgType: string = "BH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ContraryIntentionReport extends Message {
        public static MsgType: string = "BO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ContIntRptID(): string { return "" }
        public set ContIntRptID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get LateIndicator(): string { return "" }
        public set LateIndicator(value: string) {}
        public get InputSource(): string { return "" }
        public set InputSource(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionUpdateReport extends Message {
        public static MsgType: string = "BP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityListUpdateReport extends Message {
        public static MsgType: string = "BK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AdjustedPositionReport extends Message {
        public static MsgType: string = "BL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
    }
    export class AllocationInstructionAlert extends Message {
        public static MsgType: string = "BM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
    }
    export class ExecutionAcknowledgement extends Message {
        public static MsgType: string = "BN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ExecAckStatus(): string { return "" }
        public set ExecAckStatus(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionList extends Message {
        public static MsgType: string = "BJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
    }
    export class TradingSessionListRequest extends Message {
        public static MsgType: string = "BI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SettlementObligationReport extends Message {
        public static MsgType: string = "BQ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlementCycleNo(): string { return "" }
        public set SettlementCycleNo(value: string) {}
        public get SettlObligMsgID(): string { return "" }
        public set SettlObligMsgID(value: string) {}
        public get SettlObligMode(): string { return "" }
        public set SettlObligMode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class DerivativeSecurityListUpdateReport extends Message {
        public static MsgType: string = "BR"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class TradingSessionListUpdateReport extends Message {
        public static MsgType: string = "BS"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get TradSesUpdateAction(): string { return "" }
        public set TradSesUpdateAction(value: string) {}
    }
    export class MarketDefinitionRequest extends Message {
        public static MsgType: string = "BT"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MarketReqID(): string { return "" }
        public set MarketReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get ParentMktSegmID(): string { return "" }
        public set ParentMktSegmID(value: string) {}
    }
    export class MarketDefinition extends Message {
        public static MsgType: string = "BU"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MarketReportID(): string { return "" }
        public set MarketReportID(value: string) {}
        public get MarketReqID(): string { return "" }
        public set MarketReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get MarketSegmentDesc(): string { return "" }
        public set MarketSegmentDesc(value: string) {}
        public get EncodedMktSegmDescLen(): string { return "" }
        public set EncodedMktSegmDescLen(value: string) {}
        public get EncodedMktSegmDesc(): string { return "" }
        public set EncodedMktSegmDesc(value: string) {}
        public get ParentMktSegmID(): string { return "" }
        public set ParentMktSegmID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MarketDefinitionUpdateReport extends Message {
        public static MsgType: string = "BV"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MarketReportID(): string { return "" }
        public set MarketReportID(value: string) {}
        public get MarketReqID(): string { return "" }
        public set MarketReqID(value: string) {}
        public get MarketUpdateAction(): string { return "" }
        public set MarketUpdateAction(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get MarketSegmentDesc(): string { return "" }
        public set MarketSegmentDesc(value: string) {}
        public get EncodedMktSegmDescLen(): string { return "" }
        public set EncodedMktSegmDescLen(value: string) {}
        public get EncodedMktSegmDesc(): string { return "" }
        public set EncodedMktSegmDesc(value: string) {}
        public get ParentMktSegmID(): string { return "" }
        public set ParentMktSegmID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ApplicationMessageRequest extends Message {
        public static MsgType: string = "BW"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ApplReqID(): string { return "" }
        public set ApplReqID(value: string) {}
        public get ApplReqType(): string { return "" }
        public set ApplReqType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ApplicationMessageRequestAck extends Message {
        public static MsgType: string = "BX"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ApplResponseID(): string { return "" }
        public set ApplResponseID(value: string) {}
        public get ApplReqID(): string { return "" }
        public set ApplReqID(value: string) {}
        public get ApplReqType(): string { return "" }
        public set ApplReqType(value: string) {}
        public get ApplResponseType(): string { return "" }
        public set ApplResponseType(value: string) {}
        public get ApplTotalMessageCount(): string { return "" }
        public set ApplTotalMessageCount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ApplicationMessageReport extends Message {
        public static MsgType: string = "BY"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ApplReportID(): string { return "" }
        public set ApplReportID(value: string) {}
        public get ApplReportType(): string { return "" }
        public set ApplReportType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassActionReport extends Message {
        public static MsgType: string = "BZ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassActionReportID(): string { return "" }
        public set MassActionReportID(value: string) {}
        public get MassActionType(): string { return "" }
        public set MassActionType(value: string) {}
        public get MassActionScope(): string { return "" }
        public set MassActionScope(value: string) {}
        public get MassActionResponse(): string { return "" }
        public set MassActionResponse(value: string) {}
        public get MassActionRejectReason(): string { return "" }
        public set MassActionRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassActionRequest extends Message {
        public static MsgType: string = "CA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassActionType(): string { return "" }
        public set MassActionType(value: string) {}
        public get MassActionScope(): string { return "" }
        public set MassActionScope(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class UserNotification extends Message {
        public static MsgType: string = "CB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserStatus(): string { return "" }
        public set UserStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
}
namespace FIX50SP2 {
    export class IOI extends Message {
        public static MsgType: string = "6"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get IOITransType(): string { return "" }
        public set IOITransType(value: string) {}
        public get IOIRefID(): string { return "" }
        public set IOIRefID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get IOIQty(): string { return "" }
        public set IOIQty(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get IOIQltyInd(): string { return "" }
        public set IOIQltyInd(value: string) {}
        public get IOINaturalFlag(): string { return "" }
        public set IOINaturalFlag(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
    }
    export class Advertisement extends Message {
        public static MsgType: string = "7"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AdvId(): string { return "" }
        public set AdvId(value: string) {}
        public get AdvTransType(): string { return "" }
        public set AdvTransType(value: string) {}
        public get AdvRefID(): string { return "" }
        public set AdvRefID(value: string) {}
        public get AdvSide(): string { return "" }
        public set AdvSide(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class ExecutionReport extends Message {
        public static MsgType: string = "8"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecRefID(): string { return "" }
        public set ExecRefID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrdRejReason(): string { return "" }
        public set OrdRejReason(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get OrderCategory(): string { return "" }
        public set OrderCategory(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LotType(): string { return "" }
        public set LotType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get PeggedPrice(): string { return "" }
        public set PeggedPrice(value: string) {}
        public get PeggedRefPrice(): string { return "" }
        public set PeggedRefPrice(value: string) {}
        public get DiscretionPrice(): string { return "" }
        public set DiscretionPrice(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get TargetStrategyPerformance(): string { return "" }
        public set TargetStrategyPerformance(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get AggressorIndicator(): string { return "" }
        public set AggressorIndicator(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get UnderlyingLastQty(): string { return "" }
        public set UnderlyingLastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get UnderlyingLastPx(): string { return "" }
        public set UnderlyingLastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get LastCapacity(): string { return "" }
        public set LastCapacity(value: string) {}
        public get LeavesQty(): string { return "" }
        public set LeavesQty(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get DayOrderQty(): string { return "" }
        public set DayOrderQty(value: string) {}
        public get DayCumQty(): string { return "" }
        public set DayCumQty(value: string) {}
        public get DayAvgPx(): string { return "" }
        public set DayAvgPx(value: string) {}
        public get TotNoFills(): string { return "" }
        public set TotNoFills(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ReportToExch(): string { return "" }
        public set ReportToExch(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradedFlatSwitch(): string { return "" }
        public set TradedFlatSwitch(value: string) {}
        public get BasisFeatureDate(): string { return "" }
        public set BasisFeatureDate(value: string) {}
        public get BasisFeaturePrice(): string { return "" }
        public set BasisFeaturePrice(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get LastForwardPoints2(): string { return "" }
        public set LastForwardPoints2(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get ExecValuationPoint(): string { return "" }
        public set ExecValuationPoint(value: string) {}
        public get ExecPriceType(): string { return "" }
        public set ExecPriceType(value: string) {}
        public get ExecPriceAdjustment(): string { return "" }
        public set ExecPriceAdjustment(value: string) {}
        public get PriorityIndicator(): string { return "" }
        public set PriorityIndicator(value: string) {}
        public get PriceImprovement(): string { return "" }
        public set PriceImprovement(value: string) {}
        public get LastLiquidityInd(): string { return "" }
        public set LastLiquidityInd(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get DividendYield(): string { return "" }
        public set DividendYield(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
        public get Volatility(): string { return "" }
        public set Volatility(value: string) {}
        public get TimeToExpiration(): string { return "" }
        public set TimeToExpiration(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get PriceDelta(): string { return "" }
        public set PriceDelta(value: string) {}
    }
    export class OrderCancelReject extends Message {
        public static MsgType: string = "9"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrdStatus(): string { return "" }
        public set OrdStatus(value: string) {}
        public get WorkingIndicator(): string { return "" }
        public set WorkingIndicator(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CxlRejResponseTo(): string { return "" }
        public set CxlRejResponseTo(value: string) {}
        public get CxlRejReason(): string { return "" }
        public set CxlRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class News extends Message {
        public static MsgType: string = "B"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Urgency(): string { return "" }
        public set Urgency(value: string) {}
        public get Headline(): string { return "" }
        public set Headline(value: string) {}
        public get EncodedHeadlineLen(): string { return "" }
        public set EncodedHeadlineLen(value: string) {}
        public get EncodedHeadline(): string { return "" }
        public set EncodedHeadline(value: string) {}
        public get URLLink(): string { return "" }
        public set URLLink(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
        public get NewsID(): string { return "" }
        public set NewsID(value: string) {}
        public get NewsCategory(): string { return "" }
        public set NewsCategory(value: string) {}
        public get LanguageCode(): string { return "" }
        public set LanguageCode(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
    }
    export class Email extends Message {
        public static MsgType: string = "C"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get EmailThreadID(): string { return "" }
        public set EmailThreadID(value: string) {}
        public get EmailType(): string { return "" }
        public set EmailType(value: string) {}
        public get OrigTime(): string { return "" }
        public set OrigTime(value: string) {}
        public get Subject(): string { return "" }
        public set Subject(value: string) {}
        public get EncodedSubjectLen(): string { return "" }
        public set EncodedSubjectLen(value: string) {}
        public get EncodedSubject(): string { return "" }
        public set EncodedSubject(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class NewOrderSingle extends Message {
        public static MsgType: string = "D"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
        public get RefOrderID(): string { return "" }
        public set RefOrderID(value: string) {}
        public get RefOrderIDSource(): string { return "" }
        public set RefOrderIDSource(value: string) {}
    }
    export class NewOrderList extends Message {
        public static MsgType: string = "E"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get ListExecInstType(): string { return "" }
        public set ListExecInstType(value: string) {}
        public get ListExecInst(): string { return "" }
        public set ListExecInst(value: string) {}
        public get ContingencyType(): string { return "" }
        public set ContingencyType(value: string) {}
        public get EncodedListExecInstLen(): string { return "" }
        public set EncodedListExecInstLen(value: string) {}
        public get EncodedListExecInst(): string { return "" }
        public set EncodedListExecInst(value: string) {}
        public get AllowableOneSidednessPct(): string { return "" }
        public set AllowableOneSidednessPct(value: string) {}
        public get AllowableOneSidednessValue(): string { return "" }
        public set AllowableOneSidednessValue(value: string) {}
        public get AllowableOneSidednessCurr(): string { return "" }
        public set AllowableOneSidednessCurr(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class OrderCancelRequest extends Message {
        public static MsgType: string = "F"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderCancelReplaceRequest extends Message {
        public static MsgType: string = "G"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Price2(): string { return "" }
        public set Price2(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get ManualOrderIndicator(): string { return "" }
        public set ManualOrderIndicator(value: string) {}
        public get CustDirectedOrder(): string { return "" }
        public set CustDirectedOrder(value: string) {}
        public get ReceivedDeptID(): string { return "" }
        public set ReceivedDeptID(value: string) {}
        public get CustOrderHandlingInst(): string { return "" }
        public set CustOrderHandlingInst(value: string) {}
        public get OrderHandlingInstSource(): string { return "" }
        public set OrderHandlingInstSource(value: string) {}
    }
    export class OrderStatusRequest extends Message {
        public static MsgType: string = "H"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrdStatusReqID(): string { return "" }
        public set OrdStatusReqID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class AllocationInstruction extends Message {
        public static MsgType: string = "J"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
    }
    export class ListCancelRequest extends Message {
        public static MsgType: string = "K"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListExecute extends Message {
        public static MsgType: string = "L"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatusRequest extends Message {
        public static MsgType: string = "M"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ListStatus extends Message {
        public static MsgType: string = "N"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get ListStatusType(): string { return "" }
        public set ListStatusType(value: string) {}
        public get NoRpts(): string { return "" }
        public set NoRpts(value: string) {}
        public get ListOrderStatus(): string { return "" }
        public set ListOrderStatus(value: string) {}
        public get ContingencyType(): string { return "" }
        public set ContingencyType(value: string) {}
        public get ListRejectReason(): string { return "" }
        public set ListRejectReason(value: string) {}
        public get RptSeq(): string { return "" }
        public set RptSeq(value: string) {}
        public get ListStatusText(): string { return "" }
        public set ListStatusText(value: string) {}
        public get EncodedListStatusTextLen(): string { return "" }
        public set EncodedListStatusTextLen(value: string) {}
        public get EncodedListStatusText(): string { return "" }
        public set EncodedListStatusText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TotNoOrders(): string { return "" }
        public set TotNoOrders(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationInstructionAck extends Message {
        public static MsgType: string = "P"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class DontKnowTrade extends Message {
        public static MsgType: string = "Q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteRequest extends Message {
        public static MsgType: string = "R"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
        public get RespondentType(): string { return "" }
        public set RespondentType(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
    }
    export class Quote extends Message {
        public static MsgType: string = "S"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get BidSwapPoints(): string { return "" }
        public set BidSwapPoints(value: string) {}
        public get OfferSwapPoints(): string { return "" }
        public set OfferSwapPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
    }
    export class SettlementInstructions extends Message {
        public static MsgType: string = "T"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstMsgID(): string { return "" }
        public set SettlInstMsgID(value: string) {}
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get SettlInstMode(): string { return "" }
        public set SettlInstMode(value: string) {}
        public get SettlInstReqRejCode(): string { return "" }
        public set SettlInstReqRejCode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class MarketDataRequest extends Message {
        public static MsgType: string = "V"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDUpdateType(): string { return "" }
        public set MDUpdateType(value: string) {}
        public get AggregatedBook(): string { return "" }
        public set AggregatedBook(value: string) {}
        public get OpenCloseSettlFlag(): string { return "" }
        public set OpenCloseSettlFlag(value: string) {}
        public get Scope(): string { return "" }
        public set Scope(value: string) {}
        public get MDImplicitDelete(): string { return "" }
        public set MDImplicitDelete(value: string) {}
        public get ApplQueueAction(): string { return "" }
        public set ApplQueueAction(value: string) {}
        public get ApplQueueMax(): string { return "" }
        public set ApplQueueMax(value: string) {}
        public get MDQuoteType(): string { return "" }
        public set MDQuoteType(value: string) {}
    }
    export class MarketDataSnapshotFullRefresh extends Message {
        public static MsgType: string = "W"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get MDReportID(): string { return "" }
        public set MDReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MDSubBookType(): string { return "" }
        public set MDSubBookType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get MDFeedType(): string { return "" }
        public set MDFeedType(value: string) {}
        public get RefreshIndicator(): string { return "" }
        public set RefreshIndicator(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get NetChgPrevDay(): string { return "" }
        public set NetChgPrevDay(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
        public get MDStreamID(): string { return "" }
        public set MDStreamID(value: string) {}
    }
    export class MarketDataIncrementalRefresh extends Message {
        public static MsgType: string = "X"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MDFeedType(): string { return "" }
        public set MDFeedType(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get ApplQueueDepth(): string { return "" }
        public set ApplQueueDepth(value: string) {}
        public get ApplQueueResolution(): string { return "" }
        public set ApplQueueResolution(value: string) {}
    }
    export class MarketDataRequestReject extends Message {
        public static MsgType: string = "Y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MDReqID(): string { return "" }
        public set MDReqID(value: string) {}
        public get MDReqRejReason(): string { return "" }
        public set MDReqRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class QuoteCancel extends Message {
        public static MsgType: string = "Z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
    }
    export class QuoteStatusRequest extends Message {
        public static MsgType: string = "a"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class MassQuoteAcknowledgement extends Message {
        public static MsgType: string = "b"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionRequest extends Message {
        public static MsgType: string = "c"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityRequestType(): string { return "" }
        public set SecurityRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get ExpirationCycle(): string { return "" }
        public set ExpirationCycle(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityDefinition extends Message {
        public static MsgType: string = "d"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class SecurityStatusRequest extends Message {
        public static MsgType: string = "e"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
    }
    export class SecurityStatus extends Message {
        public static MsgType: string = "f"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityStatusReqID(): string { return "" }
        public set SecurityStatusReqID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SecurityTradingStatus(): string { return "" }
        public set SecurityTradingStatus(value: string) {}
        public get SecurityTradingEvent(): string { return "" }
        public set SecurityTradingEvent(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get HaltReasonInt(): string { return "" }
        public set HaltReasonInt(value: string) {}
        public get InViewOfCommon(): string { return "" }
        public set InViewOfCommon(value: string) {}
        public get DueToRelated(): string { return "" }
        public set DueToRelated(value: string) {}
        public get MDBookType(): string { return "" }
        public set MDBookType(value: string) {}
        public get MarketDepth(): string { return "" }
        public set MarketDepth(value: string) {}
        public get BuyVolume(): string { return "" }
        public set BuyVolume(value: string) {}
        public get SellVolume(): string { return "" }
        public set SellVolume(value: string) {}
        public get HighPx(): string { return "" }
        public set HighPx(value: string) {}
        public get LowPx(): string { return "" }
        public set LowPx(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Adjustment(): string { return "" }
        public set Adjustment(value: string) {}
        public get FirstPx(): string { return "" }
        public set FirstPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionStatusRequest extends Message {
        public static MsgType: string = "g"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
    }
    export class TradingSessionStatus extends Message {
        public static MsgType: string = "h"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get TradSesStatus(): string { return "" }
        public set TradSesStatus(value: string) {}
        public get TradSesEvent(): string { return "" }
        public set TradSesEvent(value: string) {}
        public get TradSesStatusRejReason(): string { return "" }
        public set TradSesStatusRejReason(value: string) {}
        public get TradSesStartTime(): string { return "" }
        public set TradSesStartTime(value: string) {}
        public get TradSesOpenTime(): string { return "" }
        public set TradSesOpenTime(value: string) {}
        public get TradSesPreCloseTime(): string { return "" }
        public set TradSesPreCloseTime(value: string) {}
        public get TradSesCloseTime(): string { return "" }
        public set TradSesCloseTime(value: string) {}
        public get TradSesEndTime(): string { return "" }
        public set TradSesEndTime(value: string) {}
        public get TotalVolumeTraded(): string { return "" }
        public set TotalVolumeTraded(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MassQuote extends Message {
        public static MsgType: string = "i"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteResponseLevel(): string { return "" }
        public set QuoteResponseLevel(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DefBidSize(): string { return "" }
        public set DefBidSize(value: string) {}
        public get DefOfferSize(): string { return "" }
        public set DefOfferSize(value: string) {}
    }
    export class BusinessMessageReject extends Message {
        public static MsgType: string = "j"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RefSeqNum(): string { return "" }
        public set RefSeqNum(value: string) {}
        public get RefMsgType(): string { return "" }
        public set RefMsgType(value: string) {}
        public get RefApplVerID(): string { return "" }
        public set RefApplVerID(value: string) {}
        public get RefApplExtID(): string { return "" }
        public set RefApplExtID(value: string) {}
        public get RefCstmApplVerID(): string { return "" }
        public set RefCstmApplVerID(value: string) {}
        public get BusinessRejectRefID(): string { return "" }
        public set BusinessRejectRefID(value: string) {}
        public get BusinessRejectReason(): string { return "" }
        public set BusinessRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidRequest extends Message {
        public static MsgType: string = "k"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
        public get BidRequestTransType(): string { return "" }
        public set BidRequestTransType(value: string) {}
        public get ListName(): string { return "" }
        public set ListName(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get BidType(): string { return "" }
        public set BidType(value: string) {}
        public get NumTickets(): string { return "" }
        public set NumTickets(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SideValue1(): string { return "" }
        public set SideValue1(value: string) {}
        public get SideValue2(): string { return "" }
        public set SideValue2(value: string) {}
        public get LiquidityIndType(): string { return "" }
        public set LiquidityIndType(value: string) {}
        public get WtAverageLiquidity(): string { return "" }
        public set WtAverageLiquidity(value: string) {}
        public get ExchangeForPhysical(): string { return "" }
        public set ExchangeForPhysical(value: string) {}
        public get OutMainCntryUIndex(): string { return "" }
        public set OutMainCntryUIndex(value: string) {}
        public get CrossPercent(): string { return "" }
        public set CrossPercent(value: string) {}
        public get ProgRptReqs(): string { return "" }
        public set ProgRptReqs(value: string) {}
        public get ProgPeriodInterval(): string { return "" }
        public set ProgPeriodInterval(value: string) {}
        public get IncTaxInd(): string { return "" }
        public set IncTaxInd(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get NumBidders(): string { return "" }
        public set NumBidders(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get BidTradeType(): string { return "" }
        public set BidTradeType(value: string) {}
        public get BasisPxType(): string { return "" }
        public set BasisPxType(value: string) {}
        public get StrikeTime(): string { return "" }
        public set StrikeTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class BidResponse extends Message {
        public static MsgType: string = "l"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get BidID(): string { return "" }
        public set BidID(value: string) {}
        public get ClientBidID(): string { return "" }
        public set ClientBidID(value: string) {}
    }
    export class ListStrikePrice extends Message {
        public static MsgType: string = "m"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ListID(): string { return "" }
        public set ListID(value: string) {}
        public get TotNoStrikes(): string { return "" }
        public set TotNoStrikes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class RegistrationInstructions extends Message {
        public static MsgType: string = "o"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistAcctType(): string { return "" }
        public set RegistAcctType(value: string) {}
        public get TaxAdvantageType(): string { return "" }
        public set TaxAdvantageType(value: string) {}
        public get OwnershipType(): string { return "" }
        public set OwnershipType(value: string) {}
    }
    export class RegistrationInstructionsResponse extends Message {
        public static MsgType: string = "p"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get RegistTransType(): string { return "" }
        public set RegistTransType(value: string) {}
        public get RegistRefID(): string { return "" }
        public set RegistRefID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get RegistRejReasonCode(): string { return "" }
        public set RegistRejReasonCode(value: string) {}
        public get RegistRejReasonText(): string { return "" }
        public set RegistRejReasonText(value: string) {}
    }
    export class OrderMassCancelRequest extends Message {
        public static MsgType: string = "q"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassCancelReport extends Message {
        public static MsgType: string = "r"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get MassActionReportID(): string { return "" }
        public set MassActionReportID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get MassCancelRequestType(): string { return "" }
        public set MassCancelRequestType(value: string) {}
        public get MassCancelResponse(): string { return "" }
        public set MassCancelResponse(value: string) {}
        public get MassCancelRejectReason(): string { return "" }
        public set MassCancelRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NewOrderCross extends Message {
        public static MsgType: string = "s"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelReplaceRequest extends Message {
        public static MsgType: string = "t"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TransBkdTime(): string { return "" }
        public set TransBkdTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
    }
    export class CrossOrderCancelRequest extends Message {
        public static MsgType: string = "u"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get CrossID(): string { return "" }
        public set CrossID(value: string) {}
        public get OrigCrossID(): string { return "" }
        public set OrigCrossID(value: string) {}
        public get HostCrossID(): string { return "" }
        public set HostCrossID(value: string) {}
        public get CrossType(): string { return "" }
        public set CrossType(value: string) {}
        public get CrossPrioritization(): string { return "" }
        public set CrossPrioritization(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class SecurityTypeRequest extends Message {
        public static MsgType: string = "v"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
    }
    export class SecurityTypes extends Message {
        public static MsgType: string = "w"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get TotNoSecurityTypes(): string { return "" }
        public set TotNoSecurityTypes(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SecurityListRequest extends Message {
        public static MsgType: string = "x"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SecurityListID(): string { return "" }
        public set SecurityListID(value: string) {}
        public get SecurityListType(): string { return "" }
        public set SecurityListType(value: string) {}
        public get SecurityListTypeSource(): string { return "" }
        public set SecurityListTypeSource(value: string) {}
    }
    export class SecurityList extends Message {
        public static MsgType: string = "y"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get SecurityListID(): string { return "" }
        public set SecurityListID(value: string) {}
        public get SecurityListRefID(): string { return "" }
        public set SecurityListRefID(value: string) {}
        public get SecurityListDesc(): string { return "" }
        public set SecurityListDesc(value: string) {}
        public get EncodedSecurityListDescLen(): string { return "" }
        public set EncodedSecurityListDescLen(value: string) {}
        public get EncodedSecurityListDesc(): string { return "" }
        public set EncodedSecurityListDesc(value: string) {}
        public get SecurityListType(): string { return "" }
        public set SecurityListType(value: string) {}
        public get SecurityListTypeSource(): string { return "" }
        public set SecurityListTypeSource(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class DerivativeSecurityListRequest extends Message {
        public static MsgType: string = "z"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityListRequestType(): string { return "" }
        public set SecurityListRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get SecuritySubType(): string { return "" }
        public set SecuritySubType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class DerivativeSecurityList extends Message {
        public static MsgType: string = "AA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class NewOrderMultileg extends Message {
        public static MsgType: string = "AB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get SwapPoints(): string { return "" }
        public set SwapPoints(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get MultilegModel(): string { return "" }
        public set MultilegModel(value: string) {}
        public get MultilegPriceMethod(): string { return "" }
        public set MultilegPriceMethod(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get RefOrderID(): string { return "" }
        public set RefOrderID(value: string) {}
        public get RefOrderIDSource(): string { return "" }
        public set RefOrderIDSource(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class MultilegOrderCancelReplace extends Message {
        public static MsgType: string = "AC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get OrigClOrdID(): string { return "" }
        public set OrigClOrdID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get ClOrdLinkID(): string { return "" }
        public set ClOrdLinkID(value: string) {}
        public get OrigOrdModTime(): string { return "" }
        public set OrigOrdModTime(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get DayBookingInst(): string { return "" }
        public set DayBookingInst(value: string) {}
        public get BookingUnit(): string { return "" }
        public set BookingUnit(value: string) {}
        public get PreallocMethod(): string { return "" }
        public set PreallocMethod(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get CashMargin(): string { return "" }
        public set CashMargin(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get HandlInst(): string { return "" }
        public set HandlInst(value: string) {}
        public get ExecInst(): string { return "" }
        public set ExecInst(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get MatchIncrement(): string { return "" }
        public set MatchIncrement(value: string) {}
        public get MaxPriceLevels(): string { return "" }
        public set MaxPriceLevels(value: string) {}
        public get MaxFloor(): string { return "" }
        public set MaxFloor(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get PrevClosePx(): string { return "" }
        public set PrevClosePx(value: string) {}
        public get SwapPoints(): string { return "" }
        public set SwapPoints(value: string) {}
        public get LocateReqd(): string { return "" }
        public set LocateReqd(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get MultilegModel(): string { return "" }
        public set MultilegModel(value: string) {}
        public get MultilegPriceMethod(): string { return "" }
        public set MultilegPriceMethod(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceProtectionScope(): string { return "" }
        public set PriceProtectionScope(value: string) {}
        public get StopPx(): string { return "" }
        public set StopPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ComplianceID(): string { return "" }
        public set ComplianceID(value: string) {}
        public get SolicitedFlag(): string { return "" }
        public set SolicitedFlag(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get TimeInForce(): string { return "" }
        public set TimeInForce(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get GTBookingInst(): string { return "" }
        public set GTBookingInst(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ForexReq(): string { return "" }
        public set ForexReq(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get CoveredOrUncovered(): string { return "" }
        public set CoveredOrUncovered(value: string) {}
        public get MaxShow(): string { return "" }
        public set MaxShow(value: string) {}
        public get TargetStrategy(): string { return "" }
        public set TargetStrategy(value: string) {}
        public get TargetStrategyParameters(): string { return "" }
        public set TargetStrategyParameters(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get ParticipationRate(): string { return "" }
        public set ParticipationRate(value: string) {}
        public get CancellationRights(): string { return "" }
        public set CancellationRights(value: string) {}
        public get MoneyLaunderingStatus(): string { return "" }
        public set MoneyLaunderingStatus(value: string) {}
        public get RegistID(): string { return "" }
        public set RegistID(value: string) {}
        public get Designation(): string { return "" }
        public set Designation(value: string) {}
        public get MultiLegRptTypeReq(): string { return "" }
        public set MultiLegRptTypeReq(value: string) {}
    }
    export class TradeCaptureReportRequest extends Message {
        public static MsgType: string = "AD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get TimeBracket(): string { return "" }
        public set TimeBracket(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
    }
    export class TradeCaptureReport extends Message {
        public static MsgType: string = "AE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get OrigTradeHandlingInstr(): string { return "" }
        public set OrigTradeHandlingInstr(value: string) {}
        public get OrigTradeDate(): string { return "" }
        public set OrigTradeDate(value: string) {}
        public get OrigTradeID(): string { return "" }
        public set OrigTradeID(value: string) {}
        public get OrigSecondaryTradeID(): string { return "" }
        public set OrigSecondaryTradeID(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AsOfIndicator(): string { return "" }
        public set AsOfIndicator(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get UnderlyingSettlementDate(): string { return "" }
        public set UnderlyingSettlementDate(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Volatility(): string { return "" }
        public set Volatility(value: string) {}
        public get DividendYield(): string { return "" }
        public set DividendYield(value: string) {}
        public get RiskFreeRate(): string { return "" }
        public set RiskFreeRate(value: string) {}
        public get CurrencyRatio(): string { return "" }
        public set CurrencyRatio(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get TradePublishIndicator(): string { return "" }
        public set TradePublishIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
        public get TierCode(): string { return "" }
        public set TierCode(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get TZTransactTime(): string { return "" }
        public set TZTransactTime(value: string) {}
        public get ReportedPxDiff(): string { return "" }
        public set ReportedPxDiff(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get RejectText(): string { return "" }
        public set RejectText(value: string) {}
        public get FeeMultiplier(): string { return "" }
        public set FeeMultiplier(value: string) {}
        public get VenueType(): string { return "" }
        public set VenueType(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
    }
    export class OrderMassStatusRequest extends Message {
        public static MsgType: string = "AF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MassStatusReqID(): string { return "" }
        public set MassStatusReqID(value: string) {}
        public get MassStatusReqType(): string { return "" }
        public set MassStatusReqType(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
    }
    export class QuoteRequestReject extends Message {
        public static MsgType: string = "AG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get QuoteRequestRejectReason(): string { return "" }
        public set QuoteRequestRejectReason(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
        public get RespondentType(): string { return "" }
        public set RespondentType(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RFQRequest extends Message {
        public static MsgType: string = "AH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get RFQReqID(): string { return "" }
        public set RFQReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get PrivateQuote(): string { return "" }
        public set PrivateQuote(value: string) {}
    }
    export class QuoteStatusReport extends Message {
        public static MsgType: string = "AI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteStatusReqID(): string { return "" }
        public set QuoteStatusReqID(value: string) {}
        public get QuoteReqID(): string { return "" }
        public set QuoteReqID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get QuoteCancelType(): string { return "" }
        public set QuoteCancelType(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get QuoteStatus(): string { return "" }
        public set QuoteStatus(value: string) {}
        public get QuoteRejectReason(): string { return "" }
        public set QuoteRejectReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
    }
    export class QuoteResponse extends Message {
        public static MsgType: string = "AJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get QuoteRespID(): string { return "" }
        public set QuoteRespID(value: string) {}
        public get QuoteID(): string { return "" }
        public set QuoteID(value: string) {}
        public get QuoteMsgID(): string { return "" }
        public set QuoteMsgID(value: string) {}
        public get QuoteRespType(): string { return "" }
        public set QuoteRespType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderCapacity(): string { return "" }
        public set OrderCapacity(value: string) {}
        public get OrderRestrictions(): string { return "" }
        public set OrderRestrictions(value: string) {}
        public get IOIID(): string { return "" }
        public set IOIID(value: string) {}
        public get QuoteType(): string { return "" }
        public set QuoteType(value: string) {}
        public get PreTradeAnonymity(): string { return "" }
        public set PreTradeAnonymity(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get MinQty(): string { return "" }
        public set MinQty(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SettlDate2(): string { return "" }
        public set SettlDate2(value: string) {}
        public get OrderQty2(): string { return "" }
        public set OrderQty2(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get BidPx(): string { return "" }
        public set BidPx(value: string) {}
        public get OfferPx(): string { return "" }
        public set OfferPx(value: string) {}
        public get MktBidPx(): string { return "" }
        public set MktBidPx(value: string) {}
        public get MktOfferPx(): string { return "" }
        public set MktOfferPx(value: string) {}
        public get MinBidSize(): string { return "" }
        public set MinBidSize(value: string) {}
        public get BidSize(): string { return "" }
        public set BidSize(value: string) {}
        public get MinOfferSize(): string { return "" }
        public set MinOfferSize(value: string) {}
        public get OfferSize(): string { return "" }
        public set OfferSize(value: string) {}
        public get ValidUntilTime(): string { return "" }
        public set ValidUntilTime(value: string) {}
        public get BidSpotRate(): string { return "" }
        public set BidSpotRate(value: string) {}
        public get OfferSpotRate(): string { return "" }
        public set OfferSpotRate(value: string) {}
        public get BidForwardPoints(): string { return "" }
        public set BidForwardPoints(value: string) {}
        public get OfferForwardPoints(): string { return "" }
        public set OfferForwardPoints(value: string) {}
        public get MidPx(): string { return "" }
        public set MidPx(value: string) {}
        public get BidYield(): string { return "" }
        public set BidYield(value: string) {}
        public get MidYield(): string { return "" }
        public set MidYield(value: string) {}
        public get OfferYield(): string { return "" }
        public set OfferYield(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get OrdType(): string { return "" }
        public set OrdType(value: string) {}
        public get BidForwardPoints2(): string { return "" }
        public set BidForwardPoints2(value: string) {}
        public get OfferForwardPoints2(): string { return "" }
        public set OfferForwardPoints2(value: string) {}
        public get SettlCurrBidFxRate(): string { return "" }
        public set SettlCurrBidFxRate(value: string) {}
        public get SettlCurrOfferFxRate(): string { return "" }
        public set SettlCurrOfferFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get Commission(): string { return "" }
        public set Commission(value: string) {}
        public get CommType(): string { return "" }
        public set CommType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get ExDestination(): string { return "" }
        public set ExDestination(value: string) {}
        public get ExDestinationIDSource(): string { return "" }
        public set ExDestinationIDSource(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
    }
    export class Confirmation extends Message {
        public static MsgType: string = "AK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get ConfirmRefID(): string { return "" }
        public set ConfirmRefID(value: string) {}
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmTransType(): string { return "" }
        public set ConfirmTransType(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get ConfirmStatus(): string { return "" }
        public set ConfirmStatus(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get AllocQty(): string { return "" }
        public set AllocQty(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get ReportedPx(): string { return "" }
        public set ReportedPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ProcessCode(): string { return "" }
        public set ProcessCode(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get ExDate(): string { return "" }
        public set ExDate(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get MaturityNetMoney(): string { return "" }
        public set MaturityNetMoney(value: string) {}
        public get SettlCurrAmt(): string { return "" }
        public set SettlCurrAmt(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get SettlCurrFxRate(): string { return "" }
        public set SettlCurrFxRate(value: string) {}
        public get SettlCurrFxRateCalc(): string { return "" }
        public set SettlCurrFxRateCalc(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get SharedCommission(): string { return "" }
        public set SharedCommission(value: string) {}
    }
    export class PositionMaintenanceRequest extends Message {
        public static MsgType: string = "AL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
    }
    export class PositionMaintenanceReport extends Message {
        public static MsgType: string = "AM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosTransType(): string { return "" }
        public set PosTransType(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosMaintAction(): string { return "" }
        public set PosMaintAction(value: string) {}
        public get OrigPosReqRefID(): string { return "" }
        public set OrigPosReqRefID(value: string) {}
        public get PosMaintStatus(): string { return "" }
        public set PosMaintStatus(value: string) {}
        public get PosMaintResult(): string { return "" }
        public set PosMaintResult(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get ContraryInstructionIndicator(): string { return "" }
        public set ContraryInstructionIndicator(value: string) {}
        public get PriorSpreadIndicator(): string { return "" }
        public set PriorSpreadIndicator(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AdjustmentType(): string { return "" }
        public set AdjustmentType(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositions extends Message {
        public static MsgType: string = "AN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class RequestForPositionsAck extends Message {
        public static MsgType: string = "AO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get PosReqStatus(): string { return "" }
        public set PosReqStatus(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class PositionReport extends Message {
        public static MsgType: string = "AP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotalNumPosReports(): string { return "" }
        public set TotalNumPosReports(value: string) {}
        public get PosReqResult(): string { return "" }
        public set PosReqResult(value: string) {}
        public get UnsolicitedIndicator(): string { return "" }
        public set UnsolicitedIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AcctIDSource(): string { return "" }
        public set AcctIDSource(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get RegistStatus(): string { return "" }
        public set RegistStatus(value: string) {}
        public get DeliveryDate(): string { return "" }
        public set DeliveryDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ModelType(): string { return "" }
        public set ModelType(value: string) {}
        public get PriceDelta(): string { return "" }
        public set PriceDelta(value: string) {}
    }
    export class TradeCaptureReportRequestAck extends Message {
        public static MsgType: string = "AQ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeRequestID(): string { return "" }
        public set TradeRequestID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeRequestType(): string { return "" }
        public set TradeRequestType(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TotNumTradeReports(): string { return "" }
        public set TotNumTradeReports(value: string) {}
        public get TradeRequestResult(): string { return "" }
        public set TradeRequestResult(value: string) {}
        public get TradeRequestStatus(): string { return "" }
        public set TradeRequestStatus(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
    }
    export class TradeCaptureReportAck extends Message {
        public static MsgType: string = "AR"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradeReportID(): string { return "" }
        public set TradeReportID(value: string) {}
        public get TradeID(): string { return "" }
        public set TradeID(value: string) {}
        public get SecondaryTradeID(): string { return "" }
        public set SecondaryTradeID(value: string) {}
        public get FirmTradeID(): string { return "" }
        public set FirmTradeID(value: string) {}
        public get SecondaryFirmTradeID(): string { return "" }
        public set SecondaryFirmTradeID(value: string) {}
        public get TradeReportTransType(): string { return "" }
        public set TradeReportTransType(value: string) {}
        public get TradeReportType(): string { return "" }
        public set TradeReportType(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get SecondaryTrdType(): string { return "" }
        public set SecondaryTrdType(value: string) {}
        public get TradeHandlingInstr(): string { return "" }
        public set TradeHandlingInstr(value: string) {}
        public get OrigTradeHandlingInstr(): string { return "" }
        public set OrigTradeHandlingInstr(value: string) {}
        public get OrigTradeDate(): string { return "" }
        public set OrigTradeDate(value: string) {}
        public get OrigTradeID(): string { return "" }
        public set OrigTradeID(value: string) {}
        public get OrigSecondaryTradeID(): string { return "" }
        public set OrigSecondaryTradeID(value: string) {}
        public get TransferReason(): string { return "" }
        public set TransferReason(value: string) {}
        public get ExecType(): string { return "" }
        public set ExecType(value: string) {}
        public get TradeReportRefID(): string { return "" }
        public set TradeReportRefID(value: string) {}
        public get SecondaryTradeReportRefID(): string { return "" }
        public set SecondaryTradeReportRefID(value: string) {}
        public get TrdRptStatus(): string { return "" }
        public set TrdRptStatus(value: string) {}
        public get TradeReportRejectReason(): string { return "" }
        public set TradeReportRejectReason(value: string) {}
        public get SecondaryTradeReportID(): string { return "" }
        public set SecondaryTradeReportID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get TradeLinkID(): string { return "" }
        public set TradeLinkID(value: string) {}
        public get TrdMatchID(): string { return "" }
        public set TrdMatchID(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get SecondaryExecID(): string { return "" }
        public set SecondaryExecID(value: string) {}
        public get ExecRestatementReason(): string { return "" }
        public set ExecRestatementReason(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get UnderlyingTradingSessionID(): string { return "" }
        public set UnderlyingTradingSessionID(value: string) {}
        public get UnderlyingTradingSessionSubID(): string { return "" }
        public set UnderlyingTradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get CalculatedCcyLastQty(): string { return "" }
        public set CalculatedCcyLastQty(value: string) {}
        public get LastSwapPoints(): string { return "" }
        public set LastSwapPoints(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get LastSpotRate(): string { return "" }
        public set LastSpotRate(value: string) {}
        public get LastForwardPoints(): string { return "" }
        public set LastForwardPoints(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get TradeLegRefID(): string { return "" }
        public set TradeLegRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get CopyMsgIndicator(): string { return "" }
        public set CopyMsgIndicator(value: string) {}
        public get PublishTrdIndicator(): string { return "" }
        public set PublishTrdIndicator(value: string) {}
        public get TradePublishIndicator(): string { return "" }
        public set TradePublishIndicator(value: string) {}
        public get ShortSaleReason(): string { return "" }
        public set ShortSaleReason(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get AsOfIndicator(): string { return "" }
        public set AsOfIndicator(value: string) {}
        public get ClearingFeeIndicator(): string { return "" }
        public set ClearingFeeIndicator(value: string) {}
        public get TierCode(): string { return "" }
        public set TierCode(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get RptSys(): string { return "" }
        public set RptSys(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get FeeMultiplier(): string { return "" }
        public set FeeMultiplier(value: string) {}
        public get VenueType(): string { return "" }
        public set VenueType(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
    }
    export class AllocationReport extends Message {
        public static MsgType: string = "AS"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocReportRefID(): string { return "" }
        public set AllocReportRefID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get TradeInputDevice(): string { return "" }
        public set TradeInputDevice(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
    }
    export class AllocationReportAck extends Message {
        public static MsgType: string = "AT"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocReportID(): string { return "" }
        public set AllocReportID(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocStatus(): string { return "" }
        public set AllocStatus(value: string) {}
        public get AllocRejCode(): string { return "" }
        public set AllocRejCode(value: string) {}
        public get AllocReportType(): string { return "" }
        public set AllocReportType(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationAck extends Message {
        public static MsgType: string = "AU"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmID(): string { return "" }
        public set ConfirmID(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AffirmStatus(): string { return "" }
        public set AffirmStatus(value: string) {}
        public get ConfirmRejReason(): string { return "" }
        public set ConfirmRejReason(value: string) {}
        public get MatchStatus(): string { return "" }
        public set MatchStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SettlementInstructionRequest extends Message {
        public static MsgType: string = "AV"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SettlInstReqID(): string { return "" }
        public set SettlInstReqID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Product(): string { return "" }
        public set Product(value: string) {}
        public get SecurityType(): string { return "" }
        public set SecurityType(value: string) {}
        public get CFICode(): string { return "" }
        public set CFICode(value: string) {}
        public get SettlCurrency(): string { return "" }
        public set SettlCurrency(value: string) {}
        public get EffectiveTime(): string { return "" }
        public set EffectiveTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get LastUpdateTime(): string { return "" }
        public set LastUpdateTime(value: string) {}
        public get StandInstDbType(): string { return "" }
        public set StandInstDbType(value: string) {}
        public get StandInstDbName(): string { return "" }
        public set StandInstDbName(value: string) {}
        public get StandInstDbID(): string { return "" }
        public set StandInstDbID(value: string) {}
    }
    export class AssignmentReport extends Message {
        public static MsgType: string = "AW"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AsgnRptID(): string { return "" }
        public set AsgnRptID(value: string) {}
        public get TotNumAssignmentReports(): string { return "" }
        public set TotNumAssignmentReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get ThresholdAmount(): string { return "" }
        public set ThresholdAmount(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get SettlPriceType(): string { return "" }
        public set SettlPriceType(value: string) {}
        public get UnderlyingSettlPrice(): string { return "" }
        public set UnderlyingSettlPrice(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
        public get ExpireDate(): string { return "" }
        public set ExpireDate(value: string) {}
        public get AssignmentMethod(): string { return "" }
        public set AssignmentMethod(value: string) {}
        public get AssignmentUnit(): string { return "" }
        public set AssignmentUnit(value: string) {}
        public get OpenInterest(): string { return "" }
        public set OpenInterest(value: string) {}
        public get ExerciseMethod(): string { return "" }
        public set ExerciseMethod(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get PosReqID(): string { return "" }
        public set PosReqID(value: string) {}
    }
    export class CollateralRequest extends Message {
        public static MsgType: string = "AX"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralAssignment extends Message {
        public static MsgType: string = "AY"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRefID(): string { return "" }
        public set CollAsgnRefID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get ExpireTime(): string { return "" }
        public set ExpireTime(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralResponse extends Message {
        public static MsgType: string = "AZ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRespID(): string { return "" }
        public set CollRespID(value: string) {}
        public get CollAsgnID(): string { return "" }
        public set CollAsgnID(value: string) {}
        public get CollReqID(): string { return "" }
        public set CollReqID(value: string) {}
        public get CollAsgnReason(): string { return "" }
        public set CollAsgnReason(value: string) {}
        public get CollAsgnTransType(): string { return "" }
        public set CollAsgnTransType(value: string) {}
        public get CollAsgnRespType(): string { return "" }
        public set CollAsgnRespType(value: string) {}
        public get CollAsgnRejectReason(): string { return "" }
        public set CollAsgnRejectReason(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CollApplType(): string { return "" }
        public set CollApplType(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralReport extends Message {
        public static MsgType: string = "BA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollRptID(): string { return "" }
        public set CollRptID(value: string) {}
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get CollApplType(): string { return "" }
        public set CollApplType(value: string) {}
        public get FinancialStatus(): string { return "" }
        public set FinancialStatus(value: string) {}
        public get CollStatus(): string { return "" }
        public set CollStatus(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get LastRptRequested(): string { return "" }
        public set LastRptRequested(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class CollateralInquiry extends Message {
        public static MsgType: string = "BB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get MarginExcess(): string { return "" }
        public set MarginExcess(value: string) {}
        public get TotalNetValue(): string { return "" }
        public set TotalNetValue(value: string) {}
        public get CashOutstanding(): string { return "" }
        public set CashOutstanding(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Price(): string { return "" }
        public set Price(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class NetworkCounterpartySystemStatusRequest extends Message {
        public static MsgType: string = "BC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkRequestType(): string { return "" }
        public set NetworkRequestType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
    }
    export class NetworkCounterpartySystemStatusResponse extends Message {
        public static MsgType: string = "BD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get NetworkStatusResponseType(): string { return "" }
        public set NetworkStatusResponseType(value: string) {}
        public get NetworkRequestID(): string { return "" }
        public set NetworkRequestID(value: string) {}
        public get NetworkResponseID(): string { return "" }
        public set NetworkResponseID(value: string) {}
        public get LastNetworkResponseID(): string { return "" }
        public set LastNetworkResponseID(value: string) {}
    }
    export class UserRequest extends Message {
        public static MsgType: string = "BE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get UserRequestType(): string { return "" }
        public set UserRequestType(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get Password(): string { return "" }
        public set Password(value: string) {}
        public get NewPassword(): string { return "" }
        public set NewPassword(value: string) {}
        public get EncryptedPasswordMethod(): string { return "" }
        public set EncryptedPasswordMethod(value: string) {}
        public get EncryptedPasswordLen(): string { return "" }
        public set EncryptedPasswordLen(value: string) {}
        public get EncryptedPassword(): string { return "" }
        public set EncryptedPassword(value: string) {}
        public get EncryptedNewPasswordLen(): string { return "" }
        public set EncryptedNewPasswordLen(value: string) {}
        public get EncryptedNewPassword(): string { return "" }
        public set EncryptedNewPassword(value: string) {}
        public get RawDataLength(): string { return "" }
        public set RawDataLength(value: string) {}
        public get RawData(): string { return "" }
        public set RawData(value: string) {}
    }
    export class UserResponse extends Message {
        public static MsgType: string = "BF"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserRequestID(): string { return "" }
        public set UserRequestID(value: string) {}
        public get Username(): string { return "" }
        public set Username(value: string) {}
        public get UserStatus(): string { return "" }
        public set UserStatus(value: string) {}
        public get UserStatusText(): string { return "" }
        public set UserStatusText(value: string) {}
    }
    export class CollateralInquiryAck extends Message {
        public static MsgType: string = "BG"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get CollInquiryID(): string { return "" }
        public set CollInquiryID(value: string) {}
        public get CollInquiryStatus(): string { return "" }
        public set CollInquiryStatus(value: string) {}
        public get CollInquiryResult(): string { return "" }
        public set CollInquiryResult(value: string) {}
        public get TotNumReports(): string { return "" }
        public set TotNumReports(value: string) {}
        public get Account(): string { return "" }
        public set Account(value: string) {}
        public get AccountType(): string { return "" }
        public set AccountType(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get SettlSessSubID(): string { return "" }
        public set SettlSessSubID(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get ResponseTransportType(): string { return "" }
        public set ResponseTransportType(value: string) {}
        public get ResponseDestination(): string { return "" }
        public set ResponseDestination(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ConfirmationRequest extends Message {
        public static MsgType: string = "BH"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ConfirmReqID(): string { return "" }
        public set ConfirmReqID(value: string) {}
        public get ConfirmType(): string { return "" }
        public set ConfirmType(value: string) {}
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get IndividualAllocID(): string { return "" }
        public set IndividualAllocID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get AllocAccount(): string { return "" }
        public set AllocAccount(value: string) {}
        public get AllocAcctIDSource(): string { return "" }
        public set AllocAcctIDSource(value: string) {}
        public get AllocAccountType(): string { return "" }
        public set AllocAccountType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ContraryIntentionReport extends Message {
        public static MsgType: string = "BO"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ContIntRptID(): string { return "" }
        public set ContIntRptID(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get LateIndicator(): string { return "" }
        public set LateIndicator(value: string) {}
        public get InputSource(): string { return "" }
        public set InputSource(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class SecurityDefinitionUpdateReport extends Message {
        public static MsgType: string = "BP"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityResponseType(): string { return "" }
        public set SecurityResponseType(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class SecurityListUpdateReport extends Message {
        public static MsgType: string = "BK"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReportID(): string { return "" }
        public set SecurityReportID(value: string) {}
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get CorporateAction(): string { return "" }
        public set CorporateAction(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get SecurityListID(): string { return "" }
        public set SecurityListID(value: string) {}
        public get SecurityListRefID(): string { return "" }
        public set SecurityListRefID(value: string) {}
        public get SecurityListDesc(): string { return "" }
        public set SecurityListDesc(value: string) {}
        public get EncodedSecurityListDescLen(): string { return "" }
        public set EncodedSecurityListDescLen(value: string) {}
        public get EncodedSecurityListDesc(): string { return "" }
        public set EncodedSecurityListDesc(value: string) {}
        public get SecurityListType(): string { return "" }
        public set SecurityListType(value: string) {}
        public get SecurityListTypeSource(): string { return "" }
        public set SecurityListTypeSource(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class AdjustedPositionReport extends Message {
        public static MsgType: string = "BL"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get PosMaintRptID(): string { return "" }
        public set PosMaintRptID(value: string) {}
        public get PosReqType(): string { return "" }
        public set PosReqType(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlSessID(): string { return "" }
        public set SettlSessID(value: string) {}
        public get PosMaintRptRefID(): string { return "" }
        public set PosMaintRptRefID(value: string) {}
        public get SettlPrice(): string { return "" }
        public set SettlPrice(value: string) {}
        public get PriorSettlPrice(): string { return "" }
        public set PriorSettlPrice(value: string) {}
    }
    export class AllocationInstructionAlert extends Message {
        public static MsgType: string = "BM"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get AllocID(): string { return "" }
        public set AllocID(value: string) {}
        public get AllocTransType(): string { return "" }
        public set AllocTransType(value: string) {}
        public get AllocType(): string { return "" }
        public set AllocType(value: string) {}
        public get SecondaryAllocID(): string { return "" }
        public set SecondaryAllocID(value: string) {}
        public get RefAllocID(): string { return "" }
        public set RefAllocID(value: string) {}
        public get AllocCancReplaceReason(): string { return "" }
        public set AllocCancReplaceReason(value: string) {}
        public get AllocIntermedReqType(): string { return "" }
        public set AllocIntermedReqType(value: string) {}
        public get AllocLinkID(): string { return "" }
        public set AllocLinkID(value: string) {}
        public get AllocLinkType(): string { return "" }
        public set AllocLinkType(value: string) {}
        public get BookingRefID(): string { return "" }
        public set BookingRefID(value: string) {}
        public get AllocNoOrdersType(): string { return "" }
        public set AllocNoOrdersType(value: string) {}
        public get PreviouslyReported(): string { return "" }
        public set PreviouslyReported(value: string) {}
        public get ReversalIndicator(): string { return "" }
        public set ReversalIndicator(value: string) {}
        public get MatchType(): string { return "" }
        public set MatchType(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get Quantity(): string { return "" }
        public set Quantity(value: string) {}
        public get QtyType(): string { return "" }
        public set QtyType(value: string) {}
        public get LastMkt(): string { return "" }
        public set LastMkt(value: string) {}
        public get TradeOriginationDate(): string { return "" }
        public set TradeOriginationDate(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get AvgParPx(): string { return "" }
        public set AvgParPx(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get AvgPxPrecision(): string { return "" }
        public set AvgPxPrecision(value: string) {}
        public get TradeDate(): string { return "" }
        public set TradeDate(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get SettlType(): string { return "" }
        public set SettlType(value: string) {}
        public get SettlDate(): string { return "" }
        public set SettlDate(value: string) {}
        public get BookingType(): string { return "" }
        public set BookingType(value: string) {}
        public get GrossTradeAmt(): string { return "" }
        public set GrossTradeAmt(value: string) {}
        public get Concession(): string { return "" }
        public set Concession(value: string) {}
        public get TotalTakedown(): string { return "" }
        public set TotalTakedown(value: string) {}
        public get NetMoney(): string { return "" }
        public set NetMoney(value: string) {}
        public get PositionEffect(): string { return "" }
        public set PositionEffect(value: string) {}
        public get AutoAcceptIndicator(): string { return "" }
        public set AutoAcceptIndicator(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get NumDaysInterest(): string { return "" }
        public set NumDaysInterest(value: string) {}
        public get AccruedInterestRate(): string { return "" }
        public set AccruedInterestRate(value: string) {}
        public get AccruedInterestAmt(): string { return "" }
        public set AccruedInterestAmt(value: string) {}
        public get TotalAccruedInterestAmt(): string { return "" }
        public set TotalAccruedInterestAmt(value: string) {}
        public get InterestAtMaturity(): string { return "" }
        public set InterestAtMaturity(value: string) {}
        public get EndAccruedInterestAmt(): string { return "" }
        public set EndAccruedInterestAmt(value: string) {}
        public get StartCash(): string { return "" }
        public set StartCash(value: string) {}
        public get EndCash(): string { return "" }
        public set EndCash(value: string) {}
        public get LegalConfirm(): string { return "" }
        public set LegalConfirm(value: string) {}
        public get TotNoAllocs(): string { return "" }
        public set TotNoAllocs(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get AvgPxIndicator(): string { return "" }
        public set AvgPxIndicator(value: string) {}
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get TrdType(): string { return "" }
        public set TrdType(value: string) {}
        public get TrdSubType(): string { return "" }
        public set TrdSubType(value: string) {}
        public get CustOrderCapacity(): string { return "" }
        public set CustOrderCapacity(value: string) {}
        public get TradeInputSource(): string { return "" }
        public set TradeInputSource(value: string) {}
        public get MultiLegReportingType(): string { return "" }
        public set MultiLegReportingType(value: string) {}
        public get MessageEventSource(): string { return "" }
        public set MessageEventSource(value: string) {}
        public get RndPx(): string { return "" }
        public set RndPx(value: string) {}
    }
    export class ExecutionAcknowledgement extends Message {
        public static MsgType: string = "BN"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get OrderID(): string { return "" }
        public set OrderID(value: string) {}
        public get SecondaryOrderID(): string { return "" }
        public set SecondaryOrderID(value: string) {}
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get ExecAckStatus(): string { return "" }
        public set ExecAckStatus(value: string) {}
        public get ExecID(): string { return "" }
        public set ExecID(value: string) {}
        public get DKReason(): string { return "" }
        public set DKReason(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get LastQty(): string { return "" }
        public set LastQty(value: string) {}
        public get LastPx(): string { return "" }
        public set LastPx(value: string) {}
        public get PriceType(): string { return "" }
        public set PriceType(value: string) {}
        public get LastParPx(): string { return "" }
        public set LastParPx(value: string) {}
        public get CumQty(): string { return "" }
        public set CumQty(value: string) {}
        public get AvgPx(): string { return "" }
        public set AvgPx(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class TradingSessionList extends Message {
        public static MsgType: string = "BJ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
    }
    export class TradingSessionListRequest extends Message {
        public static MsgType: string = "BI"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get SecurityExchange(): string { return "" }
        public set SecurityExchange(value: string) {}
        public get TradSesMethod(): string { return "" }
        public set TradSesMethod(value: string) {}
        public get TradSesMode(): string { return "" }
        public set TradSesMode(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
    }
    export class SettlementObligationReport extends Message {
        public static MsgType: string = "BQ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClearingBusinessDate(): string { return "" }
        public set ClearingBusinessDate(value: string) {}
        public get SettlementCycleNo(): string { return "" }
        public set SettlementCycleNo(value: string) {}
        public get SettlObligMsgID(): string { return "" }
        public set SettlObligMsgID(value: string) {}
        public get SettlObligMode(): string { return "" }
        public set SettlObligMode(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class DerivativeSecurityListUpdateReport extends Message {
        public static MsgType: string = "BR"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get SecurityReqID(): string { return "" }
        public set SecurityReqID(value: string) {}
        public get SecurityResponseID(): string { return "" }
        public set SecurityResponseID(value: string) {}
        public get SecurityRequestResult(): string { return "" }
        public set SecurityRequestResult(value: string) {}
        public get SecurityUpdateAction(): string { return "" }
        public set SecurityUpdateAction(value: string) {}
        public get TotNoRelatedSym(): string { return "" }
        public set TotNoRelatedSym(value: string) {}
        public get LastFragment(): string { return "" }
        public set LastFragment(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
    }
    export class TradingSessionListUpdateReport extends Message {
        public static MsgType: string = "BS"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get TradSesReqID(): string { return "" }
        public set TradSesReqID(value: string) {}
    }
    export class MarketDefinitionRequest extends Message {
        public static MsgType: string = "BT"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MarketReqID(): string { return "" }
        public set MarketReqID(value: string) {}
        public get SubscriptionRequestType(): string { return "" }
        public set SubscriptionRequestType(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get ParentMktSegmID(): string { return "" }
        public set ParentMktSegmID(value: string) {}
    }
    export class MarketDefinition extends Message {
        public static MsgType: string = "BU"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MarketReportID(): string { return "" }
        public set MarketReportID(value: string) {}
        public get MarketReqID(): string { return "" }
        public set MarketReqID(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get MarketSegmentDesc(): string { return "" }
        public set MarketSegmentDesc(value: string) {}
        public get EncodedMktSegmDescLen(): string { return "" }
        public set EncodedMktSegmDescLen(value: string) {}
        public get EncodedMktSegmDesc(): string { return "" }
        public set EncodedMktSegmDesc(value: string) {}
        public get ParentMktSegmID(): string { return "" }
        public set ParentMktSegmID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class MarketDefinitionUpdateReport extends Message {
        public static MsgType: string = "BV"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get MarketReportID(): string { return "" }
        public set MarketReportID(value: string) {}
        public get MarketReqID(): string { return "" }
        public set MarketReqID(value: string) {}
        public get MarketUpdateAction(): string { return "" }
        public set MarketUpdateAction(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get MarketSegmentDesc(): string { return "" }
        public set MarketSegmentDesc(value: string) {}
        public get EncodedMktSegmDescLen(): string { return "" }
        public set EncodedMktSegmDescLen(value: string) {}
        public get EncodedMktSegmDesc(): string { return "" }
        public set EncodedMktSegmDesc(value: string) {}
        public get ParentMktSegmID(): string { return "" }
        public set ParentMktSegmID(value: string) {}
        public get Currency(): string { return "" }
        public set Currency(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ApplicationMessageRequest extends Message {
        public static MsgType: string = "BW"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ApplReqID(): string { return "" }
        public set ApplReqID(value: string) {}
        public get ApplReqType(): string { return "" }
        public set ApplReqType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ApplicationMessageRequestAck extends Message {
        public static MsgType: string = "BX"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ApplResponseID(): string { return "" }
        public set ApplResponseID(value: string) {}
        public get ApplReqID(): string { return "" }
        public set ApplReqID(value: string) {}
        public get ApplReqType(): string { return "" }
        public set ApplReqType(value: string) {}
        public get ApplResponseType(): string { return "" }
        public set ApplResponseType(value: string) {}
        public get ApplTotalMessageCount(): string { return "" }
        public set ApplTotalMessageCount(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class ApplicationMessageReport extends Message {
        public static MsgType: string = "BY"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ApplReportID(): string { return "" }
        public set ApplReportID(value: string) {}
        public get ApplReportType(): string { return "" }
        public set ApplReportType(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
        public get ApplReqID(): string { return "" }
        public set ApplReqID(value: string) {}
    }
    export class OrderMassActionReport extends Message {
        public static MsgType: string = "BZ"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassActionReportID(): string { return "" }
        public set MassActionReportID(value: string) {}
        public get MassActionType(): string { return "" }
        public set MassActionType(value: string) {}
        public get MassActionScope(): string { return "" }
        public set MassActionScope(value: string) {}
        public get MassActionResponse(): string { return "" }
        public set MassActionResponse(value: string) {}
        public get MassActionRejectReason(): string { return "" }
        public set MassActionRejectReason(value: string) {}
        public get TotalAffectedOrders(): string { return "" }
        public set TotalAffectedOrders(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class OrderMassActionRequest extends Message {
        public static MsgType: string = "CA"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get ClOrdID(): string { return "" }
        public set ClOrdID(value: string) {}
        public get SecondaryClOrdID(): string { return "" }
        public set SecondaryClOrdID(value: string) {}
        public get MassActionType(): string { return "" }
        public set MassActionType(value: string) {}
        public get MassActionScope(): string { return "" }
        public set MassActionScope(value: string) {}
        public get MarketID(): string { return "" }
        public set MarketID(value: string) {}
        public get MarketSegmentID(): string { return "" }
        public set MarketSegmentID(value: string) {}
        public get TradingSessionID(): string { return "" }
        public set TradingSessionID(value: string) {}
        public get TradingSessionSubID(): string { return "" }
        public set TradingSessionSubID(value: string) {}
        public get Side(): string { return "" }
        public set Side(value: string) {}
        public get TransactTime(): string { return "" }
        public set TransactTime(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class UserNotification extends Message {
        public static MsgType: string = "CB"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get UserStatus(): string { return "" }
        public set UserStatus(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
    export class StreamAssignmentRequest extends Message {
        public static MsgType: string = "CC"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get StreamAsgnReqID(): string { return "" }
        public set StreamAsgnReqID(value: string) {}
        public get StreamAsgnReqType(): string { return "" }
        public set StreamAsgnReqType(value: string) {}
    }
    export class StreamAssignmentReport extends Message {
        public static MsgType: string = "CD"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get StreamAsgnRptID(): string { return "" }
        public set StreamAsgnRptID(value: string) {}
        public get StreamAsgnReqType(): string { return "" }
        public set StreamAsgnReqType(value: string) {}
        public get StreamAsgnReqID(): string { return "" }
        public set StreamAsgnReqID(value: string) {}
    }
    export class StreamAssignmentReportACK extends Message {
        public static MsgType: string = "CE"
        public static MsgCat = MsgCat.App
        constructor() { super() }
        public get StreamAsgnAckType(): string { return "" }
        public set StreamAsgnAckType(value: string) {}
        public get StreamAsgnRptID(): string { return "" }
        public set StreamAsgnRptID(value: string) {}
        public get StreamAsgnRejReason(): string { return "" }
        public set StreamAsgnRejReason(value: string) {}
        public get Text(): string { return "" }
        public set Text(value: string) {}
        public get EncodedTextLen(): string { return "" }
        public set EncodedTextLen(value: string) {}
        public get EncodedText(): string { return "" }
        public set EncodedText(value: string) {}
    }
}
